{
  "address": "0xf05DFB925280127614FfcFE765f9a6BB0BFfE5E5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "_callPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "_callPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "oldImplementations",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "newImplementations",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "allowResign",
          "type": "bool[]"
        },
        {
          "internalType": "bool[]",
          "name": "statuses",
          "type": "bool[]"
        }
      ],
      "name": "_editCErc20DelegateWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "oldImplementations",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "newImplementations",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "allowResign",
          "type": "bool[]"
        },
        {
          "internalType": "bool[]",
          "name": "statuses",
          "type": "bool[]"
        }
      ],
      "name": "_editCEtherDelegateWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "oldImplementations",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "newImplementations",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "statuses",
          "type": "bool[]"
        }
      ],
      "name": "_editComptrollerImplementationWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_latestCErc20Delegate",
      "outputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowResign",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "becomeImplementationData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_latestCEtherDelegate",
      "outputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowResign",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "becomeImplementationData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "comptroller",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "rate",
          "type": "int256"
        }
      ],
      "name": "_setCustomInterestFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultInterestFeeRate",
          "type": "uint256"
        }
      ],
      "name": "_setDefaultInterestFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowResign",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "becomeImplementationData",
          "type": "bytes"
        }
      ],
      "name": "_setLatestCErc20Delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowResign",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "becomeImplementationData",
          "type": "bytes"
        }
      ],
      "name": "_setLatestCEtherDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "_setLatestComptrollerImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minBorrowEth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxSupplyEth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxUtilizationRate",
          "type": "uint256"
        }
      ],
      "name": "_setPoolLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Contract",
          "type": "address"
        }
      ],
      "name": "_withdrawAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "cErc20DelegateWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "cEtherDelegateWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "comptrollerImplementationWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "customInterestFeeRates",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultInterestFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "constructorData",
          "type": "bytes"
        }
      ],
      "name": "deployCErc20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "constructorData",
          "type": "bytes"
        }
      ],
      "name": "deployCEther",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_defaultInterestFeeRate",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interestFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        }
      ],
      "name": "latestCErc20Delegate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        }
      ],
      "name": "latestCEtherDelegate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        }
      ],
      "name": "latestComptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupplyEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxUtilizationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minBorrowEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialLogic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialAdmin",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    }
  ],
  "transactionHash": "0x3b217f70902cbbcf56afe48a7399731cf0c7eecf090afaa0a4bcab90b8deb2d0",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x304aE8f9300e09c8B33bb1a8AE1c14A6253a5F4D",
    "contractAddress": null,
    "transactionIndex": 14,
    "gasUsed": "3133198",
    "logsBloom": "0x
    "blockHash": "0x488a13b8531f567147073a2744e142aa68cc50d5b661006e14ab6d7df28bbc8a",
    "transactionHash": "0x3b217f70902cbbcf56afe48a7399731cf0c7eecf090afaa0a4bcab90b8deb2d0",
    "logs": [],
    "blockNumber": 17416572,
    "cumulativeGasUsed": "6193829",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 7,
  "solcInputHash": "614790565b8c7986374ea2a0c06a77bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"_callPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"_callPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"oldImplementations\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"newImplementations\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"allowResign\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"}],\"name\":\"_editCErc20DelegateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"oldImplementations\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"newImplementations\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"allowResign\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"}],\"name\":\"_editCEtherDelegateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"oldImplementations\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"newImplementations\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"}],\"name\":\"_editComptrollerImplementationWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_latestCErc20Delegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowResign\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"becomeImplementationData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_latestCEtherDelegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowResign\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"becomeImplementationData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"comptroller\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"rate\",\"type\":\"int256\"}],\"name\":\"_setCustomInterestFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultInterestFeeRate\",\"type\":\"uint256\"}],\"name\":\"_setDefaultInterestFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowResign\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"becomeImplementationData\",\"type\":\"bytes\"}],\"name\":\"_setLatestCErc20Delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowResign\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"becomeImplementationData\",\"type\":\"bytes\"}],\"name\":\"_setLatestCEtherDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"_setLatestComptrollerImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minBorrowEth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupplyEth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxUtilizationRate\",\"type\":\"uint256\"}],\"name\":\"_setPoolLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Contract\",\"type\":\"address\"}],\"name\":\"_withdrawAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"cErc20DelegateWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"cEtherDelegateWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"comptrollerImplementationWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customInterestFeeRates\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultInterestFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"constructorData\",\"type\":\"bytes\"}],\"name\":\"deployCErc20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"constructorData\",\"type\":\"bytes\"}],\"name\":\"deployCEther\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_defaultInterestFeeRate\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"}],\"name\":\"latestCErc20Delegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"}],\"name\":\"latestCEtherDelegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"}],\"name\":\"latestComptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupplyEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxUtilizationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBorrowEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"David Lucid <david@rari.capital> (https://github.com/davidlucid)\",\"kind\":\"dev\",\"methods\":{\"_callPool(address[],bytes)\":{\"details\":\"Sends data to a contract.\",\"params\":{\"data\":\"The data to be sent to each of `targets`.\",\"targets\":\"The contracts to which `data` will be sent.\"}},\"_callPool(address[],bytes[])\":{\"details\":\"Sends data to a contract.\",\"params\":{\"data\":\"The data to be sent to each of `targets`.\",\"targets\":\"The contracts to which `data` will be sent.\"}},\"_editCErc20DelegateWhitelist(address[],address[],bool[],bool[])\":{\"details\":\"Adds/removes CErc20Delegate implementations to the whitelist.\",\"params\":{\"allowResign\":\"Array of `allowResign` values corresponding to `newImplementations` to be whitelisted/unwhitelisted.\",\"newImplementations\":\"Array of `CErc20Delegate` implementations to be whitelisted/unwhitelisted.\",\"oldImplementations\":\"The old `CErc20Delegate` implementation addresses to upgrade from for each `newImplementations` to upgrade to.\",\"statuses\":\"Array of whitelist statuses corresponding to `newImplementations`.\"}},\"_editCEtherDelegateWhitelist(address[],address[],bool[],bool[])\":{\"details\":\"Adds/removes CEtherDelegate implementations to the whitelist.\",\"params\":{\"allowResign\":\"Array of `allowResign` values corresponding to `newImplementations` to be whitelisted/unwhitelisted.\",\"newImplementations\":\"Array of `CEtherDelegate` implementations to be whitelisted/unwhitelisted.\",\"oldImplementations\":\"The old `CEtherDelegate` implementation addresses to upgrade from for each `newImplementations` to upgrade to.\",\"statuses\":\"Array of whitelist statuses corresponding to `newImplementations`.\"}},\"_editComptrollerImplementationWhitelist(address[],address[],bool[])\":{\"details\":\"Adds/removes Comptroller implementations to the whitelist.\",\"params\":{\"newImplementations\":\"Array of `Comptroller` implementations to be whitelisted/unwhitelisted.\",\"oldImplementations\":\"The old `Comptroller` implementation addresses to upgrade from for each `newImplementations` to upgrade to.\",\"statuses\":\"Array of whitelist statuses corresponding to `implementations`.\"}},\"_setCustomInterestFeeRate(address,int256)\":{\"details\":\"Sets the proportion of Fuse pool interest taken as a protocol fee.\",\"params\":{\"comptroller\":\"The Unitroller (Comptroller proxy) address.\",\"rate\":\"The proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\"}},\"_setDefaultInterestFeeRate(uint256)\":{\"details\":\"Sets the default proportion of Fuse pool interest taken as a protocol fee.\",\"params\":{\"_defaultInterestFeeRate\":\"The default proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\"}},\"_setLatestCErc20Delegate(address,address,bool,bytes)\":{\"details\":\"Sets the latest `CErc20Delegate` upgrade implementation address and data.\",\"params\":{\"allowResign\":\"Whether or not `resignImplementation` should be called on the old implementation before upgrade.\",\"becomeImplementationData\":\"Data passed to the new implementation via `becomeImplementation` after upgrade.\",\"newImplementation\":\"Latest `CErc20Delegate` implementation address.\",\"oldImplementation\":\"The old `CErc20Delegate` implementation address to upgrade from.\"}},\"_setLatestCEtherDelegate(address,address,bool,bytes)\":{\"details\":\"Sets the latest `CEtherDelegate` upgrade implementation address and data.\",\"params\":{\"allowResign\":\"Whether or not `resignImplementation` should be called on the old implementation before upgrade.\",\"becomeImplementationData\":\"Data passed to the new implementation via `becomeImplementation` after upgrade.\",\"newImplementation\":\"Latest `CEtherDelegate` implementation address.\",\"oldImplementation\":\"The old `CEtherDelegate` implementation address to upgrade from.\"}},\"_setLatestComptrollerImplementation(address,address)\":{\"details\":\"Sets the latest `Comptroller` upgrade implementation address.\",\"params\":{\"newImplementation\":\"Latest `Comptroller` implementation address.\",\"oldImplementation\":\"The old `Comptroller` implementation address to upgrade from.\"}},\"_setPoolLimits(uint256,uint256,uint256)\":{\"details\":\"Sets the proportion of Fuse pool interest taken as a protocol fee.\",\"params\":{\"_maxSupplyEth\":\"Maximum supply balance (in ETH) per user per Fuse pool asset.\",\"_maxUtilizationRate\":\"Maximum utilization rate (scaled by 1e18) for Fuse pool assets (only checked on new borrows, not redemptions).\",\"_minBorrowEth\":\"Minimum borrow balance (in ETH) per user per Fuse pool asset (only checked on new borrows, not redemptions).\"}},\"_withdrawAssets(address)\":{\"details\":\"Withdraws accrued fees on interest.\",\"params\":{\"erc20Contract\":\"The ERC20 token address to withdraw. Set to the zero address to withdraw ETH.\"}},\"initialize(uint256)\":{\"details\":\"Initializer that sets initial values of state variables.\",\"params\":{\"_defaultInterestFeeRate\":\"The default proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\"}},\"latestCErc20Delegate(address)\":{\"details\":\"Latest CErc20Delegate implementation for each existing implementation.\"},\"latestCEtherDelegate(address)\":{\"details\":\"Latest CEtherDelegate implementation for each existing implementation.\"},\"latestComptrollerImplementation(address)\":{\"details\":\"Latest Comptroller implementation for each existing implementation.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_latestCErc20Delegate\":{\"details\":\"Latest CErc20Delegate implementation for each existing implementation.\"},\"_latestCEtherDelegate\":{\"details\":\"Latest CEtherDelegate implementation for each existing implementation.\"},\"_latestComptrollerImplementation\":{\"details\":\"Latest Comptroller implementation for each existing implementation.\"},\"cErc20DelegateWhitelist\":{\"details\":\"Whitelisted CErc20Delegate implementation contract addresses and `allowResign` values for each existing implementation.\"},\"cEtherDelegateWhitelist\":{\"details\":\"Whitelisted CEtherDelegate implementation contract addresses and `allowResign` values for each existing implementation.\"},\"comptrollerImplementationWhitelist\":{\"details\":\"Whitelisted Comptroller implementation contract addresses for each existing implementation.\"},\"customInterestFeeRates\":{\"details\":\"A value of 0 means unset whereas a negative value means 0.\"},\"maxSupplyEth\":{\"details\":\"Maximum supply balance (in ETH) per user per Fuse pool asset. No longer used as of `Rari-Capital/compound-protocol` version `fuse-v1.1.0`.\"},\"maxUtilizationRate\":{\"details\":\"Maximum utilization rate (scaled by 1e18) for Fuse pool assets (only checked on new borrows, not redemptions). No longer used as of `Rari-Capital/compound-protocol` version `fuse-v1.1.0`.\"},\"minBorrowEth\":{\"details\":\"Minimum borrow balance (in ETH) per user per Fuse pool asset (only checked on new borrows, not redemptions).\"}},\"title\":\"FuseFeeDistributor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"customInterestFeeRates(address)\":{\"notice\":\"Maps Unitroller (Comptroller proxy) addresses to the proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\"},\"defaultInterestFeeRate()\":{\"notice\":\"The proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\"},\"interestFeeRate()\":{\"notice\":\"Returns the proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\"}},\"notice\":\"FuseFeeDistributor controls and receives protocol fees from Fuse pools and relays admin actions to Fuse pools.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FuseFeeDistributor.sol\":\"FuseFeeDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/Create2Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Create2.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2Upgradeable {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(\\n        uint256 amount,\\n        bytes32 salt,\\n        bytes memory bytecode\\n    ) internal returns (address) {\\n        address addr;\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n        return addr;\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(\\n        bytes32 salt,\\n        bytes32 bytecodeHash,\\n        address deployer\\n    ) internal pure returns (address) {\\n        bytes32 _data = keccak256(abi.encodePacked(bytes1(0xff), deployer, salt, bytecodeHash));\\n        return address(uint160(uint256(_data)));\\n    }\\n}\\n\",\"keccak256\":\"0xbdec72f55ce6d1f234cde556b3e38fc0f739f46e9288cc4ae32b9334365889db\",\"license\":\"MIT\"},\"contracts/FuseFeeDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/Create2Upgradeable.sol\\\";\\nimport \\\"./compound/CEtherDelegator.sol\\\";\\nimport \\\"./compound/CErc20Delegator.sol\\\";\\n\\n/**\\n * @title FuseFeeDistributor\\n * @author David Lucid <david@rari.capital> (https://github.com/davidlucid)\\n * @notice FuseFeeDistributor controls and receives protocol fees from Fuse pools and relays admin actions to Fuse pools.\\n */\\ncontract FuseFeeDistributor is Initializable, OwnableUpgradeable {\\n  using AddressUpgradeable for address;\\n  using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n  /**\\n   * @dev Initializer that sets initial values of state variables.\\n   * @param _defaultInterestFeeRate The default proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\\n   */\\n  function initialize(uint256 _defaultInterestFeeRate) public initializer {\\n    require(_defaultInterestFeeRate <= 1e18, \\\"Interest fee rate cannot be more than 100%.\\\");\\n    __Ownable_init();\\n    defaultInterestFeeRate = _defaultInterestFeeRate;\\n    maxSupplyEth = type(uint256).max;\\n    maxUtilizationRate = type(uint256).max;\\n  }\\n\\n  /**\\n   * @notice The proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\\n   */\\n  uint256 public defaultInterestFeeRate;\\n\\n  /**\\n   * @dev Sets the default proportion of Fuse pool interest taken as a protocol fee.\\n   * @param _defaultInterestFeeRate The default proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\\n   */\\n  function _setDefaultInterestFeeRate(uint256 _defaultInterestFeeRate) external onlyOwner {\\n    require(_defaultInterestFeeRate <= 1e18, \\\"Interest fee rate cannot be more than 100%.\\\");\\n    defaultInterestFeeRate = _defaultInterestFeeRate;\\n  }\\n\\n  /**\\n   * @dev Withdraws accrued fees on interest.\\n   * @param erc20Contract The ERC20 token address to withdraw. Set to the zero address to withdraw ETH.\\n   */\\n  function _withdrawAssets(address erc20Contract) external {\\n    if (erc20Contract == address(0)) {\\n      uint256 balance = address(this).balance;\\n      require(balance > 0, \\\"No balance available to withdraw.\\\");\\n      (bool success, ) = owner().call{ value: balance }(\\\"\\\");\\n      require(success, \\\"Failed to transfer ETH balance to msg.sender.\\\");\\n    } else {\\n      IERC20Upgradeable token = IERC20Upgradeable(erc20Contract);\\n      uint256 balance = token.balanceOf(address(this));\\n      require(balance > 0, \\\"No token balance available to withdraw.\\\");\\n      token.safeTransfer(owner(), balance);\\n    }\\n  }\\n\\n  /**\\n   * @dev Minimum borrow balance (in ETH) per user per Fuse pool asset (only checked on new borrows, not redemptions).\\n   */\\n  uint256 public minBorrowEth;\\n\\n  /**\\n   * @dev Maximum supply balance (in ETH) per user per Fuse pool asset.\\n   * No longer used as of `Rari-Capital/compound-protocol` version `fuse-v1.1.0`.\\n   */\\n  uint256 public maxSupplyEth;\\n\\n  /**\\n   * @dev Maximum utilization rate (scaled by 1e18) for Fuse pool assets (only checked on new borrows, not redemptions).\\n   * No longer used as of `Rari-Capital/compound-protocol` version `fuse-v1.1.0`.\\n   */\\n  uint256 public maxUtilizationRate;\\n\\n  /**\\n   * @dev Sets the proportion of Fuse pool interest taken as a protocol fee.\\n   * @param _minBorrowEth Minimum borrow balance (in ETH) per user per Fuse pool asset (only checked on new borrows, not redemptions).\\n   * @param _maxSupplyEth Maximum supply balance (in ETH) per user per Fuse pool asset.\\n   * @param _maxUtilizationRate Maximum utilization rate (scaled by 1e18) for Fuse pool assets (only checked on new borrows, not redemptions).\\n   */\\n  function _setPoolLimits(\\n    uint256 _minBorrowEth,\\n    uint256 _maxSupplyEth,\\n    uint256 _maxUtilizationRate\\n  ) external onlyOwner {\\n    minBorrowEth = _minBorrowEth;\\n    maxSupplyEth = _maxSupplyEth;\\n    maxUtilizationRate = _maxUtilizationRate;\\n  }\\n\\n  /**\\n   * @dev Receives ETH fees.\\n   */\\n  receive() external payable {}\\n\\n  /**\\n   * @dev Sends data to a contract.\\n   * @param targets The contracts to which `data` will be sent.\\n   * @param data The data to be sent to each of `targets`.\\n   */\\n  function _callPool(address[] calldata targets, bytes[] calldata data) external onlyOwner {\\n    require(targets.length > 0 && targets.length == data.length, \\\"Array lengths must be equal and greater than 0.\\\");\\n    for (uint256 i = 0; i < targets.length; i++) targets[i].functionCall(data[i]);\\n  }\\n\\n  /**\\n   * @dev Sends data to a contract.\\n   * @param targets The contracts to which `data` will be sent.\\n   * @param data The data to be sent to each of `targets`.\\n   */\\n  function _callPool(address[] calldata targets, bytes calldata data) external onlyOwner {\\n    require(targets.length > 0, \\\"No target addresses specified.\\\");\\n    for (uint256 i = 0; i < targets.length; i++) targets[i].functionCall(data);\\n  }\\n\\n  function deployCEther(bytes calldata constructorData) external returns (address) {\\n    // Make sure comptroller == msg.sender\\n    address comptroller = abi.decode(constructorData[0:32], (address));\\n    require(comptroller == msg.sender, \\\"Comptroller is not sender.\\\");\\n    // Deploy CEtherDelegator using msg.sender, underlying, and block.number as a salt\\n    bytes32 salt = keccak256(abi.encodePacked(msg.sender, address(0), block.number));\\n\\n    bytes memory cEtherDelegatorCreationCode = abi.encodePacked(type(CEtherDelegator).creationCode, constructorData);\\n    address proxy = Create2Upgradeable.deploy(0, salt, cEtherDelegatorCreationCode);\\n    return proxy;\\n  }\\n\\n  function deployCErc20(bytes calldata constructorData) external returns (address) {\\n    // Make sure comptroller == msg.sender\\n    (address underlying, address comptroller) = abi.decode(constructorData[0:64], (address, address));\\n    require(comptroller == msg.sender, \\\"Comptroller is not sender.\\\");\\n\\n    // Deploy CErc20Delegator using msg.sender, underlying, and block.number as a salt\\n    bytes32 salt = keccak256(abi.encodePacked(msg.sender, underlying, block.number));\\n\\n    bytes memory cErc20DelegatorCreationCode = abi.encodePacked(type(CErc20Delegator).creationCode, constructorData);\\n    address proxy = Create2Upgradeable.deploy(0, salt, cErc20DelegatorCreationCode);\\n\\n    return proxy;\\n  }\\n\\n  /**\\n   * @dev Whitelisted Comptroller implementation contract addresses for each existing implementation.\\n   */\\n  mapping(address => mapping(address => bool)) public comptrollerImplementationWhitelist;\\n\\n  /**\\n   * @dev Adds/removes Comptroller implementations to the whitelist.\\n   * @param oldImplementations The old `Comptroller` implementation addresses to upgrade from for each `newImplementations` to upgrade to.\\n   * @param newImplementations Array of `Comptroller` implementations to be whitelisted/unwhitelisted.\\n   * @param statuses Array of whitelist statuses corresponding to `implementations`.\\n   */\\n  function _editComptrollerImplementationWhitelist(\\n    address[] calldata oldImplementations,\\n    address[] calldata newImplementations,\\n    bool[] calldata statuses\\n  ) external onlyOwner {\\n    require(\\n      newImplementations.length > 0 &&\\n        newImplementations.length == oldImplementations.length &&\\n        newImplementations.length == statuses.length,\\n      \\\"No Comptroller implementations supplied or array lengths not equal.\\\"\\n    );\\n    for (uint256 i = 0; i < newImplementations.length; i++)\\n      comptrollerImplementationWhitelist[oldImplementations[i]][newImplementations[i]] = statuses[i];\\n  }\\n\\n  /**\\n   * @dev Whitelisted CErc20Delegate implementation contract addresses and `allowResign` values for each existing implementation.\\n   */\\n  mapping(address => mapping(address => mapping(bool => bool))) public cErc20DelegateWhitelist;\\n\\n  /**\\n   * @dev Adds/removes CErc20Delegate implementations to the whitelist.\\n   * @param oldImplementations The old `CErc20Delegate` implementation addresses to upgrade from for each `newImplementations` to upgrade to.\\n   * @param newImplementations Array of `CErc20Delegate` implementations to be whitelisted/unwhitelisted.\\n   * @param allowResign Array of `allowResign` values corresponding to `newImplementations` to be whitelisted/unwhitelisted.\\n   * @param statuses Array of whitelist statuses corresponding to `newImplementations`.\\n   */\\n  function _editCErc20DelegateWhitelist(\\n    address[] calldata oldImplementations,\\n    address[] calldata newImplementations,\\n    bool[] calldata allowResign,\\n    bool[] calldata statuses\\n  ) external onlyOwner {\\n    require(\\n      newImplementations.length > 0 &&\\n        newImplementations.length == oldImplementations.length &&\\n        newImplementations.length == allowResign.length &&\\n        newImplementations.length == statuses.length,\\n      \\\"No CErc20Delegate implementations supplied or array lengths not equal.\\\"\\n    );\\n    for (uint256 i = 0; i < newImplementations.length; i++)\\n      cErc20DelegateWhitelist[oldImplementations[i]][newImplementations[i]][allowResign[i]] = statuses[i];\\n  }\\n\\n  /**\\n   * @dev Whitelisted CEtherDelegate implementation contract addresses and `allowResign` values for each existing implementation.\\n   */\\n  mapping(address => mapping(address => mapping(bool => bool))) public cEtherDelegateWhitelist;\\n\\n  /**\\n   * @dev Adds/removes CEtherDelegate implementations to the whitelist.\\n   * @param oldImplementations The old `CEtherDelegate` implementation addresses to upgrade from for each `newImplementations` to upgrade to.\\n   * @param newImplementations Array of `CEtherDelegate` implementations to be whitelisted/unwhitelisted.\\n   * @param allowResign Array of `allowResign` values corresponding to `newImplementations` to be whitelisted/unwhitelisted.\\n   * @param statuses Array of whitelist statuses corresponding to `newImplementations`.\\n   */\\n  function _editCEtherDelegateWhitelist(\\n    address[] calldata oldImplementations,\\n    address[] calldata newImplementations,\\n    bool[] calldata allowResign,\\n    bool[] calldata statuses\\n  ) external onlyOwner {\\n    require(\\n      newImplementations.length > 0 &&\\n        newImplementations.length == oldImplementations.length &&\\n        newImplementations.length == allowResign.length &&\\n        newImplementations.length == statuses.length,\\n      \\\"No CEtherDelegate implementations supplied or array lengths not equal.\\\"\\n    );\\n    for (uint256 i = 0; i < newImplementations.length; i++)\\n      cEtherDelegateWhitelist[oldImplementations[i]][newImplementations[i]][allowResign[i]] = statuses[i];\\n  }\\n\\n  /**\\n   * @dev Latest Comptroller implementation for each existing implementation.\\n   */\\n  mapping(address => address) internal _latestComptrollerImplementation;\\n\\n  /**\\n   * @dev Latest Comptroller implementation for each existing implementation.\\n   */\\n  function latestComptrollerImplementation(address oldImplementation) external view returns (address) {\\n    return\\n      _latestComptrollerImplementation[oldImplementation] != address(0)\\n        ? _latestComptrollerImplementation[oldImplementation]\\n        : oldImplementation;\\n  }\\n\\n  /**\\n   * @dev Sets the latest `Comptroller` upgrade implementation address.\\n   * @param oldImplementation The old `Comptroller` implementation address to upgrade from.\\n   * @param newImplementation Latest `Comptroller` implementation address.\\n   */\\n  function _setLatestComptrollerImplementation(address oldImplementation, address newImplementation)\\n    external\\n    onlyOwner\\n  {\\n    _latestComptrollerImplementation[oldImplementation] = newImplementation;\\n  }\\n\\n  struct CDelegateUpgradeData {\\n    address implementation;\\n    bool allowResign;\\n    bytes becomeImplementationData;\\n  }\\n\\n  /**\\n   * @dev Latest CErc20Delegate implementation for each existing implementation.\\n   */\\n  mapping(address => CDelegateUpgradeData) public _latestCErc20Delegate;\\n\\n  /**\\n   * @dev Latest CEtherDelegate implementation for each existing implementation.\\n   */\\n  mapping(address => CDelegateUpgradeData) public _latestCEtherDelegate;\\n\\n  /**\\n   * @dev Latest CErc20Delegate implementation for each existing implementation.\\n   */\\n  function latestCErc20Delegate(address oldImplementation)\\n    external\\n    view\\n    returns (\\n      address,\\n      bool,\\n      bytes memory\\n    )\\n  {\\n    CDelegateUpgradeData memory data = _latestCErc20Delegate[oldImplementation];\\n    bytes memory emptyBytes;\\n    return\\n      data.implementation != address(0)\\n        ? (data.implementation, data.allowResign, data.becomeImplementationData)\\n        : (oldImplementation, false, emptyBytes);\\n  }\\n\\n  /**\\n   * @dev Latest CEtherDelegate implementation for each existing implementation.\\n   */\\n  function latestCEtherDelegate(address oldImplementation)\\n    external\\n    view\\n    returns (\\n      address,\\n      bool,\\n      bytes memory\\n    )\\n  {\\n    CDelegateUpgradeData memory data = _latestCEtherDelegate[oldImplementation];\\n    bytes memory emptyBytes;\\n    return\\n      data.implementation != address(0)\\n        ? (data.implementation, data.allowResign, data.becomeImplementationData)\\n        : (oldImplementation, false, emptyBytes);\\n  }\\n\\n  /**\\n   * @dev Sets the latest `CEtherDelegate` upgrade implementation address and data.\\n   * @param oldImplementation The old `CEtherDelegate` implementation address to upgrade from.\\n   * @param newImplementation Latest `CEtherDelegate` implementation address.\\n   * @param allowResign Whether or not `resignImplementation` should be called on the old implementation before upgrade.\\n   * @param becomeImplementationData Data passed to the new implementation via `becomeImplementation` after upgrade.\\n   */\\n  function _setLatestCEtherDelegate(\\n    address oldImplementation,\\n    address newImplementation,\\n    bool allowResign,\\n    bytes calldata becomeImplementationData\\n  ) external onlyOwner {\\n    _latestCEtherDelegate[oldImplementation] = CDelegateUpgradeData(\\n      newImplementation,\\n      allowResign,\\n      becomeImplementationData\\n    );\\n  }\\n\\n  /**\\n   * @dev Sets the latest `CErc20Delegate` upgrade implementation address and data.\\n   * @param oldImplementation The old `CErc20Delegate` implementation address to upgrade from.\\n   * @param newImplementation Latest `CErc20Delegate` implementation address.\\n   * @param allowResign Whether or not `resignImplementation` should be called on the old implementation before upgrade.\\n   * @param becomeImplementationData Data passed to the new implementation via `becomeImplementation` after upgrade.\\n   */\\n  function _setLatestCErc20Delegate(\\n    address oldImplementation,\\n    address newImplementation,\\n    bool allowResign,\\n    bytes calldata becomeImplementationData\\n  ) external onlyOwner {\\n    _latestCErc20Delegate[oldImplementation] = CDelegateUpgradeData(\\n      newImplementation,\\n      allowResign,\\n      becomeImplementationData\\n    );\\n  }\\n\\n  /**\\n   * @notice Maps Unitroller (Comptroller proxy) addresses to the proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\\n   * @dev A value of 0 means unset whereas a negative value means 0.\\n   */\\n  mapping(address => int256) public customInterestFeeRates;\\n\\n  /**\\n   * @notice Returns the proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\\n   */\\n  function interestFeeRate() external view returns (uint256) {\\n    (bool success, bytes memory data) = msg.sender.staticcall(abi.encodeWithSignature(\\\"comptroller()\\\"));\\n\\n    if (success && data.length == 32) {\\n      address comptroller = abi.decode(data, (address));\\n      int256 customRate = customInterestFeeRates[comptroller];\\n      if (customRate > 0) return uint256(customRate);\\n      if (customRate < 0) return 0;\\n    }\\n\\n    return defaultInterestFeeRate;\\n  }\\n\\n  /**\\n   * @dev Sets the proportion of Fuse pool interest taken as a protocol fee.\\n   * @param comptroller The Unitroller (Comptroller proxy) address.\\n   * @param rate The proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18).\\n   */\\n  function _setCustomInterestFeeRate(address comptroller, int256 rate) external onlyOwner {\\n    require(rate <= 1e18, \\\"Interest fee rate cannot be more than 100%.\\\");\\n    customInterestFeeRates[comptroller] = rate;\\n  }\\n}\\n\",\"keccak256\":\"0xe012a132c53be061fe0992f8f546c312128517504e223f8f7e0520f91d28258e\",\"license\":\"UNLICENSED\"},\"contracts/compound/CDelegateInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\ncontract CDelegationStorage {\\n  /**\\n   * @notice Implementation address for this contract\\n   */\\n  address public implementation;\\n}\\n\\nabstract contract CDelegateInterface is CDelegationStorage {\\n  /**\\n   * @notice Emitted when implementation is changed\\n   */\\n  event NewImplementation(address oldImplementation, address newImplementation);\\n\\n  /**\\n   * @notice Called by the admin to update the implementation of the delegator\\n   * @param implementation_ The address of the new implementation for delegation\\n   * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation\\n   * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation\\n   */\\n  function _setImplementationSafe(\\n    address implementation_,\\n    bool allowResign,\\n    bytes calldata becomeImplementationData\\n  ) external virtual;\\n\\n  /**\\n   * @notice Called by the delegator on a delegate to initialize it for duty\\n   * @dev Should revert if any issues arise which make it unfit for delegation\\n   * @param data The encoded bytes data for any initialization\\n   */\\n  function _becomeImplementation(bytes calldata data) external virtual;\\n\\n  /**\\n   * @notice Function called before all delegator functions\\n   * @dev Checks comptroller.autoImplementation and upgrades the implementation if necessary\\n   */\\n  function _prepare() external payable virtual;\\n}\\n\",\"keccak256\":\"0xaaab890b303b5e86ca942c714b0a8ff82870dc9404642ae466283797baffab78\",\"license\":\"UNLICENSED\"},\"contracts/compound/CErc20Delegator.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nimport \\\"./ComptrollerInterface.sol\\\";\\nimport \\\"./InterestRateModel.sol\\\";\\nimport \\\"./CDelegateInterface.sol\\\";\\n\\n/**\\n * @title Compound's CErc20Delegator Contract\\n * @notice CTokens which wrap an EIP-20 underlying and delegate to an implementation\\n * @author Compound\\n */\\ncontract CErc20Delegator is CDelegationStorage {\\n  /**\\n   * @notice Construct a new money market\\n   * @param underlying_ The address of the underlying asset\\n   * @param comptroller_ The address of the Comptroller\\n   * @param interestRateModel_ The address of the interest rate model\\n   * @param name_ ERC-20 name of this token\\n   * @param symbol_ ERC-20 symbol of this token\\n   * @param implementation_ The address of the implementation the contract delegates to\\n   * @param becomeImplementationData The encoded args for becomeImplementation\\n   */\\n  constructor(\\n    address underlying_,\\n    ComptrollerInterface comptroller_,\\n    address payable fuseAdmin_,\\n    InterestRateModel interestRateModel_,\\n    string memory name_,\\n    string memory symbol_,\\n    address implementation_,\\n    bytes memory becomeImplementationData,\\n    uint256 reserveFactorMantissa_,\\n    uint256 adminFeeMantissa_\\n  ) public {\\n    // First delegate gets to initialize the delegator (i.e. storage contract)\\n    delegateTo(\\n      implementation_,\\n      abi.encodeWithSignature(\\n        \\\"initialize(address,address,address,address,string,string,uint256,uint256)\\\",\\n        underlying_,\\n        comptroller_,\\n        fuseAdmin_,\\n        interestRateModel_,\\n        name_,\\n        symbol_,\\n        reserveFactorMantissa_,\\n        adminFeeMantissa_\\n      )\\n    );\\n\\n    // New implementations always get set via the settor (post-initialize)\\n    delegateTo(\\n      implementation_,\\n      abi.encodeWithSignature(\\n        \\\"_setImplementationSafe(address,bool,bytes)\\\",\\n        implementation_,\\n        false,\\n        becomeImplementationData\\n      )\\n    );\\n  }\\n\\n  /**\\n   * @notice Internal method to delegate execution to another contract\\n   * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\n   * @param callee The contract to delegatecall\\n   * @param data The raw data to delegatecall\\n   * @return The returned bytes from the delegatecall\\n   */\\n  function delegateTo(address callee, bytes memory data) internal returns (bytes memory) {\\n    (bool success, bytes memory returnData) = callee.delegatecall(data);\\n    assembly {\\n      if eq(success, 0) {\\n        revert(add(returnData, 0x20), returndatasize())\\n      }\\n    }\\n    return returnData;\\n  }\\n\\n  /**\\n   * @notice Delegates execution to an implementation contract\\n   * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\n   */\\n  receive() external payable {}\\n\\n  fallback() external payable {\\n    // Cannot send value to CErc20Delegator\\n    require(msg.value == 0, \\\"CErc20Delegator:fallback: cannot send value to fallback\\\");\\n\\n    // Check for automatic implementation\\n    delegateTo(implementation, abi.encodeWithSignature(\\\"_prepare()\\\"));\\n\\n    // delegate all other functions to current implementation\\n    (bool success, ) = implementation.delegatecall(msg.data);\\n\\n    assembly {\\n      let free_mem_ptr := mload(0x40)\\n      returndatacopy(free_mem_ptr, 0, returndatasize())\\n\\n      switch success\\n      case 0 {\\n        revert(free_mem_ptr, returndatasize())\\n      }\\n      default {\\n        return(free_mem_ptr, returndatasize())\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xb407cfc94895084caf9fc1b6e5f15e6fc96629d1b362ee3631fbe73103849751\",\"license\":\"UNLICENSED\"},\"contracts/compound/CEtherDelegator.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nimport \\\"./ComptrollerInterface.sol\\\";\\nimport \\\"./InterestRateModel.sol\\\";\\nimport \\\"./CDelegateInterface.sol\\\";\\n\\n/**\\n * @title Compound's CEtherDelegator Contract\\n * @notice CTokens which wrap Ether and delegate to an implementation\\n * @author Compound\\n */\\ncontract CEtherDelegator is CDelegationStorage {\\n  /**\\n   * @notice Construct a new CEther money market\\n   * @param comptroller_ The address of the Comptroller\\n   * @param fuseAdmin_ The FuseFeeDistributor contract address.\\n   * @param interestRateModel_ The address of the interest rate model\\n   * @param name_ ERC-20 name of this token\\n   * @param symbol_ ERC-20 symbol of this token\\n   * @param implementation_ The address of the implementation the contract delegates to\\n   * @param becomeImplementationData The encoded args for becomeImplementation\\n   */\\n  constructor(\\n    ComptrollerInterface comptroller_,\\n    address payable fuseAdmin_,\\n    InterestRateModel interestRateModel_,\\n    string memory name_,\\n    string memory symbol_,\\n    address implementation_,\\n    bytes memory becomeImplementationData,\\n    uint256 reserveFactorMantissa_,\\n    uint256 adminFeeMantissa_\\n  ) {\\n    // First delegate gets to initialize the delegator (i.e. storage contract)\\n    delegateTo(\\n      implementation_,\\n      abi.encodeWithSignature(\\n        \\\"initialize(address,address,address,string,string,uint256,uint256)\\\",\\n        comptroller_,\\n        fuseAdmin_,\\n        interestRateModel_,\\n        name_,\\n        symbol_,\\n        reserveFactorMantissa_,\\n        adminFeeMantissa_\\n      )\\n    );\\n\\n    // New implementations always get set via the settor (post-initialize)\\n    delegateTo(\\n      implementation_,\\n      abi.encodeWithSignature(\\n        \\\"_setImplementationSafe(address,bool,bytes)\\\",\\n        implementation_,\\n        false,\\n        becomeImplementationData\\n      )\\n    );\\n  }\\n\\n  /**\\n   * @notice Internal method to delegate execution to another contract\\n   * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\n   * @param callee The contract to delegatecall\\n   * @param data The raw data to delegatecall\\n   * @return The returned bytes from the delegatecall\\n   */\\n  function delegateTo(address callee, bytes memory data) internal returns (bytes memory) {\\n    (bool success, bytes memory returnData) = callee.delegatecall(data);\\n    assembly {\\n      if eq(success, 0) {\\n        revert(add(returnData, 0x20), returndatasize())\\n      }\\n    }\\n    return returnData;\\n  }\\n\\n  /**\\n   * @notice Delegates execution to an implementation contract\\n   * @dev It returns to the external caller whatever the implementation returns or forwards reverts\\n   */\\n  receive() external payable {}\\n\\n  fallback() external payable {\\n    // Check for automatic implementation\\n    delegateTo(implementation, abi.encodeWithSignature(\\\"_prepare()\\\"));\\n\\n    // delegate all other functions to current implementation\\n    (bool success, ) = implementation.delegatecall(msg.data);\\n\\n    assembly {\\n      let free_mem_ptr := mload(0x40)\\n      returndatacopy(free_mem_ptr, 0, returndatasize())\\n\\n      switch success\\n      case 0 {\\n        revert(free_mem_ptr, returndatasize())\\n      }\\n      default {\\n        return(free_mem_ptr, returndatasize())\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xdca0099ba498ee9408aaeddeb18884dfd4656bb51027e4b2c7fd65dd295512ae\",\"license\":\"UNLICENSED\"},\"contracts/compound/ComptrollerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\nabstract contract ComptrollerInterface {\\n  /// @notice Indicator that this is a Comptroller contract (for inspection)\\n  bool public constant isComptroller = true;\\n\\n  /*** Assets You Are In ***/\\n\\n  function enterMarkets(address[] calldata cTokens) external virtual returns (uint256[] memory);\\n\\n  function exitMarket(address cToken) external virtual returns (uint256);\\n\\n  /*** Policy Hooks ***/\\n\\n  function mintAllowed(\\n    address cToken,\\n    address minter,\\n    uint256 mintAmount\\n  ) external virtual returns (uint256);\\n\\n  function mintWithinLimits(\\n    address cToken,\\n    uint256 exchangeRateMantissa,\\n    uint256 accountTokens,\\n    uint256 mintAmount\\n  ) external virtual returns (uint256);\\n\\n  function mintVerify(\\n    address cToken,\\n    address minter,\\n    uint256 mintAmount,\\n    uint256 mintTokens\\n  ) external virtual;\\n\\n  function redeemAllowed(\\n    address cToken,\\n    address redeemer,\\n    uint256 redeemTokens\\n  ) external virtual returns (uint256);\\n\\n  function redeemVerify(\\n    address cToken,\\n    address redeemer,\\n    uint256 redeemAmount,\\n    uint256 redeemTokens\\n  ) external virtual;\\n\\n  function borrowAllowed(\\n    address cToken,\\n    address borrower,\\n    uint256 borrowAmount\\n  ) external virtual returns (uint256);\\n\\n  function borrowWithinLimits(address cToken, uint256 accountBorrowsNew) external virtual returns (uint256);\\n\\n  function borrowVerify(\\n    address cToken,\\n    address borrower,\\n    uint256 borrowAmount\\n  ) external virtual;\\n\\n  function repayBorrowAllowed(\\n    address cToken,\\n    address payer,\\n    address borrower,\\n    uint256 repayAmount\\n  ) external virtual returns (uint256);\\n\\n  function repayBorrowVerify(\\n    address cToken,\\n    address payer,\\n    address borrower,\\n    uint256 repayAmount,\\n    uint256 borrowerIndex\\n  ) external virtual;\\n\\n  function liquidateBorrowAllowed(\\n    address cTokenBorrowed,\\n    address cTokenCollateral,\\n    address liquidator,\\n    address borrower,\\n    uint256 repayAmount\\n  ) external virtual returns (uint256);\\n\\n  function liquidateBorrowVerify(\\n    address cTokenBorrowed,\\n    address cTokenCollateral,\\n    address liquidator,\\n    address borrower,\\n    uint256 repayAmount,\\n    uint256 seizeTokens\\n  ) external virtual;\\n\\n  function seizeAllowed(\\n    address cTokenCollateral,\\n    address cTokenBorrowed,\\n    address liquidator,\\n    address borrower,\\n    uint256 seizeTokens\\n  ) external virtual returns (uint256);\\n\\n  function seizeVerify(\\n    address cTokenCollateral,\\n    address cTokenBorrowed,\\n    address liquidator,\\n    address borrower,\\n    uint256 seizeTokens\\n  ) external virtual;\\n\\n  function transferAllowed(\\n    address cToken,\\n    address src,\\n    address dst,\\n    uint256 transferTokens\\n  ) external virtual returns (uint256);\\n\\n  function transferVerify(\\n    address cToken,\\n    address src,\\n    address dst,\\n    uint256 transferTokens\\n  ) external virtual;\\n\\n  /*** Liquidity/Liquidation Calculations ***/\\n\\n  function liquidateCalculateSeizeTokens(\\n    address cTokenBorrowed,\\n    address cTokenCollateral,\\n    uint256 repayAmount\\n  ) external view virtual returns (uint256, uint256);\\n\\n  /*** Pool-Wide/Cross-Asset Reentrancy Prevention ***/\\n\\n  function _beforeNonReentrant() external virtual;\\n\\n  function _afterNonReentrant() external virtual;\\n}\\n\",\"keccak256\":\"0x82d6d81c2b784a7cafce53a5f611c9e33c08c55b262d0b56e425ed0f31a67d8c\",\"license\":\"UNLICENSED\"},\"contracts/compound/InterestRateModel.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0;\\n\\n/**\\n * @title Compound's InterestRateModel Interface\\n * @author Compound\\n */\\nabstract contract InterestRateModel {\\n  /// @notice Indicator that this is an InterestRateModel contract (for inspection)\\n  bool public constant isInterestRateModel = true;\\n\\n  /**\\n   * @notice Calculates the current borrow interest rate per block\\n   * @param cash The total amount of cash the market has\\n   * @param borrows The total amount of borrows the market has outstanding\\n   * @param reserves The total amount of reserves the market has\\n   * @return The borrow rate per block (as a percentage, and scaled by 1e18)\\n   */\\n  function getBorrowRate(\\n    uint256 cash,\\n    uint256 borrows,\\n    uint256 reserves\\n  ) public view virtual returns (uint256);\\n\\n  /**\\n   * @notice Calculates the current supply interest rate per block\\n   * @param cash The total amount of cash the market has\\n   * @param borrows The total amount of borrows the market has outstanding\\n   * @param reserves The total amount of reserves the market has\\n   * @param reserveFactorMantissa The current reserve factor the market has\\n   * @return The supply rate per block (as a percentage, and scaled by 1e18)\\n   */\\n  function getSupplyRate(\\n    uint256 cash,\\n    uint256 borrows,\\n    uint256 reserves,\\n    uint256 reserveFactorMantissa\\n  ) public view virtual returns (uint256);\\n}\\n\",\"keccak256\":\"0x587a54b49d48df2cd91583eac93ddde4e2849f79d0441f179bf835e9dffe24e9\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "implementation": "0xf05DFB925280127614FfcFE765f9a6BB0BFfE5E5",
  "devdoc": {
    "author": "David Lucid <david@rari.capital> (https://github.com/davidlucid)",
    "kind": "dev",
    "methods": {
      "_callPool(address[],bytes)": {
        "details": "Sends data to a contract.",
        "params": {
          "data": "The data to be sent to each of `targets`.",
          "targets": "The contracts to which `data` will be sent."
        }
      },
      "_callPool(address[],bytes[])": {
        "details": "Sends data to a contract.",
        "params": {
          "data": "The data to be sent to each of `targets`.",
          "targets": "The contracts to which `data` will be sent."
        }
      },
      "_editCErc20DelegateWhitelist(address[],address[],bool[],bool[])": {
        "details": "Adds/removes CErc20Delegate implementations to the whitelist.",
        "params": {
          "allowResign": "Array of `allowResign` values corresponding to `newImplementations` to be whitelisted/unwhitelisted.",
          "newImplementations": "Array of `CErc20Delegate` implementations to be whitelisted/unwhitelisted.",
          "oldImplementations": "The old `CErc20Delegate` implementation addresses to upgrade from for each `newImplementations` to upgrade to.",
          "statuses": "Array of whitelist statuses corresponding to `newImplementations`."
        }
      },
      "_editCEtherDelegateWhitelist(address[],address[],bool[],bool[])": {
        "details": "Adds/removes CEtherDelegate implementations to the whitelist.",
        "params": {
          "allowResign": "Array of `allowResign` values corresponding to `newImplementations` to be whitelisted/unwhitelisted.",
          "newImplementations": "Array of `CEtherDelegate` implementations to be whitelisted/unwhitelisted.",
          "oldImplementations": "The old `CEtherDelegate` implementation addresses to upgrade from for each `newImplementations` to upgrade to.",
          "statuses": "Array of whitelist statuses corresponding to `newImplementations`."
        }
      },
      "_editComptrollerImplementationWhitelist(address[],address[],bool[])": {
        "details": "Adds/removes Comptroller implementations to the whitelist.",
        "params": {
          "newImplementations": "Array of `Comptroller` implementations to be whitelisted/unwhitelisted.",
          "oldImplementations": "The old `Comptroller` implementation addresses to upgrade from for each `newImplementations` to upgrade to.",
          "statuses": "Array of whitelist statuses corresponding to `implementations`."
        }
      },
      "_setCustomInterestFeeRate(address,int256)": {
        "details": "Sets the proportion of Fuse pool interest taken as a protocol fee.",
        "params": {
          "comptroller": "The Unitroller (Comptroller proxy) address.",
          "rate": "The proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18)."
        }
      },
      "_setDefaultInterestFeeRate(uint256)": {
        "details": "Sets the default proportion of Fuse pool interest taken as a protocol fee.",
        "params": {
          "_defaultInterestFeeRate": "The default proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18)."
        }
      },
      "_setLatestCErc20Delegate(address,address,bool,bytes)": {
        "details": "Sets the latest `CErc20Delegate` upgrade implementation address and data.",
        "params": {
          "allowResign": "Whether or not `resignImplementation` should be called on the old implementation before upgrade.",
          "becomeImplementationData": "Data passed to the new implementation via `becomeImplementation` after upgrade.",
          "newImplementation": "Latest `CErc20Delegate` implementation address.",
          "oldImplementation": "The old `CErc20Delegate` implementation address to upgrade from."
        }
      },
      "_setLatestCEtherDelegate(address,address,bool,bytes)": {
        "details": "Sets the latest `CEtherDelegate` upgrade implementation address and data.",
        "params": {
          "allowResign": "Whether or not `resignImplementation` should be called on the old implementation before upgrade.",
          "becomeImplementationData": "Data passed to the new implementation via `becomeImplementation` after upgrade.",
          "newImplementation": "Latest `CEtherDelegate` implementation address.",
          "oldImplementation": "The old `CEtherDelegate` implementation address to upgrade from."
        }
      },
      "_setLatestComptrollerImplementation(address,address)": {
        "details": "Sets the latest `Comptroller` upgrade implementation address.",
        "params": {
          "newImplementation": "Latest `Comptroller` implementation address.",
          "oldImplementation": "The old `Comptroller` implementation address to upgrade from."
        }
      },
      "_setPoolLimits(uint256,uint256,uint256)": {
        "details": "Sets the proportion of Fuse pool interest taken as a protocol fee.",
        "params": {
          "_maxSupplyEth": "Maximum supply balance (in ETH) per user per Fuse pool asset.",
          "_maxUtilizationRate": "Maximum utilization rate (scaled by 1e18) for Fuse pool assets (only checked on new borrows, not redemptions).",
          "_minBorrowEth": "Minimum borrow balance (in ETH) per user per Fuse pool asset (only checked on new borrows, not redemptions)."
        }
      },
      "_withdrawAssets(address)": {
        "details": "Withdraws accrued fees on interest.",
        "params": {
          "erc20Contract": "The ERC20 token address to withdraw. Set to the zero address to withdraw ETH."
        }
      },
      "initialize(uint256)": {
        "details": "Initializer that sets initial values of state variables.",
        "params": {
          "_defaultInterestFeeRate": "The default proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18)."
        }
      },
      "latestCErc20Delegate(address)": {
        "details": "Latest CErc20Delegate implementation for each existing implementation."
      },
      "latestCEtherDelegate(address)": {
        "details": "Latest CEtherDelegate implementation for each existing implementation."
      },
      "latestComptrollerImplementation(address)": {
        "details": "Latest Comptroller implementation for each existing implementation."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "_latestCErc20Delegate": {
        "details": "Latest CErc20Delegate implementation for each existing implementation."
      },
      "_latestCEtherDelegate": {
        "details": "Latest CEtherDelegate implementation for each existing implementation."
      },
      "_latestComptrollerImplementation": {
        "details": "Latest Comptroller implementation for each existing implementation."
      },
      "cErc20DelegateWhitelist": {
        "details": "Whitelisted CErc20Delegate implementation contract addresses and `allowResign` values for each existing implementation."
      },
      "cEtherDelegateWhitelist": {
        "details": "Whitelisted CEtherDelegate implementation contract addresses and `allowResign` values for each existing implementation."
      },
      "comptrollerImplementationWhitelist": {
        "details": "Whitelisted Comptroller implementation contract addresses for each existing implementation."
      },
      "customInterestFeeRates": {
        "details": "A value of 0 means unset whereas a negative value means 0."
      },
      "maxSupplyEth": {
        "details": "Maximum supply balance (in ETH) per user per Fuse pool asset. No longer used as of `Rari-Capital/compound-protocol` version `fuse-v1.1.0`."
      },
      "maxUtilizationRate": {
        "details": "Maximum utilization rate (scaled by 1e18) for Fuse pool assets (only checked on new borrows, not redemptions). No longer used as of `Rari-Capital/compound-protocol` version `fuse-v1.1.0`."
      },
      "minBorrowEth": {
        "details": "Minimum borrow balance (in ETH) per user per Fuse pool asset (only checked on new borrows, not redemptions)."
      }
    },
    "title": "FuseFeeDistributor",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "customInterestFeeRates(address)": {
        "notice": "Maps Unitroller (Comptroller proxy) addresses to the proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18)."
      },
      "defaultInterestFeeRate()": {
        "notice": "The proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18)."
      },
      "interestFeeRate()": {
        "notice": "Returns the proportion of Fuse pool interest taken as a protocol fee (scaled by 1e18)."
      }
    },
    "notice": "FuseFeeDistributor controls and receives protocol fees from Fuse pools and relays admin actions to Fuse pools.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 210,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 213,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1501,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1677,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "defaultInterestFeeRate",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 1778,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "minBorrowEth",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 1781,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "maxSupplyEth",
        "offset": 0,
        "slot": "103",
        "type": "t_uint256"
      },
      {
        "astId": 1784,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "maxUtilizationRate",
        "offset": 0,
        "slot": "104",
        "type": "t_uint256"
      },
      {
        "astId": 2043,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "comptrollerImplementationWhitelist",
        "offset": 0,
        "slot": "105",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 2114,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "cErc20DelegateWhitelist",
        "offset": 0,
        "slot": "106",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_bool)))"
      },
      {
        "astId": 2198,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "cEtherDelegateWhitelist",
        "offset": 0,
        "slot": "107",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_bool)))"
      },
      {
        "astId": 2278,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "_latestComptrollerImplementation",
        "offset": 0,
        "slot": "108",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2331,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "_latestCErc20Delegate",
        "offset": 0,
        "slot": "109",
        "type": "t_mapping(t_address,t_struct(CDelegateUpgradeData)2325_storage)"
      },
      {
        "astId": 2337,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "_latestCEtherDelegate",
        "offset": 0,
        "slot": "110",
        "type": "t_mapping(t_address,t_struct(CDelegateUpgradeData)2325_storage)"
      },
      {
        "astId": 2478,
        "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
        "label": "customInterestFeeRates",
        "offset": 0,
        "slot": "111",
        "type": "t_mapping(t_address,t_int256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_int256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => int256)",
        "numberOfBytes": "32",
        "value": "t_int256"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => mapping(bool => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_bool,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bool,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bool => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bool,t_bool)"
      },
      "t_mapping(t_address,t_struct(CDelegateUpgradeData)2325_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FuseFeeDistributor.CDelegateUpgradeData)",
        "numberOfBytes": "32",
        "value": "t_struct(CDelegateUpgradeData)2325_storage"
      },
      "t_mapping(t_bool,t_bool)": {
        "encoding": "mapping",
        "key": "t_bool",
        "label": "mapping(bool => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(CDelegateUpgradeData)2325_storage": {
        "encoding": "inplace",
        "label": "struct FuseFeeDistributor.CDelegateUpgradeData",
        "members": [
          {
            "astId": 2320,
            "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
            "label": "implementation",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2322,
            "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
            "label": "allowResign",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2324,
            "contract": "contracts/FuseFeeDistributor.sol:FuseFeeDistributor",
            "label": "becomeImplementationData",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}