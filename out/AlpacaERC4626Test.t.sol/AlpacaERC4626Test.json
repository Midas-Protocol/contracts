{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitializedValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "387:2369:199:-:0;;;1572:26:243;;;-1:-1:-1;;1572:26:243;1594:4;1572:26;;;576:6:199;552:30;;387:2369;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "387:2369:199:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:242;;;:::i;:::-;;428:40;;1671:64:243;428:40:199;;;;;-1:-1:-1;;;;;190:32:279;;;172:51;;160:2;145:18;428:40:199;;;;;;;;833:291;;;:::i;1332:523::-;;;:::i;1819:584:243:-;;;:::i;:::-;;;399:14:279;;392:22;374:41;;362:2;347:18;1819:584:243;234:187:279;1128:200:199;;;:::i;1859:895::-;;;:::i;1572:26:243:-;;;;;;;;;587:242:199;663:2;629:37;;;;;:::i;:::-;764:2:279;746:21;;;803:1;783:18;;;776:29;-1:-1:-1;;;836:3:279;821:19;;814:40;892:3;885:4;870:20;;863:33;;;933:1;912:19;;;905:30;-1:-1:-1;;;966:3:279;951:19;;944:34;1062:4;1050:17;;;-1:-1:-1;1030:18:279;;1023:45;1010:3;995:19;629:37:199;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;617:9:199;:49;;-1:-1:-1;;;;;;617:49:199;-1:-1:-1;;;;;617:49:199;;;;;;;;;684:56;;737:2;;684:56;;;:::i;:::-;-1:-1:-1;;;;;1445:32:279;;;1427:51;;1514:3;1509:2;1494:18;;1487:31;;;1555:1;1534:19;;;1527:30;-1:-1:-1;;;1465:3:279;1573:19;;1566:40;1642:3;1637:2;1622:18;;1615:31;;;1683:1;1662:19;;;1655:30;-1:-1:-1;;;1716:3:279;1701:19;;1694:33;1811:4;1799:17;-1:-1:-1;1779:18:279;;1772:45;1759:3;1744:19;684:56:199;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;672:9:199;:68;;-1:-1:-1;;;;;;672:68:199;-1:-1:-1;;;;;672:68:199;;;;;;;;;-1:-1:-1;780:9:199;762:62;;780:9;;;762:62;;;:::i;:::-;-1:-1:-1;;;;;2099:15:279;;;2081:34;;2151:15;;2146:2;2131:18;;2124:43;2031:2;2016:18;762:62:199;;;;;;;;;;;;;;;;;;;;;;;746:13;;:78;;;;;-1:-1:-1;;;;;746:78:199;;;;;-1:-1:-1;;;;;746:78:199;;;;;;587:242::o;833:291::-;879:55;888:13;;;;;;;;;-1:-1:-1;;;;;888:13:199;-1:-1:-1;;;;;888:18:199;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;888:20:199;;;;;;;;;;;;:::i;:::-;879:55;;;;;;;;;;;;;-1:-1:-1;;;879:55:199;;;:8;:55::i;:::-;940:41;949:13;;;;;;;;;-1:-1:-1;;;;;949:13:199;-1:-1:-1;;;;;949:20:199;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;949:22:199;;;;;;;;;;;;:::i;:::-;940:41;;;;;;;;;;;;;-1:-1:-1;;;940:41:199;;;:8;:41::i;:::-;987:60;1004:13;;;;;;;;;-1:-1:-1;;;;;1004:13:199;-1:-1:-1;;;;;1004:19:199;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1036:9;;-1:-1:-1;;;;;1036:9:199;987:8;:60::i;:::-;1053:66;1070:13;;;;;;;;;-1:-1:-1;;;;;1070:13:199;-1:-1:-1;;;;;1070:25:199;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1108:9;;-1:-1:-1;;;;;1108:9:199;1053:8;:66::i;:::-;833:291::o;1332:523::-;1368:9;:7;:9::i;:::-;1436;;:34;;-1:-1:-1;;;1436:34:199;;1464:4;1436:34;;;172:51:279;1427:47:199;;-1:-1:-1;;;;;1436:9:199;;:19;;145:18:279;;1436:34:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1472:1;1427:8;:47::i;:::-;1489:9;;1517;;1489:39;;-1:-1:-1;;;1489:39:199;;-1:-1:-1;;;;;1517:9:199;;;1489:39;;;172:51:279;1480:64:199;;1489:9;;;;;:19;;145:18:279;;1489:39:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:13;;1480:8;:64::i;:::-;1595:52;1604:13;;;;;;;;;-1:-1:-1;;;;;1604:13:199;-1:-1:-1;;;;;1604:25:199;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:52;1662:13;;:48;;-1:-1:-1;;;1662:48:199;;1704:4;1662:48;;;172:51:279;1653:73:199;;1662:13;;;-1:-1:-1;;;;;1662:13:199;;:33;;145:18:279;;1662:48:199;14:215:279;1653:73:199;1796:13;;:38;;-1:-1:-1;;;1796:38:199;;1828:4;1796:38;;;172:51:279;1787:63:199;;1796:13;;;-1:-1:-1;;;;;1796:13:199;;:23;;145:18:279;;1796:38:199;14:215:279;1819:584:243;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:243;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4739:51:279;;;-1:-1:-1;;;4806:18:279;;;4799:34;2196:43:243;;;;;;;;;4712:18:279;;;2196:43:243;;;-1:-1:-1;;1671:64:243;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:243;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:243:o;1128:200:199:-;1160:9;;1190:13;;1160:44;;-1:-1:-1;;;1160:44:199;;1183:4;1160:44;;;4739:51:279;4806:18;;;4799:34;;;;-1:-1:-1;;;;;1160:9:199;;;;:14;;4712:18:279;;1160:44:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1210:9:199;;;1236:13;1252;;1210:56;;-1:-1:-1;;;1210:56:199;;-1:-1:-1;;;;;1236:13:199;;;;;;1210:56;;;4739:51:279;4806:18;;;4799:34;;;;1210:9:199;;;-1:-1:-1;1210:17:199;;-1:-1:-1;4712:18:279;;1210:56:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1272:13:199;;1294;;1272:51;;-1:-1:-1;;;1272:51:199;;;;;6234:25:279;;;;1317:4:199;6275:18:279;;;6268:60;1272:13:199;;;;-1:-1:-1;;;;;1272:13:199;;:21;;6207:18:279;;1272:51:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1128:200::o;1859:895::-;1896:9;:7;:9::i;:::-;1988:22;2029:4;2013:13;;:20;;;;:::i;:::-;2039:13;;:68;;-1:-1:-1;;;2039:68:199;;;;;6768:25:279;;;2086:4:199;6847:18:279;;;6840:43;;;6899:18;;;6892:43;1988:45:199;;-1:-1:-1;2039:13:199;;;-1:-1:-1;;;;;2039:13:199;;:22;;6741:18:279;;2039:68:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2167:9:199;;:34;;-1:-1:-1;;;2167:34:199;;2195:4;2167:34;;;172:51:279;2158:60:199;;-1:-1:-1;;;;;2167:9:199;;:19;;145:18:279;;2167:34:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2203:14;2158:8;:60::i;:::-;2233:9;;2261;;2233:39;;-1:-1:-1;;;2233:39:199;;-1:-1:-1;;;;;2261:9:199;;;2233:39;;;172:51:279;2224:55:199;;2233:9;;;;;:19;;145:18:279;;2233:39:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2274:4;2224:8;:55::i;:::-;2704:13;;:38;;-1:-1:-1;;;2704:38:199;;2736:4;2704:38;;;172:51:279;2695:54:199;;2704:13;;;-1:-1:-1;;;;;2704:13:199;;:23;;145:18:279;;2704:38:199;14:215:279;14688:342:243;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:265;;14848:43;;;;;7429:2:279;7411:21;;;7468:2;7448:18;;;7441:30;7507:34;7502:2;7487:18;;7480:62;-1:-1:-1;;;7573:2:279;7558:18;;7551:34;7617:3;7602:19;;7227:400;14848:43:243;;;;;;;;14910:32;14940:1;14910:32;;;;;;:::i;:::-;;;;;;;;14961;14991:1;14961:32;;;;;;:::i;:::-;;;;;;;;15007:6;:4;:6::i;:::-;14688:342;;:::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:243;:1;-1:-1:-1;;;;;3678:6:243;;3674:212;;3705:44;;;;;9007:2:279;8989:21;;;9046:2;9026:18;;;9019:30;9085:34;9080:2;9065:18;;9058:62;-1:-1:-1;;;9151:2:279;9136:18;;9129:35;9196:3;9181:19;;8805:401;3705:44:243;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;10499:2:279;10481:21;;;10538:2;10518:18;;;10511:30;10577:34;10572:2;10557:18;;10550:62;-1:-1:-1;;;10643:2:279;10628:18;;10621:32;10685:3;10670:19;;10297:398;5286:41:243;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;11608:51:279;;;-1:-1:-1;;;11675:18:279;;;11668:34;;;;2705:4:243;11718:18:279;;;11711:34;2482:11:243;;1671:64;2579:43;;11581:18:279;;2645:67:243;;;-1:-1:-1;;2645:67:243;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:243;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:243;2813:7;:14;;-1:-1:-1;;2813:14:243;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;2178:127:279:-;2239:10;2234:3;2230:20;2227:1;2220:31;2270:4;2267:1;2260:15;2294:4;2291:1;2284:15;2310:258;2382:1;2392:113;2406:6;2403:1;2400:13;2392:113;;;2482:11;;;2476:18;2463:11;;;2456:39;2428:2;2421:10;2392:113;;;2523:6;2520:1;2517:13;2514:48;;;2558:1;2549:6;2544:3;2540:16;2533:27;2514:48;;2310:258;;;:::o;2573:884::-;2653:6;2706:2;2694:9;2685:7;2681:23;2677:32;2674:52;;;2722:1;2719;2712:12;2674:52;2755:9;2749:16;2784:18;2825:2;2817:6;2814:14;2811:34;;;2841:1;2838;2831:12;2811:34;2879:6;2868:9;2864:22;2854:32;;2924:7;2917:4;2913:2;2909:13;2905:27;2895:55;;2946:1;2943;2936:12;2895:55;2975:2;2969:9;2997:2;2993;2990:10;2987:36;;;3003:18;;:::i;:::-;3078:2;3072:9;3046:2;3132:13;;-1:-1:-1;;3128:22:279;;;3152:2;3124:31;3120:40;3108:53;;;3176:18;;;3196:22;;;3173:46;3170:72;;;3222:18;;:::i;:::-;3262:10;3258:2;3251:22;3297:2;3289:6;3282:18;3337:7;3332:2;3327;3323;3319:11;3315:20;3312:33;3309:53;;;3358:1;3355;3348:12;3309:53;3371:55;3423:2;3418;3410:6;3406:15;3401:2;3397;3393:11;3371:55;:::i;:::-;3445:6;2573:884;-1:-1:-1;;;;;;;2573:884:279:o;3462:138::-;-1:-1:-1;;;;;3544:31:279;;3534:42;;3524:70;;3590:1;3587;3580:12;3605:273;3690:6;3743:2;3731:9;3722:7;3718:23;3714:32;3711:52;;;3759:1;3756;3749:12;3711:52;3791:9;3785:16;3810:38;3842:5;3810:38;:::i;:::-;3867:5;3605:273;-1:-1:-1;;;3605:273:279:o;4376:184::-;4446:6;4499:2;4487:9;4478:7;4474:23;4470:32;4467:52;;;4515:1;4512;4505:12;4467:52;-1:-1:-1;4538:16:279;;4376:184;-1:-1:-1;4376:184:279:o;4844:371::-;-1:-1:-1;;;;;;5029:33:279;;5017:46;;5086:13;;4999:3;;5108:61;5086:13;5158:1;5149:11;;5142:4;5130:17;;5108:61;:::i;:::-;5189:16;;;;5207:1;5185:24;;4844:371;-1:-1:-1;;;4844:371:279:o;5220:274::-;5349:3;5387:6;5381:13;5403:53;5449:6;5444:3;5437:4;5429:6;5425:17;5403:53;:::i;:::-;5472:16;;;;;5220:274;-1:-1:-1;;5220:274:279:o;5499:277::-;5566:6;5619:2;5607:9;5598:7;5594:23;5590:32;5587:52;;;5635:1;5632;5625:12;5587:52;5667:9;5661:16;5720:5;5713:13;5706:21;5699:5;5696:32;5686:60;;5742:1;5739;5732:12;6339:222;6379:4;6407:1;6404;6401:8;6398:131;;;6451:10;6446:3;6442:20;6439:1;6432:31;6486:4;6483:1;6476:15;6514:4;6511:1;6504:15;6398:131;-1:-1:-1;6546:9:279;;6339:222::o;7632:258::-;7674:3;7712:5;7706:12;7739:6;7734:3;7727:19;7755:63;7811:6;7804:4;7799:3;7795:14;7788:4;7781:5;7777:16;7755:63;:::i;:::-;7872:2;7851:15;-1:-1:-1;;7847:29:279;7838:39;;;;7879:4;7834:50;;7632:258;-1:-1:-1;;7632:258:279:o;7895:450::-;8145:2;8134:9;8127:21;8184:1;8179:2;8168:9;8164:18;8157:29;-1:-1:-1;;;8217:2:279;8206:9;8202:18;8195:39;8272:3;8265:4;8254:9;8250:20;8243:33;8108:4;8293:46;8334:3;8323:9;8319:19;8311:6;8293:46;:::i;8350:450::-;8600:2;8589:9;8582:21;8639:1;8634:2;8623:9;8619:18;8612:29;-1:-1:-1;;;8672:2:279;8661:9;8657:18;8650:39;8727:3;8720:4;8709:9;8705:20;8698:33;8563:4;8748:46;8789:3;8778:9;8774:19;8766:6;8748:46;:::i;9375:374::-;9605:2;9594:9;9587:21;9568:4;9625:49;9670:2;9659:9;9655:18;9288:2;9276:15;;-1:-1:-1;;;9316:4:279;9307:14;;9300:36;9361:2;9352:12;;9211:159;9625:49;-1:-1:-1;;;;;9710:32:279;;;;9705:2;9690:18;;;;9683:60;;;;-1:-1:-1;9617:57:279;9375:374::o;9918:::-;10148:2;10137:9;10130:21;10111:4;10168:49;10213:2;10202:9;10198:18;9831:2;9819:15;;-1:-1:-1;;;9859:4:279;9850:14;;9843:36;9904:2;9895:12;;9754:159;10700:348;10930:2;10919:9;10912:21;10893:4;10950:49;10995:2;10984:9;10980:18;9288:2;9276:15;;-1:-1:-1;;;9316:4:279;9307:14;;9300:36;9361:2;9352:12;;9211:159;10950:49;10942:57;;11035:6;11030:2;11019:9;11015:18;11008:34;10700:348;;;;:::o;11053:::-;11283:2;11272:9;11265:21;11246:4;11303:49;11348:2;11337:9;11333:18;9831:2;9819:15;;-1:-1:-1;;;9859:4:279;9850:14;;9843:36;9904:2;9895:12;;9754:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/AlpacaERC4626Test.t.sol",
    "id": 52204,
    "exportedSymbols": {
      "AlpacaERC4626": [
        30595
      ],
      "AlpacaERC4626Test": [
        52203
      ],
      "DSTest": [
        68503
      ],
      "ERC20": [
        91926
      ],
      "IAlpacaVault": [
        30459
      ],
      "MockERC20": [
        91538
      ],
      "MockVault": [
        60828
      ],
      "Vm": [
        72013
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2718:199",
    "nodes": [
      {
        "id": 51933,
        "nodeType": "PragmaDirective",
        "src": "39:25:199",
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".23"
        ]
      },
      {
        "id": 51934,
        "nodeType": "ImportDirective",
        "src": "66:26:199",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52204,
        "sourceUnit": 68504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51935,
        "nodeType": "ImportDirective",
        "src": "93:26:199",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52204,
        "sourceUnit": 72014,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51937,
        "nodeType": "ImportDirective",
        "src": "121:49:199",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52204,
        "sourceUnit": 91927,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51936,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "130:5:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51939,
        "nodeType": "ImportDirective",
        "src": "171:67:199",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52204,
        "sourceUnit": 91539,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51938,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "180:9:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51942,
        "nodeType": "ImportDirective",
        "src": "240:87:199",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/compound/strategies/AlpacaERC4626.sol",
        "file": "../compound/strategies/AlpacaERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52204,
        "sourceUnit": 30596,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51940,
              "name": "AlpacaERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "249:13:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51941,
              "name": "IAlpacaVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "264:12:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51944,
        "nodeType": "ImportDirective",
        "src": "328:57:199",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/alpaca/MockVault.sol",
        "file": "./mocks/alpaca/MockVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52204,
        "sourceUnit": 60829,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51943,
              "name": "MockVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "337:9:199",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52203,
        "nodeType": "ContractDefinition",
        "src": "387:2369:199",
        "nodes": [
          {
            "id": 51952,
            "nodeType": "VariableDeclaration",
            "src": "428:40:199",
            "constant": true,
            "functionSelector": "3a768463",
            "mutability": "constant",
            "name": "vm",
            "nameLocation": "447:2:199",
            "scope": 52203,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$72013",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 51948,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51947,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72013,
                "src": "428:2:199"
              },
              "referencedDeclaration": 72013,
              "src": "428:2:199",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$72013",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 51950,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 66824,
                  "src": "455:12:199",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 51949,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 72013,
                "src": "452:2:199",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$72013_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 51951,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "452:16:199",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$72013",
                "typeString": "contract Vm"
              }
            },
            "visibility": "public"
          },
          {
            "id": 51955,
            "nodeType": "VariableDeclaration",
            "src": "473:27:199",
            "constant": false,
            "mutability": "mutable",
            "name": "alpacaERC4626",
            "nameLocation": "487:13:199",
            "scope": 52203,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
              "typeString": "contract AlpacaERC4626"
            },
            "typeName": {
              "id": 51954,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51953,
                "name": "AlpacaERC4626",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30595,
                "src": "473:13:199"
              },
              "referencedDeclaration": 30595,
              "src": "473:13:199",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                "typeString": "contract AlpacaERC4626"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51958,
            "nodeType": "VariableDeclaration",
            "src": "505:19:199",
            "constant": false,
            "mutability": "mutable",
            "name": "testToken",
            "nameLocation": "515:9:199",
            "scope": 52203,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$91538",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 51957,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51956,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 91538,
                "src": "505:9:199"
              },
              "referencedDeclaration": 91538,
              "src": "505:9:199",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$91538",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51961,
            "nodeType": "VariableDeclaration",
            "src": "528:19:199",
            "constant": false,
            "mutability": "mutable",
            "name": "mockVault",
            "nameLocation": "538:9:199",
            "scope": 52203,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVault_$60828",
              "typeString": "contract MockVault"
            },
            "typeName": {
              "id": 51960,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51959,
                "name": "MockVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60828,
                "src": "528:9:199"
              },
              "referencedDeclaration": 60828,
              "src": "528:9:199",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVault_$60828",
                "typeString": "contract MockVault"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51964,
            "nodeType": "VariableDeclaration",
            "src": "552:30:199",
            "constant": false,
            "mutability": "mutable",
            "name": "depositAmount",
            "nameLocation": "560:13:199",
            "scope": 52203,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51962,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "552:7:199",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030653138",
              "id": 51963,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "576:6:199",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "100e18"
            },
            "visibility": "internal"
          },
          {
            "id": 52006,
            "nodeType": "FunctionDefinition",
            "src": "587:242:199",
            "body": {
              "id": 52005,
              "nodeType": "Block",
              "src": "611:218:199",
              "statements": [
                {
                  "expression": {
                    "id": 51975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51967,
                      "name": "testToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51958,
                      "src": "617:9:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$91538",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "54657374546f6b656e",
                          "id": 51971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "643:11:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          "value": "TestToken"
                        },
                        {
                          "hexValue": "545354",
                          "id": 51972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "656:5:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          "value": "TST"
                        },
                        {
                          "hexValue": "3138",
                          "id": 51973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "663:2:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
                            "typeString": "literal_string \"TestToken\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                            "typeString": "literal_string \"TST\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 51970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "629:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$91538_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 51969,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 51968,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 91538,
                            "src": "633:9:199"
                          },
                          "referencedDeclaration": 91538,
                          "src": "633:9:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$91538",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 51974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "629:37:199",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$91538",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "617:49:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$91538",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 51976,
                  "nodeType": "ExpressionStatement",
                  "src": "617:49:199"
                },
                {
                  "expression": {
                    "id": 51989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51977,
                      "name": "mockVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51961,
                      "src": "672:9:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVault_$60828",
                        "typeString": "contract MockVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 51983,
                              "name": "testToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51958,
                              "src": "706:9:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$91538",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$91538",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 51982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "698:7:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51981,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "698:7:199",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "698:18:199",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "4d6f636b5661756c74",
                          "id": 51985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "718:11:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8a7e1a0739a0f0adeef3b969c72d260ae979255ecde3cef0f09fbbf195eff4a1",
                            "typeString": "literal_string \"MockVault\""
                          },
                          "value": "MockVault"
                        },
                        {
                          "hexValue": "4d56",
                          "id": 51986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "731:4:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1c16d2c62307891734e770f2023626451e0c3d76f5ac0019c15f8071e68c635f",
                            "typeString": "literal_string \"MV\""
                          },
                          "value": "MV"
                        },
                        {
                          "hexValue": "3138",
                          "id": 51987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "737:2:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_8a7e1a0739a0f0adeef3b969c72d260ae979255ecde3cef0f09fbbf195eff4a1",
                            "typeString": "literal_string \"MockVault\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_1c16d2c62307891734e770f2023626451e0c3d76f5ac0019c15f8071e68c635f",
                            "typeString": "literal_string \"MV\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          }
                        ],
                        "id": 51980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "684:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockVault_$60828_$",
                          "typeString": "function (address,string memory,string memory,uint8) returns (contract MockVault)"
                        },
                        "typeName": {
                          "id": 51979,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 51978,
                            "name": "MockVault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 60828,
                            "src": "688:9:199"
                          },
                          "referencedDeclaration": 60828,
                          "src": "688:9:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVault_$60828",
                            "typeString": "contract MockVault"
                          }
                        }
                      },
                      "id": 51988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "684:56:199",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVault_$60828",
                        "typeString": "contract MockVault"
                      }
                    },
                    "src": "672:68:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVault_$60828",
                      "typeString": "contract MockVault"
                    }
                  },
                  "id": 51990,
                  "nodeType": "ExpressionStatement",
                  "src": "672:68:199"
                },
                {
                  "expression": {
                    "id": 52003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51991,
                      "name": "alpacaERC4626",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51955,
                      "src": "746:13:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                        "typeString": "contract AlpacaERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51995,
                          "name": "testToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51958,
                          "src": "780:9:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$91538",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 51999,
                                  "name": "mockVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51961,
                                  "src": "812:9:199",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockVault_$60828",
                                    "typeString": "contract MockVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockVault_$60828",
                                    "typeString": "contract MockVault"
                                  }
                                ],
                                "id": 51998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "804:7:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 51997,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "804:7:199",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 52000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "804:18:199",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51996,
                            "name": "IAlpacaVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30459,
                            "src": "791:12:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IAlpacaVault_$30459_$",
                              "typeString": "type(contract IAlpacaVault)"
                            }
                          },
                          "id": 52001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "791:32:199",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlpacaVault_$30459",
                            "typeString": "contract IAlpacaVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$91538",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IAlpacaVault_$30459",
                            "typeString": "contract IAlpacaVault"
                          }
                        ],
                        "id": 51994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "762:17:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$91926_$_t_contract$_IAlpacaVault_$30459_$returns$_t_contract$_AlpacaERC4626_$30595_$",
                          "typeString": "function (contract ERC20,contract IAlpacaVault) returns (contract AlpacaERC4626)"
                        },
                        "typeName": {
                          "id": 51993,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 51992,
                            "name": "AlpacaERC4626",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30595,
                            "src": "766:13:199"
                          },
                          "referencedDeclaration": 30595,
                          "src": "766:13:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                            "typeString": "contract AlpacaERC4626"
                          }
                        }
                      },
                      "id": 52002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "762:62:199",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                        "typeString": "contract AlpacaERC4626"
                      }
                    },
                    "src": "746:78:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                      "typeString": "contract AlpacaERC4626"
                    }
                  },
                  "id": 52004,
                  "nodeType": "ExpressionStatement",
                  "src": "746:78:199"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "596:5:199",
            "parameters": {
              "id": 51965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:2:199"
            },
            "returnParameters": {
              "id": 51966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:0:199"
            },
            "scope": 52203,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52050,
            "nodeType": "FunctionDefinition",
            "src": "833:291:199",
            "body": {
              "id": 52049,
              "nodeType": "Block",
              "src": "873:251:199",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 52010,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51955,
                            "src": "888:13:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 52011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91559,
                          "src": "888:18:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 52012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "888:20:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "4d696461732054657374546f6b656e205661756c74",
                        "id": 52013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "910:23:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_464d007ff07c073271a1f2edbe01d503f425de555d02f19d052d16a2fe37e6ca",
                          "typeString": "literal_string \"Midas TestToken Vault\""
                        },
                        "value": "Midas TestToken Vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_464d007ff07c073271a1f2edbe01d503f425de555d02f19d052d16a2fe37e6ca",
                          "typeString": "literal_string \"Midas TestToken Vault\""
                        }
                      ],
                      "id": 52009,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 68356,
                      "src": "879:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 52014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "879:55:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52015,
                  "nodeType": "ExpressionStatement",
                  "src": "879:55:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 52017,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51955,
                            "src": "949:13:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 52018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91561,
                          "src": "949:20:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 52019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "949:22:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "6d76545354",
                        "id": 52020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "973:7:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a88f38e3758bde68325d8e4c101dd4b522c96aa130a13d56b85cfa154032e2f",
                          "typeString": "literal_string \"mvTST\""
                        },
                        "value": "mvTST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a88f38e3758bde68325d8e4c101dd4b522c96aa130a13d56b85cfa154032e2f",
                          "typeString": "literal_string \"mvTST\""
                        }
                      ],
                      "id": 52016,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 68356,
                      "src": "940:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 52021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:41:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52022,
                  "nodeType": "ExpressionStatement",
                  "src": "940:41:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 52026,
                                "name": "alpacaERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51955,
                                "src": "1004:13:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                                  "typeString": "contract AlpacaERC4626"
                                }
                              },
                              "id": 52027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "asset",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65398,
                              "src": "1004:19:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$91926_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 52028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1004:21:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$91926",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$91926",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 52025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "996:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52024,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "996:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "996:30:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52032,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "1036:9:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$91538",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$91538",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 52031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1028:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52030,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1028:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1028:18:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 52023,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67037,
                      "src": "987:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 52034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:60:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52035,
                  "nodeType": "ExpressionStatement",
                  "src": "987:60:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 52039,
                                "name": "alpacaERC4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51955,
                                "src": "1070:13:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                                  "typeString": "contract AlpacaERC4626"
                                }
                              },
                              "id": 52040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "alpacaVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30472,
                              "src": "1070:25:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IAlpacaVault_$30459_$",
                                "typeString": "function () view external returns (contract IAlpacaVault)"
                              }
                            },
                            "id": 52041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1070:27:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAlpacaVault_$30459",
                              "typeString": "contract IAlpacaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAlpacaVault_$30459",
                              "typeString": "contract IAlpacaVault"
                            }
                          ],
                          "id": 52038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1062:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52037,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1062:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1062:36:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52045,
                            "name": "mockVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51961,
                            "src": "1108:9:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVault_$60828",
                              "typeString": "contract MockVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVault_$60828",
                              "typeString": "contract MockVault"
                            }
                          ],
                          "id": 52044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1100:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52043,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1100:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1100:18:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 52036,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67037,
                      "src": "1053:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 52047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:66:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52048,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:66:199"
                }
              ]
            },
            "functionSelector": "70bdc855",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitializedValues",
            "nameLocation": "842:21:199",
            "parameters": {
              "id": 52007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:2:199"
            },
            "returnParameters": {
              "id": 52008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "873:0:199"
            },
            "scope": 52203,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52084,
            "nodeType": "FunctionDefinition",
            "src": "1128:200:199",
            "body": {
              "id": 52083,
              "nodeType": "Block",
              "src": "1154:174:199",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52058,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1183:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          ],
                          "id": 52057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1175:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52056,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1175:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1175:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52060,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "1190:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52053,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51958,
                        "src": "1160:9:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$91538",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91524,
                      "src": "1160:14:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 52061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:44:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52062,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:44:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 52068,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51955,
                            "src": "1236:13:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                              "typeString": "contract AlpacaERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                              "typeString": "contract AlpacaERC4626"
                            }
                          ],
                          "id": 52067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1228:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52066,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1228:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1228:22:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52070,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "1252:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 52063,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51958,
                        "src": "1210:9:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$91538",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 52065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91643,
                      "src": "1210:17:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 52071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1210:56:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52072,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:56:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52076,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "1294:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52079,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1317:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          ],
                          "id": 52078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1309:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52077,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1309:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1309:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52073,
                        "name": "alpacaERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51955,
                        "src": "1272:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                          "typeString": "contract AlpacaERC4626"
                        }
                      },
                      "id": 52075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65472,
                      "src": "1272:21:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 52081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:51:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52082,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:51:199"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1137:7:199",
            "parameters": {
              "id": 52051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:2:199"
            },
            "returnParameters": {
              "id": 52052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:0:199"
            },
            "scope": 52203,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52142,
            "nodeType": "FunctionDefinition",
            "src": "1332:523:199",
            "body": {
              "id": 52141,
              "nodeType": "Block",
              "src": "1362:493:199",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52087,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52084,
                      "src": "1368:7:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 52088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1368:9:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52089,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:9:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52095,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1464:4:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 52094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1456:7:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52093,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1456:7:199",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1456:13:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52091,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "1436:9:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$91538",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 52092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "1436:19:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1436:34:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 52098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1472:1:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 52090,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "1427:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:47:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52100,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:47:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52106,
                                "name": "mockVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51961,
                                "src": "1517:9:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$60828",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$60828",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 52105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1509:7:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52104,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1509:7:199",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1509:18:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52102,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "1489:9:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$91538",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 52103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "1489:19:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1489:39:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52109,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "1530:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52101,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "1480:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1480:64:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52111,
                  "nodeType": "ExpressionStatement",
                  "src": "1480:64:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 52113,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51955,
                            "src": "1604:13:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 52114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalAssets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30549,
                          "src": "1604:25:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 52115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1604:27:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52116,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "1633:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52112,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "1595:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1595:52:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52118,
                  "nodeType": "ExpressionStatement",
                  "src": "1595:52:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52124,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1704:4:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 52123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1696:7:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52122,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1696:7:199",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1696:13:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52120,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51955,
                            "src": "1662:13:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 52121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOfUnderlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30564,
                          "src": "1662:33:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1662:48:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52127,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "1712:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52119,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "1653:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:73:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52129,
                  "nodeType": "ExpressionStatement",
                  "src": "1653:73:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52135,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1828:4:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 52134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1820:7:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52133,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1820:7:199",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1820:13:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52131,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51955,
                            "src": "1796:13:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 52132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "1796:23:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:38:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52138,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51964,
                        "src": "1836:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52130,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "1787:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1787:63:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52140,
                  "nodeType": "ExpressionStatement",
                  "src": "1787:63:199"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "1341:11:199",
            "parameters": {
              "id": 52085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1352:2:199"
            },
            "returnParameters": {
              "id": 52086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:199"
            },
            "scope": 52203,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52202,
            "nodeType": "FunctionDefinition",
            "src": "1859:895:199",
            "body": {
              "id": 52201,
              "nodeType": "Block",
              "src": "1890:864:199",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52145,
                      "name": "deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52084,
                      "src": "1896:7:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 52146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:9:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52147,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:9:199"
                },
                {
                  "assignments": [
                    52149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52149,
                      "mutability": "mutable",
                      "name": "withdrawAmount",
                      "nameLocation": "1996:14:199",
                      "nodeType": "VariableDeclaration",
                      "scope": 52201,
                      "src": "1988:22:199",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52148,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1988:7:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52153,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 52152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 52150,
                      "name": "depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51964,
                      "src": "2013:13:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 52151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2029:4:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "2013:20:199",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1988:45:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52157,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52149,
                        "src": "2062:14:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52160,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2086:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          ],
                          "id": 52159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2078:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52158,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2078:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2078:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 52164,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2101:4:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                              "typeString": "contract AlpacaERC4626Test"
                            }
                          ],
                          "id": 52163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2093:7:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 52162,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2093:7:199",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2093:13:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 52154,
                        "name": "alpacaERC4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51955,
                        "src": "2039:13:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                          "typeString": "contract AlpacaERC4626"
                        }
                      },
                      "id": 52156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65596,
                      "src": "2039:22:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 52166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:68:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 52167,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:68:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52173,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2195:4:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 52172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2187:7:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52171,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2187:7:199",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2187:13:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52169,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "2167:9:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$91538",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 52170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "2167:19:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2167:34:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52176,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52149,
                        "src": "2203:14:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52168,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "2158:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:60:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52178,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:60:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52184,
                                "name": "mockVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51961,
                                "src": "2261:9:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$60828",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$60828",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 52183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2253:7:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52182,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2253:7:199",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2253:18:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52180,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51958,
                            "src": "2233:9:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$91538",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 52181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "2233:19:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2233:39:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 52187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2274:4:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 52179,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "2224:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2224:55:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52189,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:55:199"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 52195,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2736:4:199",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlpacaERC4626Test_$52203",
                                  "typeString": "contract AlpacaERC4626Test"
                                }
                              ],
                              "id": 52194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2728:7:199",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 52193,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2728:7:199",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 52196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2728:13:199",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 52191,
                            "name": "alpacaERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51955,
                            "src": "2704:13:199",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlpacaERC4626_$30595",
                              "typeString": "contract AlpacaERC4626"
                            }
                          },
                          "id": 52192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "2704:23:199",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 52197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2704:38:199",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 52198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2744:4:199",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 52190,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "2695:8:199",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 52199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2695:54:199",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52200,
                  "nodeType": "ExpressionStatement",
                  "src": "2695:54:199"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "1868:12:199",
            "parameters": {
              "id": 52143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1880:2:199"
            },
            "returnParameters": {
              "id": 52144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:199"
            },
            "scope": 52203,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51945,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68503,
              "src": "417:6:199"
            },
            "id": 51946,
            "nodeType": "InheritanceSpecifier",
            "src": "417:6:199"
          }
        ],
        "canonicalName": "AlpacaERC4626Test",
        "contractDependencies": [
          30595,
          60828,
          91538
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          52203,
          68503
        ],
        "name": "AlpacaERC4626Test",
        "nameLocation": "396:17:199",
        "scope": 52204,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}