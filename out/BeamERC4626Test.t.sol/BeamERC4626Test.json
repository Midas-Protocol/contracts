{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "id1",
          "type": "uint256"
        }
      ],
      "name": "forChains",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id0",
          "type": "uint256"
        }
      ],
      "name": "forChains",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitializedValues",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060408190526000805460ff191660011790556200001e9062000966565b604051809103906000f0801580156200003b573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060646008553480156200007457600080fd5b506200007f62000085565b620009a6565b60006001600160a01b0316600060029054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010a919062000974565b6001600160a01b03161415620009645760005460405163189acdbd60e31b8152306004820152620100009091046001600160a01b03169063c4d66de890602401600060405180830381600087803b1580156200016557600080fd5b505af11580156200017a573d6000803e3d6000fd5b5050505060384614156200053f5760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b1580156200020657600080fd5b505af11580156200021b573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273ca143ce32fe78f1f7019d7d551a6402fc5350c736024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620002a757600080fd5b505af1158015620002bc573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600480820192909252604481019190915263189554d160e21b606482015273e9e7cea3dedca5984780bafc599bd69add087d566024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200033e57600080fd5b505af115801562000353573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b606482015273c3abf2cb82c65474cef8f90f1a4dae79929b19406024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620003e057600080fd5b505af1158015620003f5573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b815260048101919091526012604482015271747761704f7261636c6573466163746f727960701b6064820152738853f26c198fd5693e7886c081164e0c3f0a4e516024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200048357600080fd5b505af115801562000498573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152600f60448201526e636861696e6c696e6b4f7261636c6560881b6064820152732b5311de4555506400273cfaafb4393f01ec25676024820152620100009091046001600160a01b03169250639b2ea4bd91506084015b600060405180830381600087803b1580156200052457600080fd5b505af115801562000539573d6000803e3d6000fd5b50505050565b6061461415620007985760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273ae13d989dac2f0debff460ac112a837c89baa7cd6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b158015620005c757600080fd5b505af1158015620005dc573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273b7926c0430afb07aa7defde6da862ae0bde767bc6024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200066857600080fd5b505af11580156200067d573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b606482015273c3abf2cb82c65474cef8f90f1a4dae79929b19406024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200070a57600080fd5b505af11580156200071f573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b815260048101919091526012604482015271747761704f7261636c6573466163746f727960701b606482015273944fed08a91983d06f653e9f55eca995316ccd3e6024820152620100009091046001600160a01b03169250639b2ea4bd915060840162000509565b610504461415620009645760005460408051639b2ea4bd60e01b8152600481019190915260066044820152653bba37b5b2b760d11b606482015273acc15dc74880c9944775448304b263d191c6077f6024820152620100009091046001600160a01b031690639b2ea4bd90608401600060405180830381600087803b1580156200082157600080fd5b505af115801562000836573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b81526004810191909152601060448201526f756e69737761705632466163746f727960801b606482015273985bca32293a7a496300a48081947321177a86fd6024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b158015620008c257600080fd5b505af1158015620008d7573d6000803e3d6000fd5b505060005460408051639b2ea4bd60e01b8152600481019190915260116044820152706d617374657250726963654f7261636c6560781b60648201527314c15b9ec83ed79f23bf71d51741f58b69ff14946024820152620100009091046001600160a01b03169250639b2ea4bd9150608401600060405180830381600087803b1580156200052457600080fd5b565b610b738062007b5a83390190565b6000602082840312156200098757600080fd5b81516001600160a01b03811681146200099f57600080fd5b9392505050565b6171a480620009b66000396000f3fe60806040523480156200001157600080fd5b50600436106200009f5760003560e01c806370bdc855116200006e57806370bdc85514620001275780637f924c4e1462000131578063ba414fa6146200013b578063d509b16c1462000145578063fa7626d4146200014f57600080fd5b80630a9254e414620000a457806315a9c83d14620000b057806325bf0d1814620000dc5780633a76846314620000f2575b600080fd5b620000ae6200015d565b005b620000c7620000c1366004620017fe565b620006e1565b60405190151581526020015b60405180910390f35b620000c7620000ed36600462001821565b461490565b6200010e737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001620000d3565b620000ae620006f8565b620000ae62000ac8565b620000c762000c91565b620000ae62000dc6565b600054620000c79060ff1681565b46610504148015620006de57600380546001600160a01b03199081167399588867e817023162f4d4829995299054a5fc579081179092556004805490911673cd3b51d98478d53f4515a306be565c6eebef1d58179055604051600090819081908190620001ca90620017c6565b6001600160a01b039586168152602081019490945291841660408401526060830152909116608082015260a001604051809103906000f08015801562000214573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03929092169190911790556040516372eb5f8160e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e5d6bf0290602401600060405180830381600087803b1580156200028357600080fd5b505af115801562000298573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9250631f7b4f309150602401600060405180830381600087803b158015620002ea57600080fd5b505af1158015620002ff573d6000803e3d6000fd5b50505050600460009054906101000a90046001600160a01b03166000803060006040516200032d90620017d4565b6001600160a01b0395861681529385166020850152918416604084015283166060830152909116608082015260a001604051809103906000f08015801562000379573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b03929092169182179055604051600190620003aa90620017e2565b6001600160a01b03909216825263ffffffff166020820152604001604051809103906000f080158015620003e2573d6000803e3d6000fd5b50600780546001600160a01b0319166001600160a01b03928316908117909155600654604051638fb0091360e01b8152600481019290925290911690638fb0091390602401600060405180830381600087803b1580156200044257600080fd5b505af115801562000457573d6000803e3d6000fd5b50506003546006546004546002546040516001600160a01b0394851696509284169450600093918216929116906200048f90620017f0565b6001600160a01b0395861681529385166020850152604084019290925283166060830152909116608082015260a001604051809103906000f080158015620004db573d6000803e3d6000fd5b50600180546001600160a01b039283166001600160a01b0319918216811790925560058054909116821790556006546040516338ae568b60e11b815260048101929092529091169063715cad1690602401600060405180830381600087803b1580156200054757600080fd5b505af11580156200055c573d6000803e3d6000fd5b50600092508291506200056c9050565b60405190808252806020026020018201604052801562000596578160200160208202803683370190505b5060025460035460405163508593ab60e01b81529293506001600160a01b039182169263508593ab92620005da926001929116906000908190889060040162001851565b600060405180830381600087803b158015620005f557600080fd5b505af11580156200060a573d6000803e3d6000fd5b50506040516372eb5f8160e11b815260026004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063e5d6bf029150602401600060405180830381600087803b1580156200065c57600080fd5b505af115801562000671573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260026004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9250631f7b4f309150602401600060405180830381600087803b158015620006c357600080fd5b505af1158015620006d8573d6000803e3d6000fd5b50505050505b50565b600082461480620006f157508146145b9392505050565b46610504148015620006de57600154604080516306fdde0360e01b81529051620007ff926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000751573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200077b9190810190620018f9565b600360009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620007cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620007f99190810190620018f9565b62000f04565b600154604080516395d89b4160e01b81529051620008ca926001600160a01b0316916395d89b419160048083019260009291908290030181865afa1580156200084c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008769190810190620018f9565b600360009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620007cf573d6000803e3d6000fd5b600154604080516338d52e0f60e01b815290516200094f926001600160a01b0316916338d52e0f9160048083019260209291908290030181865afa15801562000917573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200093d9190620019c8565b6003546001600160a01b031662001051565b6001546040805163411557d160e01b81529051620009d4926001600160a01b03169163411557d19160048083019260209291908290030181865afa1580156200099c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c29190620019c8565b6002546001600160a01b031662001051565b600554600154620009f2916001600160a01b03908116911662001051565b600354600154600254604051636eb1769f60e11b81526001600160a01b039283166004820152908216602482015262000a8192919091169063dd62ed3e906044015b602060405180830381865afa15801562000a52573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a789190620019e8565b6000196200114b565b60048054600154600754604051636eb1769f60e11b81526001600160a01b039283169481019490945281166024840152620006de9291169063dd62ed3e9060440162000a34565b46610504148015620006de5762000ade62001230565b6003546040516370a0823160e01b815230600482015262000b59916001600160a01b0316906370a08231906024015b602060405180830381865afa15801562000b2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b519190620019e8565b60006200114b565b6003546002546040516370a0823160e01b81526001600160a01b03918216600482015262000bdd9291909116906370a08231906024015b602060405180830381865afa15801562000bae573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd49190620019e8565b6008546200114b565b600154604080516278744560e21b8152905162000c29926001600160a01b0316916301e1d1149160048083019260209291908290030181865afa15801562000bae573d6000803e3d6000fd5b600154604051633af9e66960e01b815230600482015262000c5d916001600160a01b031690633af9e6699060240162000b90565b6001546040516370a0823160e01b8152306004820152620006de916001600160a01b0316906370a082319060240162000b90565b60008054610100900460ff161562000cb25750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000dc15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d43917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001a02565b60408051601f198184030181529082905262000d5f9162001a35565b6000604051808303816000865af19150503d806000811462000d9e576040519150601f19603f3d011682016040523d82523d6000602084013e62000da3565b606091505b509150508080602001905181019062000dbd919062001a53565b9150505b919050565b46610504148015620006de5762000ddc62001230565b600154600854604051632d182be560e21b81526004810191909152306024820181905260448201526001600160a01b039091169063b460af94906064016020604051808303816000875af115801562000e39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e5f9190620019e8565b506003546040516370a0823160e01b815230600482015262000e94916001600160a01b0316906370a082319060240162000b90565b6003546002546040516370a0823160e01b81526001600160a01b03918216600482015262000ed09291909116906370a082319060240162000b0d565b6001546040516370a0823160e01b8152306004820152620006de916001600160a01b0316906370a082319060240162000b0d565b8060405160200162000f17919062001a35565b604051602081830303815290604052805190602001208260405160200162000f40919062001a35565b60405160208183030381529060405280519060200120146200104d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000fc99060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162001002919062001aa5565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516200103b919062001ada565b60405180910390a16200104d620016b3565b5050565b806001600160a01b0316826001600160a01b0316146200104d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010d99060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001112919062001b0f565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516200103b919062001b54565b8082146200104d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011be9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620011f7919062001b7f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200103b919062001bb8565b60405163ca669fa760e01b815273457c5b8a6224f524d9f15fa6b6d70fcad8eba6236004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200129157600080fd5b505af1158015620012a6573d6000803e3d6000fd5b505060035460085460405163095ea7b360e01b815273457c5b8a6224f524d9f15fa6b6d70fcad8eba623600482015260248101919091526001600160a01b03909116925063095ea7b391506044016020604051808303816000875af115801562001314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200133a919062001a53565b5060405163ca669fa760e01b815273457c5b8a6224f524d9f15fa6b6d70fcad8eba6236004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200139c57600080fd5b505af1158015620013b1573d6000803e3d6000fd5b50506003546008546040516323b872dd60e01b815273457c5b8a6224f524d9f15fa6b6d70fcad8eba623600482015230602482015260448101919091526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af115801562001425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200144b919062001a53565b506003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001496573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014bc9190620019e8565b60035460015460085460405163095ea7b360e01b81526001600160a01b0392831660048201526024810191909152929350169063095ea7b3906044016020604051808303816000875af115801562001518573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200153e919062001a53565b50600654600154604051632e6f912b60e21b81526001600160a01b03918216600482015230602482015291169063b9be44ac906044016020604051808303816000875af115801562001594573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015ba9190620019e8565b50600154600854604051636e553f6560e01b815260048101919091523060248201526001600160a01b0390911690636e553f65906044016020604051808303816000875af115801562001611573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016379190620019e8565b50600654600154604051632e6f912b60e21b81526001600160a01b03918216600482015230602482015291169063b9be44ac906044016020604051808303816000875af11580156200168d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200104d9190620019e8565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620017b55760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001750929160200162001a02565b60408051601f19818403018152908290526200176c9162001a35565b6000604051808303816000865af19150503d8060008114620017ab576040519150601f19603f3d011682016040523d82523d6000602084013e620017b0565b606091505b505050505b6000805461ff001916610100179055565b6117818062001be483390190565b6114a4806200336583390190565b610ab7806200480983390190565b611eaf80620052c083390190565b600080604083850312156200181257600080fd5b50508035926020909101359150565b6000602082840312156200183457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060a08201878352602060018060a01b038089168286015261ffff8816604086015286606086015260a0608086015282865180855260c087019150838801945060005b81811015620018b557855184168352948401949184019160010162001895565b50909b9a5050505050505050505050565b60005b83811015620018e3578181015183820152602001620018c9565b83811115620018f3576000848401525b50505050565b6000602082840312156200190c57600080fd5b815167ffffffffffffffff808211156200192557600080fd5b818401915084601f8301126200193a57600080fd5b8151818111156200194f576200194f6200183b565b604051601f8201601f19908116603f011681019083821181831017156200197a576200197a6200183b565b816040528281528760208487010111156200199457600080fd5b620019a7836020830160208801620018c6565b979650505050505050565b6001600160a01b0381168114620006de57600080fd5b600060208284031215620019db57600080fd5b8151620006f181620019b2565b600060208284031215620019fb57600080fd5b5051919050565b6001600160e01b031983168152815160009062001a27816004850160208701620018c6565b919091016004019392505050565b6000825162001a49818460208701620018c6565b9190910192915050565b60006020828403121562001a6657600080fd5b81518015158114620006f157600080fd5b6000815180845262001a91816020860160208601620018c6565b601f01601f19169290920160200192915050565b604081526009604082015268202056616c7565206160b81b6060820152608060208201526000620006f1608083018462001a77565b60408152600960408201526810102b30b63ab2903160b91b6060820152608060208201526000620006f1608083018462001a77565b60408152600062001b3a60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062001b3a60408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062001baa60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062001baa60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60806040523480156200001157600080fd5b5060405162001781380380620017818339810160408190526200003491620000ac565b62000044426301e1338062000114565b600355600880546001600160a01b03199081166001600160a01b03938416179091556001949094556000805485169582169590951790945560078054909316919093161790556002556200013b565b6001600160a01b0381168114620000a957600080fd5b50565b600080600080600060a08688031215620000c557600080fd5b8551620000d28162000093565b602087015160408801519196509450620000ec8162000093565b606087015160808801519194509250620001068162000093565b809150509295509295909350565b600082198211156200013657634e487b7160e01b600052601160045260246000fd5b500190565b611636806200014b6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806360e772e1116100a257806393f1a40b1161007157806393f1a40b14610255578063bc4a9f28146102b5578063de73149d146102be578063e2bbb158146102c8578063e6fd48bc146102db57600080fd5b806360e772e114610214578063812c64f11461021d578063838f66a114610239578063913653231461024c57600080fd5b806341275358116100de57806341275358146101d0578063441a3e70146101e3578063474fa630146101f8578063508593ab1461020157600080fd5b80630867bacf146101105780631526fe271461014057806317caf6f1146101965780632e6c998d146101ad575b600080fd5b600054610123906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015361014e3660046113b6565b6102e4565b604080516001600160a01b039098168852602088019690965294860193909352606085019190915261ffff16608084015260a083015260c082015260e001610137565b61019f60055481565b604051908152602001610137565b6101c06101bb3660046113e4565b610341565b6040519015158152602001610137565b600854610123906001600160a01b031681565b6101f66101f1366004611414565b610381565b005b61019f60065481565b6101f661020f366004611436565b610638565b61019f60015481565b6102266103e881565b60405161ffff9091168152602001610137565b600754610123906001600160a01b031681565b61019f60045481565b6102956102633660046113e4565b600a60209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610137565b61019f60025481565b61019f6212750081565b6101f66102d6366004611414565b610937565b61019f60035481565b600981815481106102f457600080fd5b600091825260209091206008909102018054600182015460028301546003840154600485015460058601546006909601546001600160a01b03909516965092949193909261ffff16919087565b6000828152600a602090815260408083206001600160a01b038516845290915281206003544210801590610379575080600301544210155b949350505050565b600060098381548110610396576103966114ea565b60009182526020808320868452600a8252604080852033865290925292208054600890920290920192508311156104145760405162461bcd60e51b815260206004820181905260248201527f77697468647261773a207573657220616d6f756e74206e6f7420656e6f75676860448201526064015b60405180910390fd5b82826006015410156104685760405162461bcd60e51b815260206004820152601f60248201527f77697468647261773a20706f6f6c20746f74616c206e6f7420656e6f75676800604482015260640161040b565b61047184610945565b61047a84610b70565b821561053f57828160000160008282546104949190611516565b909155505060005482546001600160a01b03908116911614156104c95782600460008282546104c39190611516565b90915550505b815460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d919061152d565b505b6003820154815464e8d4a510009161055691611556565b6105609190611575565b600182015560005b600783015481101561061157826007018181548110610589576105896114ea565b600091825260209091200154825460405163075bbb7f60e41b81526004810188905233602482015260448101919091526001600160a01b03909116906375bbb7f090606401600060405180830381600087803b1580156105e857600080fd5b505af11580156105fc573d6000803e3d6000fd5b505050508061060a90611597565b9050610568565b508215610632578282600601600082825461062c9190611516565b90915550505b50505050565b600a8111156106895760405162461bcd60e51b815260206004820152601760248201527f6164643a20746f6f206d616e7920726577617264657273000000000000000000604482015260640161040b565b6103e861ffff851611156106df5760405162461bcd60e51b815260206004820152601960248201527f6164643a206465706f7369742066656520746f6f206869676800000000000000604482015260640161040b565b621275008311156107325760405162461bcd60e51b815260206004820152601d60248201527f6164643a20696e76616c6964206861727665737420696e74657276616c000000604482015260640161040b565b60005b818110156107d257610776838383818110610752576107526114ea565b905060200201602081019061076791906115b2565b6001600160a01b03163b151590565b6107c25760405162461bcd60e51b815260206004820152601e60248201527f6164643a207265776172646572206d75737420626520636f6e74726163740000604482015260640161040b565b6107cb81611597565b9050610735565b506107db610cc7565b600060035442116107ee576003546107f0565b425b9050866005600082825461080491906115cf565b925050819055506009604051806101000160405280886001600160a01b03168152602001898152602001838152602001600081526020018761ffff168152602001868152602001600081526020018585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250939094525050835460018082018655948252602091829020845160089092020180546001600160a01b0319166001600160a01b0390921691909117815583820151948101949094556040830151600285015560608301516003850155608083015160048501805461ffff191661ffff90921691909117905560a0830151600585015560c0830151600685015560e0830151805193949361092b93506007850192919091019061133c565b50505050505050505050565b6109418282610cf0565b5050565b60006009828154811061095a5761095a6114ea565b9060005260206000209060080201905080600201544211610979575050565b600681015480158061098d57506001820154155b1561099d57504260029091015550565b60008260020154426109af9190611516565b905060006005548460010154600154846109c99190611556565b6109d39190611556565b6109dd9190611575565b6002549091506103e8906000906109f49083611516565b6000546007546002549293506001600160a01b03918216926340c10f1992909116908590610a229088611556565b610a2c9190611575565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b50506000546001600160a01b031691506340c10f1990503084610aa98588611556565b610ab39190611575565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610af957600080fd5b505af1158015610b0d573d6000803e3d6000fd5b505050600687015483915082610b2864e8d4a5100087611556565b610b329190611556565b610b3c9190611575565b610b469190611575565b866003016000828254610b5991906115cf565b909155505042600290960195909555505050505050565b600060098281548110610b8557610b856114ea565b60009182526020808320858452600a825260408085203386529092529220600381015460089092029092019250158015610bc157506003544210155b15610bdb576005820154610bd590426115cf565b60038201555b6000816001015464e8d4a5100084600301548460000154610bfc9190611556565b610c069190611575565b610c109190611516565b9050610c1c8433610341565b15610c94576000811180610c34575060008260020154115b15610c8f576000826002015482610c4b91906115cf565b9050826002015460066000828254610c639190611516565b9091555050600060028401556005840154610c7e90426115cf565b6003840155610c8d3382611176565b505b610632565b8015610632578060066000828254610cac91906115cf565b925050819055508082600201600082825461062c91906115cf565b60005b600954811015610ced57610cdd81610945565b610ce681611597565b9050610cca565b50565b600060098381548110610d0557610d056114ea565b60009182526020808320868452600a82526040808520338652909252922060089091029091019150610d3684610945565b610d3f84610b70565b82156110895781546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db191906115e7565b83546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2291906115e7565b8454604051636eb1769f60e11b81523360048201523060248201529192506000916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610e75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9991906115e7565b85546040516323b872dd60e01b8152336004820152306024820152604481018990529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f14919061152d565b5084546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610f5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8191906115e7565b9050610f8d8482611516565b600487015490975061ffff161561103b57600486015460009061271090610fb89061ffff168a611556565b610fc29190611575565b875460085460405163423f6cef60e01b81526001600160a01b03918216600482015260248101849052929350169063423f6cef90604401600060405180830381600087803b15801561101357600080fd5b505af1158015611027573d6000803e3d6000fd5b5050505080886110379190611516565b9750505b8685600001600082825461104f91906115cf565b909155505060005486546001600160a01b039081169116141561108457866004600082825461107e91906115cf565b90915550505b505050505b6003820154815464e8d4a51000916110a091611556565b6110aa9190611575565b600182015560005b600783015481101561115b578260070181815481106110d3576110d36114ea565b600091825260209091200154825460405163075bbb7f60e41b81526004810188905233602482015260448101919091526001600160a01b03909116906375bbb7f090606401600060405180830381600087803b15801561113257600080fd5b505af1158015611146573d6000803e3d6000fd5b505050508061115490611597565b90506110b2565b508215610632578282600601600082825461062c91906115cf565b600480546000546040516370a0823160e01b8152309381019390935290916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea91906115e7565b11156109415760048054600080546040516370a0823160e01b8152309481019490945290926001600160a01b03909116906370a0823190602401602060405180830381865afa158015611241573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126591906115e7565b61126f9190611516565b90508082106112e35760005460405163423f6cef60e01b81526001600160a01b038581166004830152602482018490529091169063423f6cef90604401600060405180830381600087803b1580156112c657600080fd5b505af11580156112da573d6000803e3d6000fd5b50505050505050565b81156113375760005460405163423f6cef60e01b81526001600160a01b038581166004830152602482018590529091169063423f6cef90604401600060405180830381600087803b1580156112c657600080fd5b505050565b828054828255906000526020600020908101928215611391579160200282015b8281111561139157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061135c565b5061139d9291506113a1565b5090565b5b8082111561139d57600081556001016113a2565b6000602082840312156113c857600080fd5b5035919050565b6001600160a01b0381168114610ced57600080fd5b600080604083850312156113f757600080fd5b823591506020830135611409816113cf565b809150509250929050565b6000806040838503121561142757600080fd5b50508035926020909101359150565b60008060008060008060a0878903121561144f57600080fd5b863595506020870135611461816113cf565b9450604087013561ffff8116811461147857600080fd5b935060608701359250608087013567ffffffffffffffff8082111561149c57600080fd5b818901915089601f8301126114b057600080fd5b8135818111156114bf57600080fd5b8a60208260051b85010111156114d457600080fd5b6020830194508093505050509295509295509295565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561152857611528611500565b500390565b60006020828403121561153f57600080fd5b8151801515811461154f57600080fd5b9392505050565b600081600019048311821515161561157057611570611500565b500290565b60008261159257634e487b7160e01b600052601260045260246000fd5b500490565b60006000198214156115ab576115ab611500565b5060010190565b6000602082840312156115c457600080fd5b813561154f816113cf565b600082198211156115e2576115e2611500565b500190565b6000602082840312156115f957600080fd5b505191905056fea264697066735822122003f88340abccecf78b4166772f52ea381dd74076622dff2fc87a0c8dcc70c5cb64736f6c634300080a003360a06040523480156200001157600080fd5b50604051620014a4380380620014a4833981016040819052620000349162000119565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b0393841660805250600380549284166001600160a01b03199384161790556004805491909316911617905562000199565b6001600160a01b03811681146200011657600080fd5b50565b600080600080600060a086880312156200013257600080fd5b85516200013f8162000100565b6020870151909550620001528162000100565b6040870151909450620001658162000100565b6060870151909350620001788162000100565b60808701519092506200018b8162000100565b809150509295509295909350565b6080516112da620001ca60003960008181610350015281816105f30152818161067701526108b901526112da6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063b9be44ac116100ad578063dde684a511610071578063dde684a5146102b6578063e1e3dfeb14610312578063ef5cfb8c14610325578063f046ee5c14610338578063f7c618c11461034b57600080fd5b8063b9be44ac14610244578063bf7e214f14610257578063c2ee3a081461026a578063c3b2886414610279578063cc6bc1011461028e57600080fd5b80637a9e5e4b116100f45780637a9e5e4b146101b25780637fb5ad38146101c55780638da5cb5b146101f35780638fb009131461021e578063ab5497d71461023157600080fd5b8063116139d31461012657806313af4035146101775780635a826df31461018c578063715cad161461019f575b600080fd5b61015a610134366004611046565b60076020908152600092835260408084209091529082529020546001600160e01b031681565b6040516001600160e01b0390911681526020015b60405180910390f35b61018a61018536600461107f565b610372565b005b61018a61019a36600461107f565b6103f8565b61018a6101ad36600461107f565b610474565b61018a6101c036600461107f565b6104b2565b6101e56101d336600461107f565b60056020526000908152604090205481565b60405190815260200161016e565b600054610206906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61018a61022c36600461107f565b61059c565b600454610206906001600160a01b031681565b6101e5610252366004611046565b6106ec565b600154610206906001600160a01b031681565b61015a670de0b6b3a764000081565b610281610762565b60405161016e91906110a3565b6102a161029c3660046110f0565b6107c4565b6040805192835260208301919091520161016e565b6102ee6102c436600461107f565b6006602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff90911660208301520161016e565b61020661032036600461113b565b61084d565b61018a61033336600461107f565b610877565b600354610206906001600160a01b031681565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b610388336000356001600160e01b03191661092b565b6103ad5760405162461bcd60e51b81526004016103a490611154565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61040e336000356001600160e01b03191661092b565b61042a5760405162461bcd60e51b81526004016103a490611154565b600480546001600160a01b0319166001600160a01b0383169081179091556040517ff2fb4350e8466c152b500f8e58c0c23f01bbc332dc82f5375267e70b5f50f19990600090a250565b61048a336000356001600160e01b03191661092b565b6104a65760405162461bcd60e51b81526004016103a490611154565b6104af816109d5565b50565b6000546001600160a01b0316331480610547575060015460405163b700961360e01b81526001600160a01b039091169063b70096139061050690339030906001600160e01b0319600035169060040161117a565b602060405180830381865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906111a7565b61055057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6105b2336000356001600160e01b03191661092b565b6105ce5760405162461bcd60e51b81526004016103a490611154565b6003546040516370a0823160e01b81526001600160a01b0391821660048201526000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906111c9565b905080156106a1576003546106a1906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b600380546001600160a01b0319166001600160a01b0384169081179091556040517ff1ba364f52e65f08563196b608289b1da2a923cdd0aa7e20dfe664c4ad294c9590600090a25050565b6001600160a01b03821660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff16928201929092529061074157600091505061075c565b61074b8482610b95565b9050610758848483610dd7565b9150505b92915050565b606060028054806020026020016040519081016040528092919081815260200182805480156107ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161079c575b5050505050905090565b6001600160a01b03831660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff1692820192909252829161081d576000809250925050610845565b6108278682610b95565b9050610834868683610dd7565b61083f878684610dd7565b92509250505b935093915050565b6002818154811061085d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600560205260409020548015610927576001600160a01b038083166000908152600560205260408120556003546108e3917f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc678260405161091e91815260200190565b60405180910390a25b5050565b6001546000906001600160a01b031680158015906109b5575060405163b700961360e01b81526001600160a01b0382169063b7009613906109749087903090889060040161117a565b602060405180830381865afa158015610991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b591906111a7565b8061075857506000546001600160a01b0385811691161491505092915050565b6001600160a01b0381166000908152600660205260409020546001600160e01b031615610a2f5760405162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b60448201526064016103a4565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610a5a42611008565b63ffffffff9081169091526001600160a01b038316600081815260066020908152604080832086519690920151909416600160e01b026001600160e01b0390951694909417909355600280546001810182559084527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191682179055905190917f69887873d46778fb35539b0a9992d9176ca03c1820b0afb538bc3a6f63326b1091a250565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610b8e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103a4565b5050505050565b6040805180820190915260008082526020820152600354602083015160405163b334db7b60e01b81526001600160a01b03868116600483015263ffffffff9092166024820152600092919091169063b334db7b906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906111c9565b83925090508015610dd0576004546000906001600160a01b0316610cb457846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906111c9565b610d24565b60048054604051631e1932fb60e01b81526001600160a01b0388811693820193909352911690631e1932fb90602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906111c9565b905060008115610d5657610d5382610d44670de0b6b3a7640000866111f8565b610d4e9190611217565b61101f565b90505b6040518060400160405280828760000151610d719190611239565b6001600160e01b03168152602001610d8842611008565b63ffffffff9081169091526001600160a01b0388166000908152600660209081526040909120835191840151909216600160e01b026001600160e01b03909116179055935050505b5092915050565b80516001600160a01b038481166000908152600760209081526040808320938716835292905290812080546001600160e01b038085166001600160e01b03198316179092559192911680610e305750670de0b6b3a76400005b6000610e3c8284611264565b6004549091506000906001600160a01b0316610ec1576040516370a0823160e01b81526001600160a01b0388811660048301528916906370a0823190602401602060405180830381865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc91906111c9565b610f39565b60048054604051631a50ef2f60e01b81526001600160a01b038b8116938201939093528983166024820152911690631a50ef2f90604401602060405180830381865afa158015610f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3991906111c9565b90506000670de0b6b3a7640000610f596001600160e01b038516846111f8565b610f639190611217565b6001600160a01b03891660009081526005602052604081205491925090610f8b90839061128c565b6001600160a01b03808b16600081815260056020526040908190208490555192935091908c16907f35a61f3c719e8f59f636c336e563ba74f667fadafcc80d709231ca8bb59eecce90610ff39086908b909182526001600160e01b0316602082015260400190565b60405180910390a39998505050505050505050565b6000640100000000821061101b57600080fd5b5090565b6000600160e01b821061101b57600080fd5b6001600160a01b03811681146104af57600080fd5b6000806040838503121561105957600080fd5b823561106481611031565b9150602083013561107481611031565b809150509250929050565b60006020828403121561109157600080fd5b813561109c81611031565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156110e45783516001600160a01b0316835292840192918401916001016110bf565b50909695505050505050565b60008060006060848603121561110557600080fd5b833561111081611031565b9250602084013561112081611031565b9150604084013561113081611031565b809150509250925092565b60006020828403121561114d57600080fd5b5035919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156111b957600080fd5b8151801515811461109c57600080fd5b6000602082840312156111db57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611212576112126111e2565b500290565b60008261123457634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160e01b0382811684821680830382111561125b5761125b6111e2565b01949350505050565b60006001600160e01b0383811690831681811015611284576112846111e2565b039392505050565b6000821982111561129f5761129f6111e2565b50019056fea26469706673582212209cc0f51f0399acc184c5a5e4c795d2becb9b6b6b43d3c8ff6a87339d70a149e964736f6c634300080a003360e060405234801561001057600080fd5b50604051610ab7380380610ab783398101604081905261002f91610187565b818181806001600160a01b031660a0816001600160a01b0316815250506000816001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b091906101ca565b6001600160a01b03811660808190529091506100da90836000196100ee602090811b6104a017901c565b505063ffffffff1660c052506101ee915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806101695760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b6001600160a01b038116811461018457600080fd5b50565b6000806040838503121561019a57600080fd5b82516101a58161016f565b602084015190925063ffffffff811681146101bf57600080fd5b809150509250929050565b6000602082840312156101dc57600080fd5b81516101e78161016f565b9392505050565b60805160a05160c051610880610237600039600081816061015261032001526000818160a201526101a20152600081816101020152818161055d01526105dd01526108806000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636fcf5e5f1461005c5780637acf5b921461009d578063b334db7b146100dc578063f7c618c1146100fd578063faa6c3c814610124575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610094565b6100ef6100ea3660046106b1565b610195565b604051908152602001610094565b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b6101696101323660046106f1565b60006020819052908152604090205463ffffffff80821691640100000000810490911690600160401b90046001600160c01b031683565b6040805163ffffffff94851681529390921660208401526001600160c01b031690820152606001610094565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101e05760405163739e221160e01b815260040160405180910390fd5b6001600160a01b0383166000908152602081815260408083208151606081018352905463ffffffff808216835264010000000082041693820193909352600160401b9092046001600160c01b0316908201529061023c42610522565b90506000826020015163ffffffff168263ffffffff16101561025e5781610264565b82602001515b90506000836000015163ffffffff168663ffffffff1611156102865785610289565b83515b9050836020015163ffffffff1660001461030557835160208501516102ae9190610729565b63ffffffff166102be8284610729565b63ffffffff1685604001516102d3919061074e565b6102dd9190610793565b6001600160c01b0316945083604001516001600160c01b0316851115610305576103056107b9565b836020015163ffffffff168363ffffffff16106104965760007f00000000000000000000000000000000000000000000000000000000000000008061034a81876107cf565b61035491906107f7565b61035e919061080e565b9050600061036b89610539565b905060405180606001604052808663ffffffff1681526020018363ffffffff168152602001826001600160c01b03168152506000808b6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a8154816001600160c01b0302191690836001600160c01b031602179055509050508163ffffffff168563ffffffff167f2bc72eed7f7ea7cb3bf6969b33e204748849532a1f8e4ca68ba1bc97c4cf2e008360405161048b91906001600160c01b0391909116815260200190565b60405180910390a350505b5050505092915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061051c5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064015b60405180910390fd5b50505050565b6000640100000000821061053557600080fd5b5090565b6040516370a0823160e01b81526001600160a01b03828116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190610831565b90508015610605576106056001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684308461060b565b92915050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061068e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610513565b5050505050565b80356001600160a01b03811681146106ac57600080fd5b919050565b600080604083850312156106c457600080fd5b6106cd83610695565b9150602083013563ffffffff811681146106e657600080fd5b809150509250929050565b60006020828403121561070357600080fd5b61070c82610695565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8381169083168181101561074657610746610713565b039392505050565b60006001600160c01b038281168482168115158284048211161561077457610774610713565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160c01b03838116806107ad576107ad61077d565b92169190910492915050565b634e487b7160e01b600052600160045260246000fd5b600063ffffffff8083168185168083038211156107ee576107ee610713565b01949350505050565b600063ffffffff808416806107ad576107ad61077d565b600063ffffffff8083168185168183048111821515161561077457610774610713565b60006020828403121561084357600080fd5b505191905056fea2646970667358221220d0558f85436f44273d4f1b7e69bcf1151b54ee3fb241380b130b4293d7a00a6f64736f6c634300080a00336101606040523480156200001257600080fd5b5060405162001eaf38038062001eaf83398101604081905262000035916200049c565b84856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000075573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009f919081019062000526565b866001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620000de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000108919081019062000526565b8181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000149573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016f919062000602565b825162000184906000906020860190620003dd565b5081516200019a906001906020850190620003dd565b5060ff81166080524660a052620001b062000341565b60c052505050506001600160a01b0391821660e08190528383166101008190526101408790529287166101205260405163095ea7b360e01b8152600481019390935260001960248401529163095ea7b391506044016020604051808303816000875af115801562000225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200024b91906200062e565b50816001600160a01b031663095ea7b3856001600160a01b031663f046ee5c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200029a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c0919062000652565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af11580156200030f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200033591906200062e565b50505050505062000753565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620003759190620006af565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620003eb9062000672565b90600052602060002090601f0160209004810192826200040f57600085556200045a565b82601f106200042a57805160ff19168380011785556200045a565b828001600101855582156200045a579182015b828111156200045a5782518255916020019190600101906200043d565b50620004689291506200046c565b5090565b5b808211156200046857600081556001016200046d565b6001600160a01b03811681146200049957600080fd5b50565b600080600080600060a08688031215620004b557600080fd5b8551620004c28162000483565b6020870151909550620004d58162000483565b604087015160608801519195509350620004ef8162000483565b6080870151909250620005028162000483565b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200053a57600080fd5b82516001600160401b03808211156200055257600080fd5b818501915085601f8301126200056757600080fd5b8151818111156200057c576200057c62000510565b604051601f8201601f19908116603f01168101908382118183101715620005a757620005a762000510565b816040528281528886848701011115620005c057600080fd5b600093505b82841015620005e45784840186015181850187015292850192620005c5565b82841115620005f65760008684830101525b98975050505050505050565b6000602082840312156200061557600080fd5b815160ff811681146200062757600080fd5b9392505050565b6000602082840312156200064157600080fd5b815180151581146200062757600080fd5b6000602082840312156200066557600080fd5b8151620006278162000483565b600181811c908216806200068757607f821691505b60208210811415620006a957634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620006cc57607f831692505b6020808410821415620006ed57634e487b7160e01b86526022600452602486fd5b818015620007045760018114620007165762000745565b60ff1986168952848901965062000745565b60008a81526020902060005b868110156200073d5781548b82015290850190830162000722565b505084890196505b509498975050505050505050565b60805160a05160c05160e0516101005161012051610140516116bb620007f4600039600081816104ce015281816105120152818161111a01526111bf0152600061047c0152600081816103370152818161054b0152818161114701526111ec0152600081816102d0015281816108ca0152818161096601528181610b610152610caa01526000610821015260006107ec0152600061028f01526116bb6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ecebe001161010f578063c6e6f592116100a2578063db62f5ba11610071578063db62f5ba14610477578063dd62ed3e1461049e578063e0d7d0e9146104c9578063ef8b30f7146104f057600080fd5b8063c6e6f59214610426578063ce96cb771461030a578063d505accf14610439578063d905777e1461044e57600080fd5b8063b3d7f6b9116100de578063b3d7f6b9146103ed578063b460af9414610400578063ba08765214610413578063c63d75b61461031d57600080fd5b80637ecebe001461039f57806394bf804d146103bf57806395d89b41146103d2578063a9059cbb146103da57600080fd5b80633644e51511610187578063411557d111610156578063411557d1146103325780634cdad506146103595780636e553f651461036c57806370a082311461037f57600080fd5b80633644e515146102c357806338d52e0f146102cb5780633af9e6691461030a578063402d267d1461031d57600080fd5b80630a28a477116101c35780630a28a4771461025b57806318160ddd1461026e57806323b872dd14610277578063313ce5671461028a57600080fd5b806301e1d114146101f557806306fdde031461021057806307a2d13a14610225578063095ea7b314610238575b600080fd5b6101fd610503565b6040519081526020015b60405180910390f35b6102186105c0565b6040516102079190611303565b6101fd610233366004611358565b61064e565b61024b61024636600461138d565b61067b565b6040519015158152602001610207565b6101fd610269366004611358565b6106e8565b6101fd60025481565b61024b6102853660046113b7565b610708565b6102b17f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610207565b6101fd6107e8565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610207565b6101fd6103183660046113f3565b610843565b6101fd61032b3660046113f3565b5060001990565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6101fd610367366004611358565b610865565b6101fd61037a36600461140e565b610870565b6101fd61038d3660046113f3565b60036020526000908152604090205481565b6101fd6103ad3660046113f3565b60056020526000908152604090205481565b6101fd6103cd36600461140e565b61094c565b6102186109e8565b61024b6103e836600461138d565b6109f5565b6101fd6103fb366004611358565b610a5b565b6101fd61040e36600461143a565b610a7a565b6101fd61042136600461143a565b610b88565b6101fd610434366004611358565b610cd1565b61044c610447366004611476565b610cf1565b005b6101fd61045c3660046113f3565b6001600160a01b031660009081526003602052604090205490565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6104ac3660046114e9565b600460209081526000928352604080842090915290825290205481565b6101fd7f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6104fe366004611358565b610f35565b6040516393f1a40b60e01b81527f0000000000000000000000000000000000000000000000000000000000000000600482015230602482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393f1a40b90604401608060405180830381865afa158015610592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b69190611513565b5091949350505050565b600080546105cd90611549565b80601f01602080910402602001604051908101604052809291908181526020018280546105f990611549565b80156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b505050505081565b60025460009080156106725761066d610665610503565b849083610f40565b610674565b825b9392505050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106d69086815260200190565b60405180910390a35060015b92915050565b60025460009080156106725761066d81610700610503565b859190610f5f565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146107645761073f838261159a565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061078c90849061159a565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611666833981519152906107d59087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461081e57610819610f8d565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b0381166000908152600360205260408120546106e29061064e565b60006106e28261064e565b600061087b83610f35565b9050806108bd5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b60448201526064015b60405180910390fd5b6108f26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086611027565b6108fc82826110b1565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36106e2838261110b565b600061095783610a5b565b905061098e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611027565b61099882846110b1565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36106e2818461110b565b600180546105cd90611549565b33600090815260036020526040812080548391908390610a1690849061159a565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611666833981519152906106d69086815260200190565b60025460009080156106725761066d610a72610503565b849083610f5f565b6000610a85846106e8565b9050336001600160a01b03831614610af5576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610af357610ace828261159a565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610aff84826111b0565b610b098282611223565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106746001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611285565b6000336001600160a01b03831614610bf8576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610bf657610bd1858261159a565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610c0184610865565b905080610c3e5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b60448201526064016108b4565b610c4881856111b0565b610c528285611223565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106746001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611285565b60025460009080156106725761066d81610ce9610503565b859190610f40565b42841015610d415760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064016108b4565b60006001610d4d6107e8565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610e59573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610e8f5750876001600160a01b0316816001600160a01b0316145b610ecc5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016108b4565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60006106e282610cd1565b828202811515841585830485141716610f5857600080fd5b0492915050565b828202811515841585830485141716610f7757600080fd5b6001826001830304018115150290509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610fbf91906115b1565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806110aa5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016108b4565b5050505050565b80600260008282546110c3919061164d565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061166683398151915291015b60405180910390a35050565b604051631c57762b60e31b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb158906044015b600060405180830381600087803b15801561119457600080fd5b505af11580156111a8573d6000803e3d6000fd5b505050505050565b604051630441a3e760e41b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063441a3e709060440161117a565b6001600160a01b0382166000908152600360205260408120805483929061124b90849061159a565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020611666833981519152906020016110ff565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806112fd5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016108b4565b50505050565b600060208083528351808285015260005b8181101561133057858101830151858201604001528201611314565b81811115611342576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561136a57600080fd5b5035919050565b80356001600160a01b038116811461138857600080fd5b919050565b600080604083850312156113a057600080fd5b6113a983611371565b946020939093013593505050565b6000806000606084860312156113cc57600080fd5b6113d584611371565b92506113e360208501611371565b9150604084013590509250925092565b60006020828403121561140557600080fd5b61067482611371565b6000806040838503121561142157600080fd5b8235915061143160208401611371565b90509250929050565b60008060006060848603121561144f57600080fd5b8335925061145f60208501611371565b915061146d60408501611371565b90509250925092565b600080600080600080600060e0888a03121561149157600080fd5b61149a88611371565b96506114a860208901611371565b95506040880135945060608801359350608088013560ff811681146114cc57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156114fc57600080fd5b61150583611371565b915061143160208401611371565b6000806000806080858703121561152957600080fd5b505082516020840151604085015160609095015191969095509092509050565b600181811c9082168061155d57607f821691505b6020821081141561157e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115ac576115ac611584565b500390565b600080835481600182811c9150808316806115cd57607f831692505b60208084108214156115ed57634e487b7160e01b86526022600452602486fd5b81801561160157600181146116125761163f565b60ff1986168952848901965061163f565b60008a81526020902060005b868110156116375781548b82015290850190830161161e565b505084890196505b509498975050505050505050565b6000821982111561166057611660611584565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122002afa1ba9266e37a2719e09e130ff8ee58e4c869939e454fc4e24332e372a7da64736f6c634300080a0033a264697066735822122007af79c4c8c6e56ce77f3061d7be8cc4a21e6a80fdb79d4c7e2edae3ca386cb064736f6c634300080a0033608060405234801561001057600080fd5b50610b53806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639b2ea4bd116100665780639b2ea4bd14610122578063a11b73a614610135578063bf40fac114610148578063c4d66de81461015b578063f2fde38b1461016e57600080fd5b80634172e7f9146100a35780634b12e643146100cd578063715018a6146100e057806381bc3632146100ea5780638da5cb5b146100fd575b600080fd5b6100b66100b136600461080e565b610181565b6040516100c4929190610830565b60405180910390f35b6100b66100db36600461080e565b610230565b6100e861025c565b005b6100e86100f83660046108de565b61029b565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016100c4565b6100e861013036600461093f565b610369565b6100e86101433660046108de565b610411565b61010a610156366004610993565b6104d6565b6100e861016936600461080e565b61050b565b6100e861017c36600461080e565b61058a565b606660205260009081526040902080546001820180546001600160a01b0390921692916101ad906109d5565b80601f01602080910402602001604051908101604052809291908181526020018280546101d9906109d5565b80156102265780601f106101fb57610100808354040283529160200191610226565b820191906000526020600020905b81548152906001019060200180831161020957829003601f168201915b5050505050905082565b606760205260009081526040902080546001820180546001600160a01b0390921692916101ad906109d5565b6033546001600160a01b0316331461028f5760405162461bcd60e51b815260040161028690610a10565b60405180910390fd5b6102996000610625565b565b6033546001600160a01b031633146102c55760405162461bcd60e51b815260040161028690610a10565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606760209081526040909220845181546001600160a01b031916921691909117815583820151805191935061036092600185019291019061075e565b50505050505050565b6033546001600160a01b031633146103935760405162461bcd60e51b815260040161028690610a10565b80606584846040516103a6929190610a45565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908216907f188466739ff00cc68bfb2367d23ae4b855264264fe1624caa8884399af23454c906104049086908690610a55565b60405180910390a2505050565b6033546001600160a01b0316331461043b5760405162461bcd60e51b815260040161028690610a10565b6040518060400160405280846001600160a01b0316815260200183838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250506001600160a01b038781168252606660209081526040909220845181546001600160a01b031916921691909117815583820151805191935061036092600185019291019061075e565b6000606583836040516104ea929190610a45565b908152604051908190036020019020546001600160a01b0316905092915050565b60006105176001610677565b9050801561052f576000805461ff0019166101001790555b610537610704565b61054082610625565b8015610586576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6033546001600160a01b031633146105b45760405162461bcd60e51b815260040161028690610a10565b6001600160a01b0381166106195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610286565b61062281610625565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff16156106be578160ff16600114801561069a5750303b155b6106b65760405162461bcd60e51b815260040161028690610a84565b506000919050565b60005460ff8084169116106106e55760405162461bcd60e51b815260040161028690610a84565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661072b5760405162461bcd60e51b815260040161028690610ad2565b610299600054610100900460ff166107555760405162461bcd60e51b815260040161028690610ad2565b61029933610625565b82805461076a906109d5565b90600052602060002090601f01602090048101928261078c57600085556107d2565b82601f106107a557805160ff19168380011785556107d2565b828001600101855582156107d2579182015b828111156107d25782518255916020019190600101906107b7565b506107de9291506107e2565b5090565b5b808211156107de57600081556001016107e3565b80356001600160a01b03811681146106ff57600080fd5b60006020828403121561082057600080fd5b610829826107f7565b9392505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101561086c57858101830151858201606001528201610850565b8181111561087e576000606083870101525b50601f01601f191692909201606001949350505050565b60008083601f8401126108a757600080fd5b50813567ffffffffffffffff8111156108bf57600080fd5b6020830191508360208285010111156108d757600080fd5b9250929050565b600080600080606085870312156108f457600080fd5b6108fd856107f7565b935061090b602086016107f7565b9250604085013567ffffffffffffffff81111561092757600080fd5b61093387828801610895565b95989497509550505050565b60008060006040848603121561095457600080fd5b833567ffffffffffffffff81111561096b57600080fd5b61097786828701610895565b909450925061098a9050602085016107f7565b90509250925092565b600080602083850312156109a657600080fd5b823567ffffffffffffffff8111156109bd57600080fd5b6109c985828601610895565b90969095509350505050565b600181811c908216806109e957607f821691505b60208210811415610a0a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212204b29a2fa9b43d46259c43d98dcde8e6927ad1535300ccb1422eae15074944f3a64736f6c634300080a0033",
    "sourceMap": "1174:3514:201:-:0;;;;;1572:26:243;;;-1:-1:-1;;1572:26:243;1594:4;1572:26;;;1050:23:216;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1027:46;;;;;;;-1:-1:-1;;;;;1027:46:216;;;;;-1:-1:-1;;;;;1027:46:216;;;;;;1471:3:201;1447:27;;1174:3514;;;;;;;;;-1:-1:-1;1200:28:216;:26;:28::i;:::-;1174:3514:201;;1237:1555:216;1316:1;-1:-1:-1;;;;;1294:24:216;:2;;;;;;;;;-1:-1:-1;;;;;1294:2:216;-1:-1:-1;;;;;1294:8:216;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1294:24:216;;1290:1498;;;1328:2;;:28;;-1:-1:-1;;;1328:28:216;;1350:4;1328:28;;;455:51:279;1328:2:216;;;;-1:-1:-1;;;;;1328:2:216;;:13;;428:18:279;;1328:28:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:2;1368:13;:28;1364:1418;;;1438:2;;:67;;;-1:-1:-1;;;1438:67:216;;;;;729:21:279;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:279;;;797:36;1462:42:216;885:20:279;;;878:62;1438:2:216;;;;-1:-1:-1;;;;;1438:2:216;;:13;;850:19:279;;1438:67:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1515:2:216;;:77;;;-1:-1:-1;;;1515:77:216;;;;;1163:21:279;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:279;;;1232:46;1549:42:216;1330:20:279;;;1323:62;1515:2:216;;;;-1:-1:-1;;;;;1515:2:216;;-1:-1:-1;1515:13:216;;-1:-1:-1;1295:19:279;;1515:77:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1603:2:216;;:65;;;-1:-1:-1;;;1603:65:216;;;;;;1608:21:279;;;;1645:18;;;1638:29;;;;-1:-1:-1;;;1683:18:279;;;1676:34;1625:42:216;1762:20:279;;;1755:62;1603:2:216;;;;-1:-1:-1;;;;;1603:2:216;;-1:-1:-1;1603:13:216;;-1:-1:-1;1727:19:279;;1603:65:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1707:2:216;;:78;;;-1:-1:-1;;;1707:78:216;;;;;2040:21:279;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:279;;;2109:47;1742:42:216;2208:20:279;;;2201:62;1707:2:216;;;;-1:-1:-1;;;;;1707:2:216;;-1:-1:-1;1707:13:216;;-1:-1:-1;2173:19:279;;1707:78:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1795:2:216;;:79;;;-1:-1:-1;;;1795:79:216;;;;;2486:21:279;;;;2543:2;2523:18;;;2516:30;-1:-1:-1;;;2562:18:279;;;2555:48;1831:42:216;2655:20:279;;;2648:62;1795:2:216;;;;-1:-1:-1;;;;;1795:2:216;;-1:-1:-1;1795:13:216;;-1:-1:-1;2620:19:279;;1795:79:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1884:2:216;;:76;;;-1:-1:-1;;;1884:76:216;;;;;2933:21:279;;;;2990:2;2970:18;;;2963:30;-1:-1:-1;;;3009:18:279;;;3002:45;1917:42:216;3099:20:279;;;3092:62;1884:2:216;;;;-1:-1:-1;;;;;1884:2:216;;-1:-1:-1;1884:13:216;;-1:-1:-1;3064:19:279;;1884:76:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:1555::o;1364:1418::-;889:2;1979:13;:27;1975:807;;;2048:2;;:67;;;-1:-1:-1;;;2048:67:216;;;;;729:21:279;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:279;;;797:36;2072:42:216;885:20:279;;;878:62;2048:2:216;;;;-1:-1:-1;;;;;2048:2:216;;:13;;850:19:279;;2048:67:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2125:2:216;;:77;;;-1:-1:-1;;;2125:77:216;;;;;1163:21:279;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:279;;;1232:46;2159:42:216;1330:20:279;;;1323:62;2125:2:216;;;;-1:-1:-1;;;;;2125:2:216;;-1:-1:-1;2125:13:216;;-1:-1:-1;1295:19:279;;2125:77:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2241:2:216;;:78;;;-1:-1:-1;;;2241:78:216;;;;;2040:21:279;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:279;;;2109:47;2276:42:216;2208:20:279;;;2201:62;2241:2:216;;;;-1:-1:-1;;;;;2241:2:216;;-1:-1:-1;2241:13:216;;-1:-1:-1;2173:19:279;;2241:78:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2329:2:216;;:79;;;-1:-1:-1;;;2329:79:216;;;;;2486:21:279;;;;2543:2;2523:18;;;2516:30;-1:-1:-1;;;2562:18:279;;;2555:48;2365:42:216;2655:20:279;;;2648:62;2329:2:216;;;;-1:-1:-1;;;;;2329:2:216;;-1:-1:-1;2329:13:216;;-1:-1:-1;2620:19:279;;2329:79:216;2274:442:279;1975:807:216;809:4;2427:13;:33;2423:359;;;2502:2;;:67;;;-1:-1:-1;;;2502:67:216;;;;;729:21:279;;;;786:1;766:18;;;759:29;-1:-1:-1;;;804:18:279;;;797:36;2526:42:216;885:20:279;;;878:62;2502:2:216;;;;-1:-1:-1;;;;;2502:2:216;;:13;;850:19:279;;2502:67:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2579:2:216;;:77;;;-1:-1:-1;;;2579:77:216;;;;;1163:21:279;;;;1220:2;1200:18;;;1193:30;-1:-1:-1;;;1239:18:279;;;1232:46;2613:42:216;1330:20:279;;;1323:62;2579:2:216;;;;-1:-1:-1;;;;;2579:2:216;;-1:-1:-1;2579:13:216;;-1:-1:-1;1295:19:279;;2579:77:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2695:2:216;;:78;;;-1:-1:-1;;;2695:78:216;;;;;2040:21:279;;;;2097:2;2077:18;;;2070:30;-1:-1:-1;;;2116:18:279;;;2109:47;2730:42:216;2208:20:279;;;2201:62;2695:2:216;;;;-1:-1:-1;;;;;2695:2:216;;-1:-1:-1;2695:13:216;;-1:-1:-1;2173:19:279;;2695:78:216;;;;;;;;;;;;;;;;;;;2423:359;1237:1555::o;1174:3514:201:-;;;;;;;;:::o;14:290:279:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:279;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:279:o;2721:439::-;1174:3514:201;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200009f5760003560e01c806370bdc855116200006e57806370bdc85514620001275780637f924c4e1462000131578063ba414fa6146200013b578063d509b16c1462000145578063fa7626d4146200014f57600080fd5b80630a9254e414620000a457806315a9c83d14620000b057806325bf0d1814620000dc5780633a76846314620000f2575b600080fd5b620000ae6200015d565b005b620000c7620000c1366004620017fe565b620006e1565b60405190151581526020015b60405180910390f35b620000c7620000ed36600462001821565b461490565b6200010e737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001620000d3565b620000ae620006f8565b620000ae62000ac8565b620000c762000c91565b620000ae62000dc6565b600054620000c79060ff1681565b46610504148015620006de57600380546001600160a01b03199081167399588867e817023162f4d4829995299054a5fc579081179092556004805490911673cd3b51d98478d53f4515a306be565c6eebef1d58179055604051600090819081908190620001ca90620017c6565b6001600160a01b039586168152602081019490945291841660408401526060830152909116608082015260a001604051809103906000f08015801562000214573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b03929092169190911790556040516372eb5f8160e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e5d6bf0290602401600060405180830381600087803b1580156200028357600080fd5b505af115801562000298573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9250631f7b4f309150602401600060405180830381600087803b158015620002ea57600080fd5b505af1158015620002ff573d6000803e3d6000fd5b50505050600460009054906101000a90046001600160a01b03166000803060006040516200032d90620017d4565b6001600160a01b0395861681529385166020850152918416604084015283166060830152909116608082015260a001604051809103906000f08015801562000379573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b03929092169182179055604051600190620003aa90620017e2565b6001600160a01b03909216825263ffffffff166020820152604001604051809103906000f080158015620003e2573d6000803e3d6000fd5b50600780546001600160a01b0319166001600160a01b03928316908117909155600654604051638fb0091360e01b8152600481019290925290911690638fb0091390602401600060405180830381600087803b1580156200044257600080fd5b505af115801562000457573d6000803e3d6000fd5b50506003546006546004546002546040516001600160a01b0394851696509284169450600093918216929116906200048f90620017f0565b6001600160a01b0395861681529385166020850152604084019290925283166060830152909116608082015260a001604051809103906000f080158015620004db573d6000803e3d6000fd5b50600180546001600160a01b039283166001600160a01b0319918216811790925560058054909116821790556006546040516338ae568b60e11b815260048101929092529091169063715cad1690602401600060405180830381600087803b1580156200054757600080fd5b505af11580156200055c573d6000803e3d6000fd5b50600092508291506200056c9050565b60405190808252806020026020018201604052801562000596578160200160208202803683370190505b5060025460035460405163508593ab60e01b81529293506001600160a01b039182169263508593ab92620005da926001929116906000908190889060040162001851565b600060405180830381600087803b158015620005f557600080fd5b505af11580156200060a573d6000803e3d6000fd5b50506040516372eb5f8160e11b815260026004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063e5d6bf029150602401600060405180830381600087803b1580156200065c57600080fd5b505af115801562000671573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260026004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9250631f7b4f309150602401600060405180830381600087803b158015620006c357600080fd5b505af1158015620006d8573d6000803e3d6000fd5b50505050505b50565b600082461480620006f157508146145b9392505050565b46610504148015620006de57600154604080516306fdde0360e01b81529051620007ff926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801562000751573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200077b9190810190620018f9565b600360009054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620007cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620007f99190810190620018f9565b62000f04565b600154604080516395d89b4160e01b81529051620008ca926001600160a01b0316916395d89b419160048083019260009291908290030181865afa1580156200084c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008769190810190620018f9565b600360009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620007cf573d6000803e3d6000fd5b600154604080516338d52e0f60e01b815290516200094f926001600160a01b0316916338d52e0f9160048083019260209291908290030181865afa15801562000917573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200093d9190620019c8565b6003546001600160a01b031662001051565b6001546040805163411557d160e01b81529051620009d4926001600160a01b03169163411557d19160048083019260209291908290030181865afa1580156200099c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c29190620019c8565b6002546001600160a01b031662001051565b600554600154620009f2916001600160a01b03908116911662001051565b600354600154600254604051636eb1769f60e11b81526001600160a01b039283166004820152908216602482015262000a8192919091169063dd62ed3e906044015b602060405180830381865afa15801562000a52573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a789190620019e8565b6000196200114b565b60048054600154600754604051636eb1769f60e11b81526001600160a01b039283169481019490945281166024840152620006de9291169063dd62ed3e9060440162000a34565b46610504148015620006de5762000ade62001230565b6003546040516370a0823160e01b815230600482015262000b59916001600160a01b0316906370a08231906024015b602060405180830381865afa15801562000b2b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b519190620019e8565b60006200114b565b6003546002546040516370a0823160e01b81526001600160a01b03918216600482015262000bdd9291909116906370a08231906024015b602060405180830381865afa15801562000bae573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd49190620019e8565b6008546200114b565b600154604080516278744560e21b8152905162000c29926001600160a01b0316916301e1d1149160048083019260209291908290030181865afa15801562000bae573d6000803e3d6000fd5b600154604051633af9e66960e01b815230600482015262000c5d916001600160a01b031690633af9e6699060240162000b90565b6001546040516370a0823160e01b8152306004820152620006de916001600160a01b0316906370a082319060240162000b90565b60008054610100900460ff161562000cb25750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000dc15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000d43917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001a02565b60408051601f198184030181529082905262000d5f9162001a35565b6000604051808303816000865af19150503d806000811462000d9e576040519150601f19603f3d011682016040523d82523d6000602084013e62000da3565b606091505b509150508080602001905181019062000dbd919062001a53565b9150505b919050565b46610504148015620006de5762000ddc62001230565b600154600854604051632d182be560e21b81526004810191909152306024820181905260448201526001600160a01b039091169063b460af94906064016020604051808303816000875af115801562000e39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e5f9190620019e8565b506003546040516370a0823160e01b815230600482015262000e94916001600160a01b0316906370a082319060240162000b90565b6003546002546040516370a0823160e01b81526001600160a01b03918216600482015262000ed09291909116906370a082319060240162000b0d565b6001546040516370a0823160e01b8152306004820152620006de916001600160a01b0316906370a082319060240162000b0d565b8060405160200162000f17919062001a35565b604051602081830303815290604052805190602001208260405160200162000f40919062001a35565b60405160208183030381529060405280519060200120146200104d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000fc99060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162001002919062001aa5565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516200103b919062001ada565b60405180910390a16200104d620016b3565b5050565b806001600160a01b0316826001600160a01b0316146200104d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010d99060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001112919062001b0f565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516200103b919062001b54565b8082146200104d577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011be9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051620011f7919062001b7f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200103b919062001bb8565b60405163ca669fa760e01b815273457c5b8a6224f524d9f15fa6b6d70fcad8eba6236004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200129157600080fd5b505af1158015620012a6573d6000803e3d6000fd5b505060035460085460405163095ea7b360e01b815273457c5b8a6224f524d9f15fa6b6d70fcad8eba623600482015260248101919091526001600160a01b03909116925063095ea7b391506044016020604051808303816000875af115801562001314573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200133a919062001a53565b5060405163ca669fa760e01b815273457c5b8a6224f524d9f15fa6b6d70fcad8eba6236004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200139c57600080fd5b505af1158015620013b1573d6000803e3d6000fd5b50506003546008546040516323b872dd60e01b815273457c5b8a6224f524d9f15fa6b6d70fcad8eba623600482015230602482015260448101919091526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af115801562001425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200144b919062001a53565b506003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001496573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014bc9190620019e8565b60035460015460085460405163095ea7b360e01b81526001600160a01b0392831660048201526024810191909152929350169063095ea7b3906044016020604051808303816000875af115801562001518573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200153e919062001a53565b50600654600154604051632e6f912b60e21b81526001600160a01b03918216600482015230602482015291169063b9be44ac906044016020604051808303816000875af115801562001594573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015ba9190620019e8565b50600154600854604051636e553f6560e01b815260048101919091523060248201526001600160a01b0390911690636e553f65906044016020604051808303816000875af115801562001611573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016379190620019e8565b50600654600154604051632e6f912b60e21b81526001600160a01b03918216600482015230602482015291169063b9be44ac906044016020604051808303816000875af11580156200168d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200104d9190620019e8565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620017b55760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001750929160200162001a02565b60408051601f19818403018152908290526200176c9162001a35565b6000604051808303816000865af19150503d8060008114620017ab576040519150601f19603f3d011682016040523d82523d6000602084013e620017b0565b606091505b505050505b6000805461ff001916610100179055565b6117818062001be483390190565b6114a4806200336583390190565b610ab7806200480983390190565b611eaf80620052c083390190565b600080604083850312156200181257600080fd5b50508035926020909101359150565b6000602082840312156200183457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060a08201878352602060018060a01b038089168286015261ffff8816604086015286606086015260a0608086015282865180855260c087019150838801945060005b81811015620018b557855184168352948401949184019160010162001895565b50909b9a5050505050505050505050565b60005b83811015620018e3578181015183820152602001620018c9565b83811115620018f3576000848401525b50505050565b6000602082840312156200190c57600080fd5b815167ffffffffffffffff808211156200192557600080fd5b818401915084601f8301126200193a57600080fd5b8151818111156200194f576200194f6200183b565b604051601f8201601f19908116603f011681019083821181831017156200197a576200197a6200183b565b816040528281528760208487010111156200199457600080fd5b620019a7836020830160208801620018c6565b979650505050505050565b6001600160a01b0381168114620006de57600080fd5b600060208284031215620019db57600080fd5b8151620006f181620019b2565b600060208284031215620019fb57600080fd5b5051919050565b6001600160e01b031983168152815160009062001a27816004850160208701620018c6565b919091016004019392505050565b6000825162001a49818460208701620018c6565b9190910192915050565b60006020828403121562001a6657600080fd5b81518015158114620006f157600080fd5b6000815180845262001a91816020860160208601620018c6565b601f01601f19169290920160200192915050565b604081526009604082015268202056616c7565206160b81b6060820152608060208201526000620006f1608083018462001a77565b60408152600960408201526810102b30b63ab2903160b91b6060820152608060208201526000620006f1608083018462001a77565b60408152600062001b3a60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062001b3a60408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062001baa60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062001baa60408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60806040523480156200001157600080fd5b5060405162001781380380620017818339810160408190526200003491620000ac565b62000044426301e1338062000114565b600355600880546001600160a01b03199081166001600160a01b03938416179091556001949094556000805485169582169590951790945560078054909316919093161790556002556200013b565b6001600160a01b0381168114620000a957600080fd5b50565b600080600080600060a08688031215620000c557600080fd5b8551620000d28162000093565b602087015160408801519196509450620000ec8162000093565b606087015160808801519194509250620001068162000093565b809150509295509295909350565b600082198211156200013657634e487b7160e01b600052601160045260246000fd5b500190565b611636806200014b6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806360e772e1116100a257806393f1a40b1161007157806393f1a40b14610255578063bc4a9f28146102b5578063de73149d146102be578063e2bbb158146102c8578063e6fd48bc146102db57600080fd5b806360e772e114610214578063812c64f11461021d578063838f66a114610239578063913653231461024c57600080fd5b806341275358116100de57806341275358146101d0578063441a3e70146101e3578063474fa630146101f8578063508593ab1461020157600080fd5b80630867bacf146101105780631526fe271461014057806317caf6f1146101965780632e6c998d146101ad575b600080fd5b600054610123906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015361014e3660046113b6565b6102e4565b604080516001600160a01b039098168852602088019690965294860193909352606085019190915261ffff16608084015260a083015260c082015260e001610137565b61019f60055481565b604051908152602001610137565b6101c06101bb3660046113e4565b610341565b6040519015158152602001610137565b600854610123906001600160a01b031681565b6101f66101f1366004611414565b610381565b005b61019f60065481565b6101f661020f366004611436565b610638565b61019f60015481565b6102266103e881565b60405161ffff9091168152602001610137565b600754610123906001600160a01b031681565b61019f60045481565b6102956102633660046113e4565b600a60209081526000928352604080842090915290825290208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610137565b61019f60025481565b61019f6212750081565b6101f66102d6366004611414565b610937565b61019f60035481565b600981815481106102f457600080fd5b600091825260209091206008909102018054600182015460028301546003840154600485015460058601546006909601546001600160a01b03909516965092949193909261ffff16919087565b6000828152600a602090815260408083206001600160a01b038516845290915281206003544210801590610379575080600301544210155b949350505050565b600060098381548110610396576103966114ea565b60009182526020808320868452600a8252604080852033865290925292208054600890920290920192508311156104145760405162461bcd60e51b815260206004820181905260248201527f77697468647261773a207573657220616d6f756e74206e6f7420656e6f75676860448201526064015b60405180910390fd5b82826006015410156104685760405162461bcd60e51b815260206004820152601f60248201527f77697468647261773a20706f6f6c20746f74616c206e6f7420656e6f75676800604482015260640161040b565b61047184610945565b61047a84610b70565b821561053f57828160000160008282546104949190611516565b909155505060005482546001600160a01b03908116911614156104c95782600460008282546104c39190611516565b90915550505b815460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d919061152d565b505b6003820154815464e8d4a510009161055691611556565b6105609190611575565b600182015560005b600783015481101561061157826007018181548110610589576105896114ea565b600091825260209091200154825460405163075bbb7f60e41b81526004810188905233602482015260448101919091526001600160a01b03909116906375bbb7f090606401600060405180830381600087803b1580156105e857600080fd5b505af11580156105fc573d6000803e3d6000fd5b505050508061060a90611597565b9050610568565b508215610632578282600601600082825461062c9190611516565b90915550505b50505050565b600a8111156106895760405162461bcd60e51b815260206004820152601760248201527f6164643a20746f6f206d616e7920726577617264657273000000000000000000604482015260640161040b565b6103e861ffff851611156106df5760405162461bcd60e51b815260206004820152601960248201527f6164643a206465706f7369742066656520746f6f206869676800000000000000604482015260640161040b565b621275008311156107325760405162461bcd60e51b815260206004820152601d60248201527f6164643a20696e76616c6964206861727665737420696e74657276616c000000604482015260640161040b565b60005b818110156107d257610776838383818110610752576107526114ea565b905060200201602081019061076791906115b2565b6001600160a01b03163b151590565b6107c25760405162461bcd60e51b815260206004820152601e60248201527f6164643a207265776172646572206d75737420626520636f6e74726163740000604482015260640161040b565b6107cb81611597565b9050610735565b506107db610cc7565b600060035442116107ee576003546107f0565b425b9050866005600082825461080491906115cf565b925050819055506009604051806101000160405280886001600160a01b03168152602001898152602001838152602001600081526020018761ffff168152602001868152602001600081526020018585808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250939094525050835460018082018655948252602091829020845160089092020180546001600160a01b0319166001600160a01b0390921691909117815583820151948101949094556040830151600285015560608301516003850155608083015160048501805461ffff191661ffff90921691909117905560a0830151600585015560c0830151600685015560e0830151805193949361092b93506007850192919091019061133c565b50505050505050505050565b6109418282610cf0565b5050565b60006009828154811061095a5761095a6114ea565b9060005260206000209060080201905080600201544211610979575050565b600681015480158061098d57506001820154155b1561099d57504260029091015550565b60008260020154426109af9190611516565b905060006005548460010154600154846109c99190611556565b6109d39190611556565b6109dd9190611575565b6002549091506103e8906000906109f49083611516565b6000546007546002549293506001600160a01b03918216926340c10f1992909116908590610a229088611556565b610a2c9190611575565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b50506000546001600160a01b031691506340c10f1990503084610aa98588611556565b610ab39190611575565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610af957600080fd5b505af1158015610b0d573d6000803e3d6000fd5b505050600687015483915082610b2864e8d4a5100087611556565b610b329190611556565b610b3c9190611575565b610b469190611575565b866003016000828254610b5991906115cf565b909155505042600290960195909555505050505050565b600060098281548110610b8557610b856114ea565b60009182526020808320858452600a825260408085203386529092529220600381015460089092029092019250158015610bc157506003544210155b15610bdb576005820154610bd590426115cf565b60038201555b6000816001015464e8d4a5100084600301548460000154610bfc9190611556565b610c069190611575565b610c109190611516565b9050610c1c8433610341565b15610c94576000811180610c34575060008260020154115b15610c8f576000826002015482610c4b91906115cf565b9050826002015460066000828254610c639190611516565b9091555050600060028401556005840154610c7e90426115cf565b6003840155610c8d3382611176565b505b610632565b8015610632578060066000828254610cac91906115cf565b925050819055508082600201600082825461062c91906115cf565b60005b600954811015610ced57610cdd81610945565b610ce681611597565b9050610cca565b50565b600060098381548110610d0557610d056114ea565b60009182526020808320868452600a82526040808520338652909252922060089091029091019150610d3684610945565b610d3f84610b70565b82156110895781546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db191906115e7565b83546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2291906115e7565b8454604051636eb1769f60e11b81523360048201523060248201529192506000916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610e75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9991906115e7565b85546040516323b872dd60e01b8152336004820152306024820152604481018990529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f14919061152d565b5084546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610f5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8191906115e7565b9050610f8d8482611516565b600487015490975061ffff161561103b57600486015460009061271090610fb89061ffff168a611556565b610fc29190611575565b875460085460405163423f6cef60e01b81526001600160a01b03918216600482015260248101849052929350169063423f6cef90604401600060405180830381600087803b15801561101357600080fd5b505af1158015611027573d6000803e3d6000fd5b5050505080886110379190611516565b9750505b8685600001600082825461104f91906115cf565b909155505060005486546001600160a01b039081169116141561108457866004600082825461107e91906115cf565b90915550505b505050505b6003820154815464e8d4a51000916110a091611556565b6110aa9190611575565b600182015560005b600783015481101561115b578260070181815481106110d3576110d36114ea565b600091825260209091200154825460405163075bbb7f60e41b81526004810188905233602482015260448101919091526001600160a01b03909116906375bbb7f090606401600060405180830381600087803b15801561113257600080fd5b505af1158015611146573d6000803e3d6000fd5b505050508061115490611597565b90506110b2565b508215610632578282600601600082825461062c91906115cf565b600480546000546040516370a0823160e01b8152309381019390935290916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea91906115e7565b11156109415760048054600080546040516370a0823160e01b8152309481019490945290926001600160a01b03909116906370a0823190602401602060405180830381865afa158015611241573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126591906115e7565b61126f9190611516565b90508082106112e35760005460405163423f6cef60e01b81526001600160a01b038581166004830152602482018490529091169063423f6cef90604401600060405180830381600087803b1580156112c657600080fd5b505af11580156112da573d6000803e3d6000fd5b50505050505050565b81156113375760005460405163423f6cef60e01b81526001600160a01b038581166004830152602482018590529091169063423f6cef90604401600060405180830381600087803b1580156112c657600080fd5b505050565b828054828255906000526020600020908101928215611391579160200282015b8281111561139157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061135c565b5061139d9291506113a1565b5090565b5b8082111561139d57600081556001016113a2565b6000602082840312156113c857600080fd5b5035919050565b6001600160a01b0381168114610ced57600080fd5b600080604083850312156113f757600080fd5b823591506020830135611409816113cf565b809150509250929050565b6000806040838503121561142757600080fd5b50508035926020909101359150565b60008060008060008060a0878903121561144f57600080fd5b863595506020870135611461816113cf565b9450604087013561ffff8116811461147857600080fd5b935060608701359250608087013567ffffffffffffffff8082111561149c57600080fd5b818901915089601f8301126114b057600080fd5b8135818111156114bf57600080fd5b8a60208260051b85010111156114d457600080fd5b6020830194508093505050509295509295509295565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561152857611528611500565b500390565b60006020828403121561153f57600080fd5b8151801515811461154f57600080fd5b9392505050565b600081600019048311821515161561157057611570611500565b500290565b60008261159257634e487b7160e01b600052601260045260246000fd5b500490565b60006000198214156115ab576115ab611500565b5060010190565b6000602082840312156115c457600080fd5b813561154f816113cf565b600082198211156115e2576115e2611500565b500190565b6000602082840312156115f957600080fd5b505191905056fea264697066735822122003f88340abccecf78b4166772f52ea381dd74076622dff2fc87a0c8dcc70c5cb64736f6c634300080a003360a06040523480156200001157600080fd5b50604051620014a4380380620014a4833981016040819052620000349162000119565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b0393841660805250600380549284166001600160a01b03199384161790556004805491909316911617905562000199565b6001600160a01b03811681146200011657600080fd5b50565b600080600080600060a086880312156200013257600080fd5b85516200013f8162000100565b6020870151909550620001528162000100565b6040870151909450620001658162000100565b6060870151909350620001788162000100565b60808701519092506200018b8162000100565b809150509295509295909350565b6080516112da620001ca60003960008181610350015281816105f30152818161067701526108b901526112da6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063b9be44ac116100ad578063dde684a511610071578063dde684a5146102b6578063e1e3dfeb14610312578063ef5cfb8c14610325578063f046ee5c14610338578063f7c618c11461034b57600080fd5b8063b9be44ac14610244578063bf7e214f14610257578063c2ee3a081461026a578063c3b2886414610279578063cc6bc1011461028e57600080fd5b80637a9e5e4b116100f45780637a9e5e4b146101b25780637fb5ad38146101c55780638da5cb5b146101f35780638fb009131461021e578063ab5497d71461023157600080fd5b8063116139d31461012657806313af4035146101775780635a826df31461018c578063715cad161461019f575b600080fd5b61015a610134366004611046565b60076020908152600092835260408084209091529082529020546001600160e01b031681565b6040516001600160e01b0390911681526020015b60405180910390f35b61018a61018536600461107f565b610372565b005b61018a61019a36600461107f565b6103f8565b61018a6101ad36600461107f565b610474565b61018a6101c036600461107f565b6104b2565b6101e56101d336600461107f565b60056020526000908152604090205481565b60405190815260200161016e565b600054610206906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61018a61022c36600461107f565b61059c565b600454610206906001600160a01b031681565b6101e5610252366004611046565b6106ec565b600154610206906001600160a01b031681565b61015a670de0b6b3a764000081565b610281610762565b60405161016e91906110a3565b6102a161029c3660046110f0565b6107c4565b6040805192835260208301919091520161016e565b6102ee6102c436600461107f565b6006602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff90911660208301520161016e565b61020661032036600461113b565b61084d565b61018a61033336600461107f565b610877565b600354610206906001600160a01b031681565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b610388336000356001600160e01b03191661092b565b6103ad5760405162461bcd60e51b81526004016103a490611154565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61040e336000356001600160e01b03191661092b565b61042a5760405162461bcd60e51b81526004016103a490611154565b600480546001600160a01b0319166001600160a01b0383169081179091556040517ff2fb4350e8466c152b500f8e58c0c23f01bbc332dc82f5375267e70b5f50f19990600090a250565b61048a336000356001600160e01b03191661092b565b6104a65760405162461bcd60e51b81526004016103a490611154565b6104af816109d5565b50565b6000546001600160a01b0316331480610547575060015460405163b700961360e01b81526001600160a01b039091169063b70096139061050690339030906001600160e01b0319600035169060040161117a565b602060405180830381865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906111a7565b61055057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6105b2336000356001600160e01b03191661092b565b6105ce5760405162461bcd60e51b81526004016103a490611154565b6003546040516370a0823160e01b81526001600160a01b0391821660048201526000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906111c9565b905080156106a1576003546106a1906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b600380546001600160a01b0319166001600160a01b0384169081179091556040517ff1ba364f52e65f08563196b608289b1da2a923cdd0aa7e20dfe664c4ad294c9590600090a25050565b6001600160a01b03821660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff16928201929092529061074157600091505061075c565b61074b8482610b95565b9050610758848483610dd7565b9150505b92915050565b606060028054806020026020016040519081016040528092919081815260200182805480156107ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161079c575b5050505050905090565b6001600160a01b03831660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff1692820192909252829161081d576000809250925050610845565b6108278682610b95565b9050610834868683610dd7565b61083f878684610dd7565b92509250505b935093915050565b6002818154811061085d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600560205260409020548015610927576001600160a01b038083166000908152600560205260408120556003546108e3917f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc678260405161091e91815260200190565b60405180910390a25b5050565b6001546000906001600160a01b031680158015906109b5575060405163b700961360e01b81526001600160a01b0382169063b7009613906109749087903090889060040161117a565b602060405180830381865afa158015610991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b591906111a7565b8061075857506000546001600160a01b0385811691161491505092915050565b6001600160a01b0381166000908152600660205260409020546001600160e01b031615610a2f5760405162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b60448201526064016103a4565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610a5a42611008565b63ffffffff9081169091526001600160a01b038316600081815260066020908152604080832086519690920151909416600160e01b026001600160e01b0390951694909417909355600280546001810182559084527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191682179055905190917f69887873d46778fb35539b0a9992d9176ca03c1820b0afb538bc3a6f63326b1091a250565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610b8e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103a4565b5050505050565b6040805180820190915260008082526020820152600354602083015160405163b334db7b60e01b81526001600160a01b03868116600483015263ffffffff9092166024820152600092919091169063b334db7b906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906111c9565b83925090508015610dd0576004546000906001600160a01b0316610cb457846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906111c9565b610d24565b60048054604051631e1932fb60e01b81526001600160a01b0388811693820193909352911690631e1932fb90602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906111c9565b905060008115610d5657610d5382610d44670de0b6b3a7640000866111f8565b610d4e9190611217565b61101f565b90505b6040518060400160405280828760000151610d719190611239565b6001600160e01b03168152602001610d8842611008565b63ffffffff9081169091526001600160a01b0388166000908152600660209081526040909120835191840151909216600160e01b026001600160e01b03909116179055935050505b5092915050565b80516001600160a01b038481166000908152600760209081526040808320938716835292905290812080546001600160e01b038085166001600160e01b03198316179092559192911680610e305750670de0b6b3a76400005b6000610e3c8284611264565b6004549091506000906001600160a01b0316610ec1576040516370a0823160e01b81526001600160a01b0388811660048301528916906370a0823190602401602060405180830381865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc91906111c9565b610f39565b60048054604051631a50ef2f60e01b81526001600160a01b038b8116938201939093528983166024820152911690631a50ef2f90604401602060405180830381865afa158015610f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3991906111c9565b90506000670de0b6b3a7640000610f596001600160e01b038516846111f8565b610f639190611217565b6001600160a01b03891660009081526005602052604081205491925090610f8b90839061128c565b6001600160a01b03808b16600081815260056020526040908190208490555192935091908c16907f35a61f3c719e8f59f636c336e563ba74f667fadafcc80d709231ca8bb59eecce90610ff39086908b909182526001600160e01b0316602082015260400190565b60405180910390a39998505050505050505050565b6000640100000000821061101b57600080fd5b5090565b6000600160e01b821061101b57600080fd5b6001600160a01b03811681146104af57600080fd5b6000806040838503121561105957600080fd5b823561106481611031565b9150602083013561107481611031565b809150509250929050565b60006020828403121561109157600080fd5b813561109c81611031565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156110e45783516001600160a01b0316835292840192918401916001016110bf565b50909695505050505050565b60008060006060848603121561110557600080fd5b833561111081611031565b9250602084013561112081611031565b9150604084013561113081611031565b809150509250925092565b60006020828403121561114d57600080fd5b5035919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156111b957600080fd5b8151801515811461109c57600080fd5b6000602082840312156111db57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611212576112126111e2565b500290565b60008261123457634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160e01b0382811684821680830382111561125b5761125b6111e2565b01949350505050565b60006001600160e01b0383811690831681811015611284576112846111e2565b039392505050565b6000821982111561129f5761129f6111e2565b50019056fea26469706673582212209cc0f51f0399acc184c5a5e4c795d2becb9b6b6b43d3c8ff6a87339d70a149e964736f6c634300080a003360e060405234801561001057600080fd5b50604051610ab7380380610ab783398101604081905261002f91610187565b818181806001600160a01b031660a0816001600160a01b0316815250506000816001600160a01b031663f7c618c16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b091906101ca565b6001600160a01b03811660808190529091506100da90836000196100ee602090811b6104a017901c565b505063ffffffff1660c052506101ee915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806101695760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b6001600160a01b038116811461018457600080fd5b50565b6000806040838503121561019a57600080fd5b82516101a58161016f565b602084015190925063ffffffff811681146101bf57600080fd5b809150509250929050565b6000602082840312156101dc57600080fd5b81516101e78161016f565b9392505050565b60805160a05160c051610880610237600039600081816061015261032001526000818160a201526101a20152600081816101020152818161055d01526105dd01526108806000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636fcf5e5f1461005c5780637acf5b921461009d578063b334db7b146100dc578063f7c618c1146100fd578063faa6c3c814610124575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610094565b6100ef6100ea3660046106b1565b610195565b604051908152602001610094565b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b6101696101323660046106f1565b60006020819052908152604090205463ffffffff80821691640100000000810490911690600160401b90046001600160c01b031683565b6040805163ffffffff94851681529390921660208401526001600160c01b031690820152606001610094565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101e05760405163739e221160e01b815260040160405180910390fd5b6001600160a01b0383166000908152602081815260408083208151606081018352905463ffffffff808216835264010000000082041693820193909352600160401b9092046001600160c01b0316908201529061023c42610522565b90506000826020015163ffffffff168263ffffffff16101561025e5781610264565b82602001515b90506000836000015163ffffffff168663ffffffff1611156102865785610289565b83515b9050836020015163ffffffff1660001461030557835160208501516102ae9190610729565b63ffffffff166102be8284610729565b63ffffffff1685604001516102d3919061074e565b6102dd9190610793565b6001600160c01b0316945083604001516001600160c01b0316851115610305576103056107b9565b836020015163ffffffff168363ffffffff16106104965760007f00000000000000000000000000000000000000000000000000000000000000008061034a81876107cf565b61035491906107f7565b61035e919061080e565b9050600061036b89610539565b905060405180606001604052808663ffffffff1681526020018363ffffffff168152602001826001600160c01b03168152506000808b6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a8154816001600160c01b0302191690836001600160c01b031602179055509050508163ffffffff168563ffffffff167f2bc72eed7f7ea7cb3bf6969b33e204748849532a1f8e4ca68ba1bc97c4cf2e008360405161048b91906001600160c01b0391909116815260200190565b60405180910390a350505b5050505092915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061051c5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064015b60405180910390fd5b50505050565b6000640100000000821061053557600080fd5b5090565b6040516370a0823160e01b81526001600160a01b03828116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190610831565b90508015610605576106056001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684308461060b565b92915050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061068e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610513565b5050505050565b80356001600160a01b03811681146106ac57600080fd5b919050565b600080604083850312156106c457600080fd5b6106cd83610695565b9150602083013563ffffffff811681146106e657600080fd5b809150509250929050565b60006020828403121561070357600080fd5b61070c82610695565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8381169083168181101561074657610746610713565b039392505050565b60006001600160c01b038281168482168115158284048211161561077457610774610713565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160c01b03838116806107ad576107ad61077d565b92169190910492915050565b634e487b7160e01b600052600160045260246000fd5b600063ffffffff8083168185168083038211156107ee576107ee610713565b01949350505050565b600063ffffffff808416806107ad576107ad61077d565b600063ffffffff8083168185168183048111821515161561077457610774610713565b60006020828403121561084357600080fd5b505191905056fea2646970667358221220d0558f85436f44273d4f1b7e69bcf1151b54ee3fb241380b130b4293d7a00a6f64736f6c634300080a00336101606040523480156200001257600080fd5b5060405162001eaf38038062001eaf83398101604081905262000035916200049c565b84856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000075573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009f919081019062000526565b866001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620000de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000108919081019062000526565b8181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000149573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016f919062000602565b825162000184906000906020860190620003dd565b5081516200019a906001906020850190620003dd565b5060ff81166080524660a052620001b062000341565b60c052505050506001600160a01b0391821660e08190528383166101008190526101408790529287166101205260405163095ea7b360e01b8152600481019390935260001960248401529163095ea7b391506044016020604051808303816000875af115801562000225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200024b91906200062e565b50816001600160a01b031663095ea7b3856001600160a01b031663f046ee5c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200029a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c0919062000652565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af11580156200030f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200033591906200062e565b50505050505062000753565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620003759190620006af565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620003eb9062000672565b90600052602060002090601f0160209004810192826200040f57600085556200045a565b82601f106200042a57805160ff19168380011785556200045a565b828001600101855582156200045a579182015b828111156200045a5782518255916020019190600101906200043d565b50620004689291506200046c565b5090565b5b808211156200046857600081556001016200046d565b6001600160a01b03811681146200049957600080fd5b50565b600080600080600060a08688031215620004b557600080fd5b8551620004c28162000483565b6020870151909550620004d58162000483565b604087015160608801519195509350620004ef8162000483565b6080870151909250620005028162000483565b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200053a57600080fd5b82516001600160401b03808211156200055257600080fd5b818501915085601f8301126200056757600080fd5b8151818111156200057c576200057c62000510565b604051601f8201601f19908116603f01168101908382118183101715620005a757620005a762000510565b816040528281528886848701011115620005c057600080fd5b600093505b82841015620005e45784840186015181850187015292850192620005c5565b82841115620005f65760008684830101525b98975050505050505050565b6000602082840312156200061557600080fd5b815160ff811681146200062757600080fd5b9392505050565b6000602082840312156200064157600080fd5b815180151581146200062757600080fd5b6000602082840312156200066557600080fd5b8151620006278162000483565b600181811c908216806200068757607f821691505b60208210811415620006a957634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620006cc57607f831692505b6020808410821415620006ed57634e487b7160e01b86526022600452602486fd5b818015620007045760018114620007165762000745565b60ff1986168952848901965062000745565b60008a81526020902060005b868110156200073d5781548b82015290850190830162000722565b505084890196505b509498975050505050505050565b60805160a05160c05160e0516101005161012051610140516116bb620007f4600039600081816104ce015281816105120152818161111a01526111bf0152600061047c0152600081816103370152818161054b0152818161114701526111ec0152600081816102d0015281816108ca0152818161096601528181610b610152610caa01526000610821015260006107ec0152600061028f01526116bb6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637ecebe001161010f578063c6e6f592116100a2578063db62f5ba11610071578063db62f5ba14610477578063dd62ed3e1461049e578063e0d7d0e9146104c9578063ef8b30f7146104f057600080fd5b8063c6e6f59214610426578063ce96cb771461030a578063d505accf14610439578063d905777e1461044e57600080fd5b8063b3d7f6b9116100de578063b3d7f6b9146103ed578063b460af9414610400578063ba08765214610413578063c63d75b61461031d57600080fd5b80637ecebe001461039f57806394bf804d146103bf57806395d89b41146103d2578063a9059cbb146103da57600080fd5b80633644e51511610187578063411557d111610156578063411557d1146103325780634cdad506146103595780636e553f651461036c57806370a082311461037f57600080fd5b80633644e515146102c357806338d52e0f146102cb5780633af9e6691461030a578063402d267d1461031d57600080fd5b80630a28a477116101c35780630a28a4771461025b57806318160ddd1461026e57806323b872dd14610277578063313ce5671461028a57600080fd5b806301e1d114146101f557806306fdde031461021057806307a2d13a14610225578063095ea7b314610238575b600080fd5b6101fd610503565b6040519081526020015b60405180910390f35b6102186105c0565b6040516102079190611303565b6101fd610233366004611358565b61064e565b61024b61024636600461138d565b61067b565b6040519015158152602001610207565b6101fd610269366004611358565b6106e8565b6101fd60025481565b61024b6102853660046113b7565b610708565b6102b17f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610207565b6101fd6107e8565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610207565b6101fd6103183660046113f3565b610843565b6101fd61032b3660046113f3565b5060001990565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6101fd610367366004611358565b610865565b6101fd61037a36600461140e565b610870565b6101fd61038d3660046113f3565b60036020526000908152604090205481565b6101fd6103ad3660046113f3565b60056020526000908152604090205481565b6101fd6103cd36600461140e565b61094c565b6102186109e8565b61024b6103e836600461138d565b6109f5565b6101fd6103fb366004611358565b610a5b565b6101fd61040e36600461143a565b610a7a565b6101fd61042136600461143a565b610b88565b6101fd610434366004611358565b610cd1565b61044c610447366004611476565b610cf1565b005b6101fd61045c3660046113f3565b6001600160a01b031660009081526003602052604090205490565b6102f27f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6104ac3660046114e9565b600460209081526000928352604080842090915290825290205481565b6101fd7f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6104fe366004611358565b610f35565b6040516393f1a40b60e01b81527f0000000000000000000000000000000000000000000000000000000000000000600482015230602482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906393f1a40b90604401608060405180830381865afa158015610592573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b69190611513565b5091949350505050565b600080546105cd90611549565b80601f01602080910402602001604051908101604052809291908181526020018280546105f990611549565b80156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b505050505081565b60025460009080156106725761066d610665610503565b849083610f40565b610674565b825b9392505050565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106d69086815260200190565b60405180910390a35060015b92915050565b60025460009080156106725761066d81610700610503565b859190610f5f565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146107645761073f838261159a565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061078c90849061159a565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611666833981519152906107d59087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461081e57610819610f8d565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b0381166000908152600360205260408120546106e29061064e565b60006106e28261064e565b600061087b83610f35565b9050806108bd5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b60448201526064015b60405180910390fd5b6108f26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086611027565b6108fc82826110b1565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36106e2838261110b565b600061095783610a5b565b905061098e6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084611027565b61099882846110b1565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36106e2818461110b565b600180546105cd90611549565b33600090815260036020526040812080548391908390610a1690849061159a565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611666833981519152906106d69086815260200190565b60025460009080156106725761066d610a72610503565b849083610f5f565b6000610a85846106e8565b9050336001600160a01b03831614610af5576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610af357610ace828261159a565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610aff84826111b0565b610b098282611223565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106746001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168486611285565b6000336001600160a01b03831614610bf8576001600160a01b03821660009081526004602090815260408083203384529091529020546000198114610bf657610bd1858261159a565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b610c0184610865565b905080610c3e5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b60448201526064016108b4565b610c4881856111b0565b610c528285611223565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106746001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611285565b60025460009080156106725761066d81610ce9610503565b859190610f40565b42841015610d415760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064016108b4565b60006001610d4d6107e8565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610e59573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610e8f5750876001600160a01b0316816001600160a01b0316145b610ecc5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016108b4565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60006106e282610cd1565b828202811515841585830485141716610f5857600080fd5b0492915050565b828202811515841585830485141716610f7757600080fd5b6001826001830304018115150290509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610fbf91906115b1565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806110aa5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016108b4565b5050505050565b80600260008282546110c3919061164d565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061166683398151915291015b60405180910390a35050565b604051631c57762b60e31b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb158906044015b600060405180830381600087803b15801561119457600080fd5b505af11580156111a8573d6000803e3d6000fd5b505050505050565b604051630441a3e760e41b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063441a3e709060440161117a565b6001600160a01b0382166000908152600360205260408120805483929061124b90849061159a565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020611666833981519152906020016110ff565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806112fd5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016108b4565b50505050565b600060208083528351808285015260005b8181101561133057858101830151858201604001528201611314565b81811115611342576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561136a57600080fd5b5035919050565b80356001600160a01b038116811461138857600080fd5b919050565b600080604083850312156113a057600080fd5b6113a983611371565b946020939093013593505050565b6000806000606084860312156113cc57600080fd5b6113d584611371565b92506113e360208501611371565b9150604084013590509250925092565b60006020828403121561140557600080fd5b61067482611371565b6000806040838503121561142157600080fd5b8235915061143160208401611371565b90509250929050565b60008060006060848603121561144f57600080fd5b8335925061145f60208501611371565b915061146d60408501611371565b90509250925092565b600080600080600080600060e0888a03121561149157600080fd5b61149a88611371565b96506114a860208901611371565b95506040880135945060608801359350608088013560ff811681146114cc57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156114fc57600080fd5b61150583611371565b915061143160208401611371565b6000806000806080858703121561152957600080fd5b505082516020840151604085015160609095015191969095509092509050565b600181811c9082168061155d57607f821691505b6020821081141561157e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115ac576115ac611584565b500390565b600080835481600182811c9150808316806115cd57607f831692505b60208084108214156115ed57634e487b7160e01b86526022600452602486fd5b81801561160157600181146116125761163f565b60ff1986168952848901965061163f565b60008a81526020902060005b868110156116375781548b82015290850190830161161e565b505084890196505b509498975050505050505050565b6000821982111561166057611660611584565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122002afa1ba9266e37a2719e09e130ff8ee58e4c869939e454fc4e24332e372a7da64736f6c634300080a0033a264697066735822122007af79c4c8c6e56ce77f3061d7be8cc4a21e6a80fdb79d4c7e2edae3ca386cb064736f6c634300080a0033",
    "sourceMap": "1174:3514:201:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1479:1024;;;:::i;:::-;;2965:134:216;;;;;;:::i;:::-;;:::i;:::-;;;432:14:279;;425:22;407:41;;395:2;380:18;2965:134:216;;;;;;;;2864:97;;;;;;:::i;:::-;2936:13;:20;;2864:97;691:40;;1671:64:243;691:40:216;;;;;-1:-1:-1;;;;;820:32:279;;;802:51;;790:2;775:18;691:40:216;644:215:279;2507:581:201;;;:::i;3715:521::-;;;:::i;1819:584:243:-;;;:::i;4240:446:201:-;;;:::i;1572:26:243:-;;;;;;;;;1479:1024:201;2936:13:216;809:4;2936:20;2835:3;2831:25;;;1548:9:201::1;:71:::0;;-1:-1:-1;;;;;;1548:71:201;;::::1;1576:42;1548:71:::0;;::::1;::::0;;;1625:10:::1;:66:::0;;;;::::1;1648:42;1625:66;::::0;;1712:77:::1;::::0;1548:9:::1;::::0;;;;;;;1712:77:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;1217:15:279;;;1199:34;;1264:2;1249:18;;1242:34;;;;1312:15;;;1307:2;1292:18;;1285:43;1359:2;1344:18;;1337:34;1408:15;;;1402:3;1387:19;;1380:44;1148:3;1133:19;1712:77:201::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1697:12:201::1;:92:::0;;-1:-1:-1;;;;;;1697:92:201::1;-1:-1:-1::0;;;;;1697:92:201;;;::::1;::::0;;;::::1;::::0;;1795:10:::1;::::0;-1:-1:-1;;;1795:10:201;;-1:-1:-1;1795:10:201::1;::::0;::::1;1589:25:279::0;1671:64:243;;1795:7:201::1;::::0;1562:18:279;;1795:10:201::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1811:10:201::1;::::0;-1:-1:-1;;;1811:10:201;;1819:1:::1;1811:10;::::0;::::1;1589:25:279::0;1671:64:243;;-1:-1:-1;1811:7:201::1;::::0;-1:-1:-1;1562:18:279;;1811:10:201::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1863;;;;;;;;;-1:-1:-1::0;;;;;1863:10:201::1;1912:1;1948::::0;1967:4:::1;1998:1;1839:168;;;;;:::i;:::-;-1:-1:-1::0;;;;;2036:15:279;;;2018:34;;2088:15;;;2083:2;2068:18;;2061:43;2140:15;;;2135:2;2120:18;;2113:43;2192:15;;2187:2;2172:18;;2165:43;2245:15;;;2239:3;2224:19;;2217:44;1967:3;1952:19;1839:168:201::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1828:8:201::1;:179:::0;;-1:-1:-1;;;;;;1828:179:201::1;-1:-1:-1::0;;;;;1828:179:201;;;::::1;::::0;;::::1;::::0;;2032:43:::1;::::0;-1:-1:-1;;2032:43:201::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;2493:32:279;;;2475:51;;2574:10;2562:23;2557:2;2542:18;;2535:51;2463:2;2448:18;2032:43:201::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2014:15:201::1;:61:::0;;-1:-1:-1;;;;;;2014:61:201::1;-1:-1:-1::0;;;;;2014:61:201;;::::1;::::0;;::::1;::::0;;;2081:8:::1;::::0;:44:::1;::::0;-1:-1:-1;;;2081:44:201;;::::1;::::0;::::1;802:51:279::0;;;;2081:8:201;;::::1;::::0;:27:::1;::::0;775:18:279;;2081:44:201::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2162:9:201::1;::::0;2173:8:::1;::::0;2186:10:::1;::::0;2213:12:::1;::::0;2146:82:::1;::::0;-1:-1:-1;;;;;2162:9:201;;::::1;::::0;-1:-1:-1;2173:8:201;;::::1;::::0;-1:-1:-1;2162:9:201::1;::::0;2186:10;;::::1;::::0;2213:12;::::1;::::0;2146:82:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;3246:15:279;;;3228:34;;3298:15;;;3293:2;3278:18;;3271:43;3345:2;3330:18;;3323:34;;;;3393:15;;3388:2;3373:18;;3366:43;3446:15;;;3440:3;3425:19;;3418:44;3177:3;3162:19;2146:82:201::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2132:11:201::1;:96:::0;;-1:-1:-1;;;;;2132:96:201;;::::1;-1:-1:-1::0;;;;;;2132:96:201;;::::1;::::0;::::1;::::0;;;2234:9:::1;:39:::0;;;;::::1;::::0;::::1;::::0;;2279:8:::1;::::0;:41:::1;::::0;-1:-1:-1;;;2279:41:201;;::::1;::::0;::::1;802:51:279::0;;;;2279:8:201;;::::1;::::0;:30:::1;::::0;775:18:279;;2279:41:201::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2327:35:201::1;::::0;-1:-1:-1;2327:35:201;;-1:-1:-1;2365:25:201::1;::::0;-1:-1:-1;2365:25:201;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2365:25:201::1;-1:-1:-1::0;2396:12:201::1;::::0;2437:9:::1;::::0;2396:70:::1;::::0;-1:-1:-1;;;2396:70:201;;2327:63;;-1:-1:-1;;;;;;2396:12:201;;::::1;::::0;:16:::1;::::0;:70:::1;::::0;:12;;2437:9;::::1;::::0;2396:12:::1;::::0;;;2327:63;;2396:70:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2472:10:201::1;::::0;-1:-1:-1;;;2472:10:201;;2480:1:::1;2472:10;::::0;::::1;1589:25:279::0;1671:64:243;;-1:-1:-1;2472:7:201::1;::::0;-1:-1:-1;1562:18:279;;2472:10:201::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2488:10:201::1;::::0;-1:-1:-1;;;2488:10:201;;2496:1:::1;2488:10;::::0;::::1;1589:25:279::0;1671:64:243;;-1:-1:-1;2488:7:201::1;::::0;-1:-1:-1;1562:18:279;;2488:10:201::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1542:961;2831:25:216::0;1479:1024:201;:::o;2965:134:216:-;3031:4;3067:3;3050:13;:20;:44;;;;3091:3;3074:13;:20;3050:44;3043:51;2965:134;-1:-1:-1;;;2965:134:216:o;2507:581:201:-;2936:13:216;809:4;2936:20;2835:3;2831:25;;;2601:11:201::1;::::0;:18:::1;::::0;;-1:-1:-1;;;2601:18:201;;;;2592:46:::1;::::0;-1:-1:-1;;;;;2601:11:201::1;::::0;:16:::1;::::0;:18:::1;::::0;;::::1;::::0;:11:::1;::::0;:18;;;;;;;:11;:18:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2601:18:201::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2621:9;;;;;;;;;-1:-1:-1::0;;;;;2621:9:201::1;-1:-1:-1::0;;;;;2621:14:201::1;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2621:16:201::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2592:8;:46::i;:::-;2653:11;::::0;:20:::1;::::0;;-1:-1:-1;;;2653:20:201;;;;2644:50:::1;::::0;-1:-1:-1;;;;;2653:11:201::1;::::0;:18:::1;::::0;:20:::1;::::0;;::::1;::::0;:11:::1;::::0;:20;;;;;;;:11;:20:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2653:20:201::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2675:9;;;;;;;;;-1:-1:-1::0;;;;;2675:9:201::1;-1:-1:-1::0;;;;;2675:16:201::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;2644:50;2717:11;::::0;:19:::1;::::0;;-1:-1:-1;;;2717:19:201;;;;2700:58:::1;::::0;-1:-1:-1;;;;;2717:11:201::1;::::0;:17:::1;::::0;:19:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:11;:19:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2747:9;::::0;-1:-1:-1;;;;;2747:9:201::1;2700:8;:58::i;:::-;2781:11;::::0;:19:::1;::::0;;-1:-1:-1;;;2781:19:201;;;;2764:61:::1;::::0;-1:-1:-1;;;;;2781:11:201::1;::::0;:17:::1;::::0;:19:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:11;:19:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2811:12;::::0;-1:-1:-1;;;;;2811:12:201::1;2764:8;:61::i;:::-;2848:9;::::0;;2868:11;2831:50:::1;::::0;-1:-1:-1;;;;;2848:9:201;;::::1;::::0;2868:11:::1;2831:8;:50::i;:::-;2896:9;::::0;;2924:11;2946:12:::1;::::0;2896:64:::1;::::0;-1:-1:-1;;;2896:64:201;;-1:-1:-1;;;;;2924:11:201;;::::1;2896:64;::::0;::::1;7147:34:279::0;2946:12:201;;::::1;7197:18:279::0;;;7190:43;2887:93:201::1;::::0;2896:9;;;::::1;::::0;:19:::1;::::0;7082:18:279;;2896:64:201::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;2887:8:201::1;:93::i;:::-;2995:10;::::0;;;3024:11;3046:15:::1;::::0;2995:68:::1;::::0;-1:-1:-1;;;2995:68:201;;-1:-1:-1;;;;;3024:11:201;;::::1;2995:68:::0;;::::1;7147:34:279::0;;;;3046:15:201;::::1;7197:18:279::0;;;7190:43;2986:97:201::1;::::0;2995:10;::::1;::::0;:20:::1;::::0;7082:18:279;;2995:68:201::1;6935:304:279::0;3715:521:201;2936:13:216;809:4;2936:20;2835:3;2831:25;;;3790:10:201::1;:8;:10::i;:::-;3816:9;::::0;:34:::1;::::0;-1:-1:-1;;;3816:34:201;;3844:4:::1;3816:34;::::0;::::1;802:51:279::0;3807:47:201::1;::::0;-1:-1:-1;;;;;3816:9:201::1;::::0;:19:::1;::::0;775:18:279;;3816:34:201::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3852:1;3807:8;:47::i;:::-;3869:9;::::0;3897:12:::1;::::0;3869:42:::1;::::0;-1:-1:-1;;;3869:42:201;;-1:-1:-1;;;;;3897:12:201;;::::1;3869:42;::::0;::::1;802:51:279::0;3860:67:201::1;::::0;3869:9;;;::::1;::::0;:19:::1;::::0;775:18:279;;3869:42:201::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3913:13;;3860:8;:67::i;:::-;3990:11;::::0;:25:::1;::::0;;-1:-1:-1;;;3990:25:201;;;;3981:50:::1;::::0;-1:-1:-1;;;;;3990:11:201::1;::::0;:23:::1;::::0;:25:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:11;:25:::1;;;;;;;;;::::0;::::1;;;;3981:50;4046:11;::::0;:46:::1;::::0;-1:-1:-1;;;4046:46:201;;4086:4:::1;4046:46;::::0;::::1;802:51:279::0;4037:71:201::1;::::0;-1:-1:-1;;;;;4046:11:201::1;::::0;:31:::1;::::0;775:18:279;;4046:46:201::1;644:215:279::0;4037:71:201::1;4179:11;::::0;:36:::1;::::0;-1:-1:-1;;;4179:36:201;;4209:4:::1;4179:36;::::0;::::1;802:51:279::0;4170:61:201::1;::::0;-1:-1:-1;;;;;4179:11:201::1;::::0;:21:::1;::::0;775:18:279;;4179:36:201::1;644:215:279::0;1819:584:243;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:243;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;7815:51:279;;;-1:-1:-1;;;7882:18:279;;;7875:34;2196:43:243;;;;;;;;;7788:18:279;;;2196:43:243;;;-1:-1:-1;;1671:64:243;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:243;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:243:o;4240:446:201:-;2936:13:216;809:4;2936:20;2835:3;2831:25;;;4316:10:201::1;:8;:10::i;:::-;4332:11;::::0;4353:13:::1;::::0;4332:65:::1;::::0;-1:-1:-1;;;4332:65:201;;::::1;::::0;::::1;9059:25:279::0;;;;4376:4:201::1;9138:18:279::0;;;9131:43;;;9190:18;;;9183:43;-1:-1:-1;;;;;4332:11:201;;::::1;::::0;:20:::1;::::0;9032:18:279;;4332:65:201::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4457:9:201::1;::::0;:34:::1;::::0;-1:-1:-1;;;4457:34:201;;4485:4:::1;4457:34;::::0;::::1;802:51:279::0;4448:59:201::1;::::0;-1:-1:-1;;;;;4457:9:201::1;::::0;:19:::1;::::0;775:18:279;;4457:34:201::1;644:215:279::0;4448:59:201::1;4522:9;::::0;4550:12:::1;::::0;4522:42:::1;::::0;-1:-1:-1;;;4522:42:201;;-1:-1:-1;;;;;4550:12:201;;::::1;4522:42;::::0;::::1;802:51:279::0;4513:55:201::1;::::0;4522:9;;;::::1;::::0;:19:::1;::::0;775:18:279;;4522:42:201::1;644:215:279::0;4513:55:201::1;4641:11;::::0;:36:::1;::::0;-1:-1:-1;;;4641:36:201;;4671:4:::1;4641:36;::::0;::::1;802:51:279::0;4632:49:201::1;::::0;-1:-1:-1;;;;;4641:11:201::1;::::0;:21:::1;::::0;775:18:279;;4641:36:201::1;644:215:279::0;14688:342:243;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:265;;14848:43;;;;;9720:2:279;9702:21;;;9759:2;9739:18;;;9732:30;9798:34;9793:2;9778:18;;9771:62;-1:-1:-1;;;9864:2:279;9849:18;;9842:34;9908:3;9893:19;;9518:400;14848:43:243;;;;;;;;14910:32;14940:1;14910:32;;;;;;:::i;:::-;;;;;;;;14961;14991:1;14961:32;;;;;;:::i;:::-;;;;;;;;15007:6;:4;:6::i;:::-;14688:342;;:::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:243;:1;-1:-1:-1;;;;;3678:6:243;;3674:212;;3705:44;;;;;11298:2:279;11280:21;;;11337:2;11317:18;;;11310:30;11376:34;11371:2;11356:18;;11349:62;-1:-1:-1;;;11442:2:279;11427:18;;11420:35;11487:3;11472:19;;11096:401;3705:44:243;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;12790:2:279;12772:21;;;12829:2;12809:18;;;12802:30;12868:34;12863:2;12848:18;;12841:62;-1:-1:-1;;;12934:2:279;12919:18;;12912:32;12976:3;12961:19;;12588:398;5286:41:243;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;3092:619:201:-;3127:52;;-1:-1:-1;;;3127:52:201;;3136:42;3127:52;;;802:51:279;1671:64:243;;3127:8:201;;775:18:279;;3127:52:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3185:9:201;;3247:13;;3185:76;;-1:-1:-1;;;3185:76:201;;3203:42;3185:76;;;7815:51:279;7882:18;;;7875:34;;;;-1:-1:-1;;;;;3185:9:201;;;;-1:-1:-1;3185:17:201;;-1:-1:-1;7788:18:279;;3185:76:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3267:52:201;;-1:-1:-1;;;3267:52:201;;3276:42;3267:52;;;802:51:279;1671:64:243;;3267:8:201;;775:18:279;;3267:52:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3325:9:201;;3407:13;;3325:96;;-1:-1:-1;;;3325:96:201;;3348:42;3325:96;;;14216:34:279;3400:4:201;14266:18:279;;;14259:43;14318:18;;;14311:34;;;;-1:-1:-1;;;;;3325:9:201;;;;-1:-1:-1;3325:22:201;;-1:-1:-1;14151:18:279;;3325:96:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3445:9:201;;:34;;-1:-1:-1;;;3445:34:201;;3473:4;3445:34;;;802:51:279;3427:15:201;;-1:-1:-1;;;;;3445:9:201;;:19;;775:18:279;;3445:34:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3485:9;;;3511:11;3525:13;;3485:54;;-1:-1:-1;;;3485:54:201;;-1:-1:-1;;;;;3511:11:201;;;3485:54;;;7815:51:279;7882:18;;;7875:34;;;;3427:52:201;;-1:-1:-1;3485:9:201;;:17;;7788:18:279;;3485:54:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3545:8:201;;;3567:11;3545:50;;-1:-1:-1;;;3545:50:201;;-1:-1:-1;;;;;3567:11:201;;;3545:50;;;7147:34:279;3589:4:201;7197:18:279;;;7190:43;3545:8:201;;;:15;;7082:18:279;;3545:50:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3601:11:201;;3621:13;;3601:49;;-1:-1:-1;;;3601:49:201;;;;;14854:25:279;;;;3644:4:201;14895:18:279;;;14888:60;-1:-1:-1;;;;;3601:11:201;;;;:19;;14827:18:279;;3601:49:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3656:8:201;;;3678:11;3656:50;;-1:-1:-1;;;3656:50:201;;-1:-1:-1;;;;;3678:11:201;;;3656:50;;;7147:34:279;3700:4:201;7197:18:279;;;7190:43;3656:8:201;;;:15;;7082:18:279;;3656:50:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2410:424:243:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;15161:51:279;;;-1:-1:-1;;;15228:18:279;;;15221:34;;;;2705:4:243;15271:18:279;;;15264:34;2482:11:243;;1671:64;2579:43;;15134:18:279;;2645:67:243;;;-1:-1:-1;;2645:67:243;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:243;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:243;2813:7;:14;;-1:-1:-1;;2813:14:243;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:248:279:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:279;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:279:o;459:180::-;518:6;571:2;559:9;550:7;546:23;542:32;539:52;;;587:1;584;577:12;539:52;-1:-1:-1;610:23:279;;459:180;-1:-1:-1;459:180:279:o;3696:127::-;3757:10;3752:3;3748:20;3745:1;3738:31;3788:4;3785:1;3778:15;3812:4;3809:1;3802:15;3828:1060;4153:4;4201:3;4190:9;4186:19;4232:6;4221:9;4214:25;4258:2;4296:1;4292;4287:3;4283:11;4279:19;4346:2;4338:6;4334:15;4329:2;4318:9;4314:18;4307:43;4398:6;4390;4386:19;4381:2;4370:9;4366:18;4359:47;4442:6;4437:2;4426:9;4422:18;4415:34;4486:3;4480;4469:9;4465:19;4458:32;4510:6;4545;4539:13;4576:6;4568;4561:22;4614:3;4603:9;4599:19;4592:26;;4653:2;4645:6;4641:15;4627:29;;4674:1;4684:178;4698:6;4695:1;4692:13;4684:178;;;4763:13;;4759:22;;4747:35;;4837:15;;;;4802:12;;;;4720:1;4713:9;4684:178;;;-1:-1:-1;4879:3:279;;3828:1060;-1:-1:-1;;;;;;;;;;;3828:1060:279:o;5083:258::-;5155:1;5165:113;5179:6;5176:1;5173:13;5165:113;;;5255:11;;;5249:18;5236:11;;;5229:39;5201:2;5194:10;5165:113;;;5296:6;5293:1;5290:13;5287:48;;;5331:1;5322:6;5317:3;5313:16;5306:27;5287:48;;5083:258;;;:::o;5346:884::-;5426:6;5479:2;5467:9;5458:7;5454:23;5450:32;5447:52;;;5495:1;5492;5485:12;5447:52;5528:9;5522:16;5557:18;5598:2;5590:6;5587:14;5584:34;;;5614:1;5611;5604:12;5584:34;5652:6;5641:9;5637:22;5627:32;;5697:7;5690:4;5686:2;5682:13;5678:27;5668:55;;5719:1;5716;5709:12;5668:55;5748:2;5742:9;5770:2;5766;5763:10;5760:36;;;5776:18;;:::i;:::-;5851:2;5845:9;5819:2;5905:13;;-1:-1:-1;;5901:22:279;;;5925:2;5897:31;5893:40;5881:53;;;5949:18;;;5969:22;;;5946:46;5943:72;;;5995:18;;:::i;:::-;6035:10;6031:2;6024:22;6070:2;6062:6;6055:18;6110:7;6105:2;6100;6096;6092:11;6088:20;6085:33;6082:53;;;6131:1;6128;6121:12;6082:53;6144:55;6196:2;6191;6183:6;6179:15;6174:2;6170;6166:11;6144:55;:::i;:::-;6218:6;5346:884;-1:-1:-1;;;;;;;5346:884:279:o;6235:138::-;-1:-1:-1;;;;;6317:31:279;;6307:42;;6297:70;;6363:1;6360;6353:12;6378:273;6463:6;6516:2;6504:9;6495:7;6491:23;6487:32;6484:52;;;6532:1;6529;6522:12;6484:52;6564:9;6558:16;6583:38;6615:5;6583:38;:::i;7244:184::-;7314:6;7367:2;7355:9;7346:7;7342:23;7338:32;7335:52;;;7383:1;7380;7373:12;7335:52;-1:-1:-1;7406:16:279;;7244:184;-1:-1:-1;7244:184:279:o;7920:371::-;-1:-1:-1;;;;;;8105:33:279;;8093:46;;8162:13;;8075:3;;8184:61;8162:13;8234:1;8225:11;;8218:4;8206:17;;8184:61;:::i;:::-;8265:16;;;;8283:1;8261:24;;7920:371;-1:-1:-1;;;7920:371:279:o;8296:274::-;8425:3;8463:6;8457:13;8479:53;8525:6;8520:3;8513:4;8505:6;8501:17;8479:53;:::i;:::-;8548:16;;;;;8296:274;-1:-1:-1;;8296:274:279:o;8575:277::-;8642:6;8695:2;8683:9;8674:7;8670:23;8666:32;8663:52;;;8711:1;8708;8701:12;8663:52;8743:9;8737:16;8796:5;8789:13;8782:21;8775:5;8772:32;8762:60;;8818:1;8815;8808:12;9923:258;9965:3;10003:5;9997:12;10030:6;10025:3;10018:19;10046:63;10102:6;10095:4;10090:3;10086:14;10079:4;10072:5;10068:16;10046:63;:::i;:::-;10163:2;10142:15;-1:-1:-1;;10138:29:279;10129:39;;;;10170:4;10125:50;;9923:258;-1:-1:-1;;9923:258:279:o;10186:450::-;10436:2;10425:9;10418:21;10475:1;10470:2;10459:9;10455:18;10448:29;-1:-1:-1;;;10508:2:279;10497:9;10493:18;10486:39;10563:3;10556:4;10545:9;10541:20;10534:33;10399:4;10584:46;10625:3;10614:9;10610:19;10602:6;10584:46;:::i;10641:450::-;10891:2;10880:9;10873:21;10930:1;10925:2;10914:9;10910:18;10903:29;-1:-1:-1;;;10963:2:279;10952:9;10948:18;10941:39;11018:3;11011:4;11000:9;10996:20;10989:33;10854:4;11039:46;11080:3;11069:9;11065:19;11057:6;11039:46;:::i;11666:374::-;11896:2;11885:9;11878:21;11859:4;11916:49;11961:2;11950:9;11946:18;11579:2;11567:15;;-1:-1:-1;;;11607:4:279;11598:14;;11591:36;11652:2;11643:12;;11502:159;11916:49;-1:-1:-1;;;;;12001:32:279;;;;11996:2;11981:18;;;;11974:60;;;;-1:-1:-1;11908:57:279;11666:374::o;12209:::-;12439:2;12428:9;12421:21;12402:4;12459:49;12504:2;12493:9;12489:18;12122:2;12110:15;;-1:-1:-1;;;12150:4:279;12141:14;;12134:36;12195:2;12186:12;;12045:159;12991:348;13221:2;13210:9;13203:21;13184:4;13241:49;13286:2;13275:9;13271:18;11579:2;11567:15;;-1:-1:-1;;;11607:4:279;11598:14;;11591:36;11652:2;11643:12;;11502:159;13241:49;13233:57;;13326:6;13321:2;13310:9;13306:18;13299:34;12991:348;;;;:::o;13344:::-;13574:2;13563:9;13556:21;13537:4;13594:49;13639:2;13628:9;13624:18;12122:2;12110:15;;-1:-1:-1;;;12150:4:279;12141:14;;12134:36;12195:2;12186:12;;12045:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/BeamERC4626Test.t.sol",
    "id": 53650,
    "exportedSymbols": {
      "Address": [
        91296
      ],
      "AddressUpgradeable": [
        90401
      ],
      "AddressesProvider": [
        65355
      ],
      "AggregatorV3Interface": [
        33000
      ],
      "Authority": [
        91490
      ],
      "BasePriceOracle": [
        41268
      ],
      "BaseTest": [
        60252
      ],
      "BeamERC4626": [
        31003
      ],
      "BeamERC4626Test": [
        53649
      ],
      "ChainlinkPriceOracleV2": [
        42513
      ],
      "ClonesUpgradeable": [
        89078
      ],
      "ContextUpgradeable": [
        90443
      ],
      "CurveLpTokenPriceOracleNoRegistry": [
        42926
      ],
      "DSTest": [
        68503
      ],
      "ERC20": [
        91926
      ],
      "ERC20Upgradeable": [
        89831
      ],
      "ERC4626": [
        65876
      ],
      "FixedPointMathLib": [
        65995
      ],
      "FlywheelCore": [
        69107
      ],
      "FlywheelDynamicRewards": [
        69433
      ],
      "FuseFlywheelDynamicRewards": [
        88874
      ],
      "IBoringERC20": [
        61825
      ],
      "ICErc20": [
        33451
      ],
      "ICToken": [
        33600
      ],
      "IERC20": [
        90777
      ],
      "IERC20MetadataUpgradeable": [
        89934
      ],
      "IERC20Upgradeable": [
        89909
      ],
      "IFlywheelBooster": [
        69133
      ],
      "IMultipleRewards": [
        61857
      ],
      "IPriceOracle": [
        33790
      ],
      "ISynthereumDeployment": [
        34251
      ],
      "ISynthereumFinder": [
        34271
      ],
      "ISynthereumLiquidityPool": [
        34504
      ],
      "ISynthereumLiquidityPoolGeneral": [
        34510
      ],
      "IUniswapV2Factory": [
        35904
      ],
      "IUniswapV2Pair": [
        36146
      ],
      "IVault": [
        30847
      ],
      "Initializable": [
        89220
      ],
      "MasterPriceOracle": [
        41722
      ],
      "MockBoringERC20": [
        53134
      ],
      "MockERC20": [
        91538
      ],
      "MockVault": [
        62789
      ],
      "OwnableUpgradeable": [
        88998
      ],
      "SafeERC20": [
        91001
      ],
      "SafeTransferLib": [
        92309
      ],
      "StdStorage": [
        70711
      ],
      "Test": [
        70613
      ],
      "UniswapTwapPriceOracleV2": [
        45408
      ],
      "UniswapTwapPriceOracleV2Factory": [
        45559
      ],
      "UniswapTwapPriceOracleV2Root": [
        46513
      ],
      "Vm": [
        72013
      ],
      "WETH": [
        92005
      ],
      "console": [
        80077
      ],
      "console2": [
        88141
      ],
      "stdError": [
        70683
      ],
      "stdMath": [
        71812
      ],
      "stdStorage": [
        71668
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4650:201",
    "nodes": [
      {
        "id": 53068,
        "nodeType": "PragmaDirective",
        "src": "39:25:201",
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".23"
        ]
      },
      {
        "id": 53069,
        "nodeType": "ImportDirective",
        "src": "66:33:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/config/BaseTest.t.sol",
        "file": "./config/BaseTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 60253,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53070,
        "nodeType": "ImportDirective",
        "src": "100:48:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/compound/strategies/BeamERC4626.sol",
        "file": "../compound/strategies/BeamERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 31004,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53071,
        "nodeType": "ImportDirective",
        "src": "149:36:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/contracts/test/mocks/beam/MockVault.sol",
        "file": "./mocks/beam/MockVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 62790,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53072,
        "nodeType": "ImportDirective",
        "src": "186:28:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 71813,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53073,
        "nodeType": "ImportDirective",
        "src": "215:65:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 91002,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53075,
        "nodeType": "ImportDirective",
        "src": "281:49:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 91927,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53074,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "290:5:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53077,
        "nodeType": "ImportDirective",
        "src": "331:67:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "file": "solmate/test/utils/mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 91539,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53076,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "340:9:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53079,
        "nodeType": "ImportDirective",
        "src": "399:50:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/solmate/src/auth/Auth.sol",
        "file": "solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 91491,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53078,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "408:9:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53081,
        "nodeType": "ImportDirective",
        "src": "450:88:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/flywheel-v2/src/rewards/FlywheelDynamicRewards.sol",
        "file": "flywheel-v2/rewards/FlywheelDynamicRewards.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 69434,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53080,
              "name": "FlywheelDynamicRewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "459:22:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53083,
        "nodeType": "ImportDirective",
        "src": "539:60:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/flywheel-v2/src/FlywheelCore.sol",
        "file": "flywheel-v2/FlywheelCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 69108,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53082,
              "name": "FlywheelCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "548:12:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53085,
        "nodeType": "ImportDirective",
        "src": "600:79:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/flywheel-v2/src/interfaces/IFlywheelBooster.sol",
        "file": "flywheel-v2/interfaces/IFlywheelBooster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 69134,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53084,
              "name": "IFlywheelBooster",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "609:16:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53087,
        "nodeType": "ImportDirective",
        "src": "680:98:201",
        "absolutePath": "/Users/carlomazzaferro/projects/eth/contracts/lib/fuse-flywheel/src/rewards/FuseFlywheelDynamicRewards.sol",
        "file": "fuse-flywheel/rewards/FuseFlywheelDynamicRewards.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53650,
        "sourceUnit": 88875,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53086,
              "name": "FuseFlywheelDynamicRewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "689:26:201",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53134,
        "nodeType": "ContractDefinition",
        "src": "780:392:201",
        "nodes": [
          {
            "id": 53104,
            "nodeType": "FunctionDefinition",
            "src": "822:120:201",
            "body": {
              "id": 53103,
              "nodeType": "Block",
              "src": "940:2:201",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53098,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53091,
                    "src": "917:4:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 53099,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53093,
                    "src": "923:6:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 53100,
                    "name": "decimal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53095,
                    "src": "931:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 53101,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53097,
                  "name": "MockERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91538,
                  "src": "907:9:201"
                },
                "nodeType": "ModifierInvocation",
                "src": "907:32:201"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53091,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "853:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 53104,
                  "src": "839:18:201",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 53090,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:6:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53093,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "877:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 53104,
                  "src": "863:20:201",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 53092,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:6:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53095,
                  "mutability": "mutable",
                  "name": "decimal",
                  "nameLocation": "895:7:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 53104,
                  "src": "889:13:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 53094,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "889:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "833:73:201"
            },
            "returnParameters": {
              "id": 53102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:0:201"
            },
            "scope": 53134,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53120,
            "nodeType": "FunctionDefinition",
            "src": "946:132:201",
            "body": {
              "id": 53119,
              "nodeType": "Block",
              "src": "1037:41:201",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53114,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53106,
                        "src": "1056:4:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53115,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53108,
                        "src": "1062:2:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53116,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53110,
                        "src": "1066:6:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53113,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91737,
                      "src": "1043:12:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 53117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1043:30:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53118,
                  "nodeType": "ExpressionStatement",
                  "src": "1043:30:201"
                }
              ]
            },
            "functionSelector": "42842e0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "955:16:201",
            "parameters": {
              "id": 53111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53106,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "985:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 53120,
                  "src": "977:12:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53108,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1003:2:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 53120,
                  "src": "995:10:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53110,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1019:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 53120,
                  "src": "1011:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:58:201"
            },
            "returnParameters": {
              "id": 53112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:201"
            },
            "scope": 53134,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53133,
            "nodeType": "FunctionDefinition",
            "src": "1082:88:201",
            "body": {
              "id": 53132,
              "nodeType": "Block",
              "src": "1139:31:201",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53128,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53122,
                        "src": "1154:2:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53129,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53124,
                        "src": "1158:6:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53127,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91676,
                      "src": "1145:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 53130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:20:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53131,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:20:201"
                }
              ]
            },
            "functionSelector": "423f6cef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nameLocation": "1091:12:201",
            "parameters": {
              "id": 53125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53122,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1112:2:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 53133,
                  "src": "1104:10:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53124,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1124:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 53133,
                  "src": "1116:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:28:201"
            },
            "returnParameters": {
              "id": 53126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:201"
            },
            "scope": 53134,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53088,
              "name": "MockERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91538,
              "src": "808:9:201"
            },
            "id": 53089,
            "nodeType": "InheritanceSpecifier",
            "src": "808:9:201"
          }
        ],
        "canonicalName": "MockBoringERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53134,
          91538,
          91926
        ],
        "name": "MockBoringERC20",
        "nameLocation": "789:15:201",
        "scope": 53650,
        "usedErrors": []
      },
      {
        "id": 53649,
        "nodeType": "ContractDefinition",
        "src": "1174:3514:201",
        "nodes": [
          {
            "id": 53140,
            "nodeType": "UsingForDirective",
            "src": "1215:32:201",
            "libraryName": {
              "id": 53137,
              "name": "stdStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 71668,
              "src": "1221:10:201"
            },
            "typeName": {
              "id": 53139,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53138,
                "name": "StdStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 70711,
                "src": "1236:10:201"
              },
              "referencedDeclaration": 70711,
              "src": "1236:10:201",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$70711_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 53143,
            "nodeType": "VariableDeclaration",
            "src": "1250:23:201",
            "constant": false,
            "mutability": "mutable",
            "name": "beamErc4626",
            "nameLocation": "1262:11:201",
            "scope": 53649,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
              "typeString": "contract BeamERC4626"
            },
            "typeName": {
              "id": 53142,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53141,
                "name": "BeamERC4626",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31003,
                "src": "1250:11:201"
              },
              "referencedDeclaration": 31003,
              "src": "1250:11:201",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                "typeString": "contract BeamERC4626"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53146,
            "nodeType": "VariableDeclaration",
            "src": "1277:22:201",
            "constant": false,
            "mutability": "mutable",
            "name": "mockBeamChef",
            "nameLocation": "1287:12:201",
            "scope": 53649,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVault_$62789",
              "typeString": "contract MockVault"
            },
            "typeName": {
              "id": 53145,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53144,
                "name": "MockVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 62789,
                "src": "1277:9:201"
              },
              "referencedDeclaration": 62789,
              "src": "1277:9:201",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVault_$62789",
                "typeString": "contract MockVault"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53149,
            "nodeType": "VariableDeclaration",
            "src": "1303:25:201",
            "constant": false,
            "mutability": "mutable",
            "name": "testToken",
            "nameLocation": "1319:9:201",
            "scope": 53649,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
              "typeString": "contract MockBoringERC20"
            },
            "typeName": {
              "id": 53148,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53147,
                "name": "MockBoringERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53134,
                "src": "1303:15:201"
              },
              "referencedDeclaration": 53134,
              "src": "1303:15:201",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                "typeString": "contract MockBoringERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53152,
            "nodeType": "VariableDeclaration",
            "src": "1332:20:201",
            "constant": false,
            "mutability": "mutable",
            "name": "glintToken",
            "nameLocation": "1342:10:201",
            "scope": 53649,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$91538",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 53151,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53150,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 91538,
                "src": "1332:9:201"
              },
              "referencedDeclaration": 91538,
              "src": "1332:9:201",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$91538",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53155,
            "nodeType": "VariableDeclaration",
            "src": "1356:15:201",
            "constant": false,
            "mutability": "mutable",
            "name": "marketKey",
            "nameLocation": "1362:9:201",
            "scope": 53649,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$91926",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 53154,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53153,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 91926,
                "src": "1356:5:201"
              },
              "referencedDeclaration": 91926,
              "src": "1356:5:201",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$91926",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53158,
            "nodeType": "VariableDeclaration",
            "src": "1375:21:201",
            "constant": false,
            "mutability": "mutable",
            "name": "flywheel",
            "nameLocation": "1388:8:201",
            "scope": 53649,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FlywheelCore_$69107",
              "typeString": "contract FlywheelCore"
            },
            "typeName": {
              "id": 53157,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53156,
                "name": "FlywheelCore",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 69107,
                "src": "1375:12:201"
              },
              "referencedDeclaration": 69107,
              "src": "1375:12:201",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                "typeString": "contract FlywheelCore"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53161,
            "nodeType": "VariableDeclaration",
            "src": "1400:42:201",
            "constant": false,
            "mutability": "mutable",
            "name": "flywheelRewards",
            "nameLocation": "1427:15:201",
            "scope": 53649,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
              "typeString": "contract FuseFlywheelDynamicRewards"
            },
            "typeName": {
              "id": 53160,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53159,
                "name": "FuseFlywheelDynamicRewards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 88874,
                "src": "1400:26:201"
              },
              "referencedDeclaration": 88874,
              "src": "1400:26:201",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                "typeString": "contract FuseFlywheelDynamicRewards"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 53164,
            "nodeType": "VariableDeclaration",
            "src": "1447:27:201",
            "constant": false,
            "mutability": "mutable",
            "name": "depositAmount",
            "nameLocation": "1455:13:201",
            "scope": 53649,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 53162,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1447:7:201",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 53163,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1471:3:201",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "internal"
          },
          {
            "id": 53336,
            "nodeType": "FunctionDefinition",
            "src": "1479:1024:201",
            "body": {
              "id": 53335,
              "nodeType": "Block",
              "src": "1542:961:201",
              "statements": [
                {
                  "expression": {
                    "id": 53176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53172,
                      "name": "testToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53149,
                      "src": "1548:9:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                        "typeString": "contract MockBoringERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307839393538383836376538313730323331363246346434383239393935323939303534613566433537",
                          "id": 53174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1576:42:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x99588867e817023162F4d4829995299054a5fC57"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53173,
                        "name": "MockBoringERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53134,
                        "src": "1560:15:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MockBoringERC20_$53134_$",
                          "typeString": "type(contract MockBoringERC20)"
                        }
                      },
                      "id": 53175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1560:59:201",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                        "typeString": "contract MockBoringERC20"
                      }
                    },
                    "src": "1548:71:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                      "typeString": "contract MockBoringERC20"
                    }
                  },
                  "id": 53177,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:71:201"
                },
                {
                  "expression": {
                    "id": 53182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53178,
                      "name": "glintToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53152,
                      "src": "1625:10:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$91538",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307863643342353144393834373844353346343531354133303662453536356336456562654631443538",
                          "id": 53180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1648:42:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xcd3B51D98478D53F4515A306bE565c6EebeF1D58"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53179,
                        "name": "MockERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91538,
                        "src": "1638:9:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MockERC20_$91538_$",
                          "typeString": "type(contract MockERC20)"
                        }
                      },
                      "id": 53181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1638:53:201",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$91538",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1625:66:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$91538",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 53183,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:66:201"
                },
                {
                  "expression": {
                    "id": 53205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53184,
                      "name": "mockBeamChef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53146,
                      "src": "1697:12:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVault_$62789",
                        "typeString": "contract MockVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 53191,
                                  "name": "testToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53149,
                                  "src": "1747:9:201",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                                    "typeString": "contract MockBoringERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                                    "typeString": "contract MockBoringERC20"
                                  }
                                ],
                                "id": 53190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1739:7:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53189,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1739:7:201",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1739:18:201",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53188,
                            "name": "IBoringERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61825,
                            "src": "1726:12:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBoringERC20_$61825_$",
                              "typeString": "type(contract IBoringERC20)"
                            }
                          },
                          "id": 53193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1726:32:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$61825",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 53194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1760:1:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 53197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1771:1:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 53196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1763:7:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1763:7:201",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1763:10:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 53199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1775:1:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 53202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1786:1:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 53201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1778:7:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1778:7:201",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1778:10:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IBoringERC20_$61825",
                            "typeString": "contract IBoringERC20"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1712:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IBoringERC20_$61825_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_MockVault_$62789_$",
                          "typeString": "function (contract IBoringERC20,uint256,address,uint256,address) returns (contract MockVault)"
                        },
                        "typeName": {
                          "id": 53186,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53185,
                            "name": "MockVault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 62789,
                            "src": "1716:9:201"
                          },
                          "referencedDeclaration": 62789,
                          "src": "1716:9:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVault_$62789",
                            "typeString": "contract MockVault"
                          }
                        }
                      },
                      "id": 53204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1712:77:201",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVault_$62789",
                        "typeString": "contract MockVault"
                      }
                    },
                    "src": "1697:92:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVault_$62789",
                      "typeString": "contract MockVault"
                    }
                  },
                  "id": 53206,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:92:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 53210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1803:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 53207,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60051,
                        "src": "1795:2:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$72013",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71820,
                      "src": "1795:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 53211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:10:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53212,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:10:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 53216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1819:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 53213,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60051,
                        "src": "1811:2:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$72013",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71825,
                      "src": "1811:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 53217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:10:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53218,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:10:201"
                },
                {
                  "expression": {
                    "id": 53247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53219,
                      "name": "flywheel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53158,
                      "src": "1828:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                        "typeString": "contract FlywheelCore"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 53223,
                          "name": "glintToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53152,
                          "src": "1863:10:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$91538",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 53227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1912:1:201",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 53226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1904:7:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53225,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1904:7:201",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1904:10:201",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53224,
                            "name": "FlywheelDynamicRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69433,
                            "src": "1881:22:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FlywheelDynamicRewards_$69433_$",
                              "typeString": "type(contract FlywheelDynamicRewards)"
                            }
                          },
                          "id": 53229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1881:34:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FlywheelDynamicRewards_$69433",
                            "typeString": "contract FlywheelDynamicRewards"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 53233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1948:1:201",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 53232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1940:7:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53231,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1940:7:201",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1940:10:201",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53230,
                            "name": "IFlywheelBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69133,
                            "src": "1923:16:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IFlywheelBooster_$69133_$",
                              "typeString": "type(contract IFlywheelBooster)"
                            }
                          },
                          "id": 53235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1923:28:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFlywheelBooster_$69133",
                            "typeString": "contract IFlywheelBooster"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 53238,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1967:4:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                "typeString": "contract BeamERC4626Test"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                "typeString": "contract BeamERC4626Test"
                              }
                            ],
                            "id": 53237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1959:7:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53236,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1959:7:201",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1959:13:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 53243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1998:1:201",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 53242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1990:7:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53241,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1990:7:201",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1990:10:201",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53240,
                            "name": "Authority",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91490,
                            "src": "1980:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Authority_$91490_$",
                              "typeString": "type(contract Authority)"
                            }
                          },
                          "id": 53245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1980:21:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Authority_$91490",
                            "typeString": "contract Authority"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$91538",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_FlywheelDynamicRewards_$69433",
                            "typeString": "contract FlywheelDynamicRewards"
                          },
                          {
                            "typeIdentifier": "t_contract$_IFlywheelBooster_$69133",
                            "typeString": "contract IFlywheelBooster"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_Authority_$91490",
                            "typeString": "contract Authority"
                          }
                        ],
                        "id": 53222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1839:16:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$91926_$_t_contract$_IFlywheelRewards_$69166_$_t_contract$_IFlywheelBooster_$69133_$_t_address_$_t_contract$_Authority_$91490_$returns$_t_contract$_FlywheelCore_$69107_$",
                          "typeString": "function (contract ERC20,contract IFlywheelRewards,contract IFlywheelBooster,address,contract Authority) returns (contract FlywheelCore)"
                        },
                        "typeName": {
                          "id": 53221,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53220,
                            "name": "FlywheelCore",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 69107,
                            "src": "1843:12:201"
                          },
                          "referencedDeclaration": 69107,
                          "src": "1843:12:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                            "typeString": "contract FlywheelCore"
                          }
                        }
                      },
                      "id": 53246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1839:168:201",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                        "typeString": "contract FlywheelCore"
                      }
                    },
                    "src": "1828:179:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                      "typeString": "contract FlywheelCore"
                    }
                  },
                  "id": 53248,
                  "nodeType": "ExpressionStatement",
                  "src": "1828:179:201"
                },
                {
                  "expression": {
                    "id": 53256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53249,
                      "name": "flywheelRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53161,
                      "src": "2014:15:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                        "typeString": "contract FuseFlywheelDynamicRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 53253,
                          "name": "flywheel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53158,
                          "src": "2063:8:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                            "typeString": "contract FlywheelCore"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 53254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2073:1:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                            "typeString": "contract FlywheelCore"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 53252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2032:30:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_FlywheelCore_$69107_$_t_uint32_$returns$_t_contract$_FuseFlywheelDynamicRewards_$88874_$",
                          "typeString": "function (contract FlywheelCore,uint32) returns (contract FuseFlywheelDynamicRewards)"
                        },
                        "typeName": {
                          "id": 53251,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53250,
                            "name": "FuseFlywheelDynamicRewards",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 88874,
                            "src": "2036:26:201"
                          },
                          "referencedDeclaration": 88874,
                          "src": "2036:26:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                            "typeString": "contract FuseFlywheelDynamicRewards"
                          }
                        }
                      },
                      "id": 53255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2032:43:201",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                        "typeString": "contract FuseFlywheelDynamicRewards"
                      }
                    },
                    "src": "2014:61:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                      "typeString": "contract FuseFlywheelDynamicRewards"
                    }
                  },
                  "id": 53257,
                  "nodeType": "ExpressionStatement",
                  "src": "2014:61:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53261,
                        "name": "flywheelRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53161,
                        "src": "2109:15:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                          "typeString": "contract FuseFlywheelDynamicRewards"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                          "typeString": "contract FuseFlywheelDynamicRewards"
                        }
                      ],
                      "expression": {
                        "id": 53258,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53158,
                        "src": "2081:8:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 53260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setFlywheelRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68859,
                      "src": "2081:27:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IFlywheelRewards_$69166_$returns$__$",
                        "typeString": "function (contract IFlywheelRewards) external"
                      }
                    },
                    "id": 53262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:44:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53263,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:44:201"
                },
                {
                  "expression": {
                    "id": 53279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53264,
                      "name": "beamErc4626",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53143,
                      "src": "2132:11:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                        "typeString": "contract BeamERC4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 53268,
                          "name": "testToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53149,
                          "src": "2162:9:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                            "typeString": "contract MockBoringERC20"
                          }
                        },
                        {
                          "id": 53269,
                          "name": "flywheel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53158,
                          "src": "2173:8:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                            "typeString": "contract FlywheelCore"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 53270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2183:1:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 53271,
                          "name": "glintToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53152,
                          "src": "2186:10:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$91538",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 53275,
                                  "name": "mockBeamChef",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53146,
                                  "src": "2213:12:201",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockVault_$62789",
                                    "typeString": "contract MockVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockVault_$62789",
                                    "typeString": "contract MockVault"
                                  }
                                ],
                                "id": 53274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2205:7:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53273,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2205:7:201",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2205:21:201",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53272,
                            "name": "IVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30847,
                            "src": "2198:6:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVault_$30847_$",
                              "typeString": "type(contract IVault)"
                            }
                          },
                          "id": 53277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2198:29:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$30847",
                            "typeString": "contract IVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                            "typeString": "contract MockBoringERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                            "typeString": "contract FlywheelCore"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_contract$_MockERC20_$91538",
                            "typeString": "contract MockERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_IVault_$30847",
                            "typeString": "contract IVault"
                          }
                        ],
                        "id": 53267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2146:15:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$91926_$_t_contract$_FlywheelCore_$69107_$_t_uint256_$_t_contract$_ERC20_$91926_$_t_contract$_IVault_$30847_$returns$_t_contract$_BeamERC4626_$31003_$",
                          "typeString": "function (contract ERC20,contract FlywheelCore,uint256,contract ERC20,contract IVault) returns (contract BeamERC4626)"
                        },
                        "typeName": {
                          "id": 53266,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53265,
                            "name": "BeamERC4626",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31003,
                            "src": "2150:11:201"
                          },
                          "referencedDeclaration": 31003,
                          "src": "2150:11:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                            "typeString": "contract BeamERC4626"
                          }
                        }
                      },
                      "id": 53278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2146:82:201",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                        "typeString": "contract BeamERC4626"
                      }
                    },
                    "src": "2132:96:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                      "typeString": "contract BeamERC4626"
                    }
                  },
                  "id": 53280,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:96:201"
                },
                {
                  "expression": {
                    "id": 53288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53281,
                      "name": "marketKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53155,
                      "src": "2234:9:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$91926",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 53285,
                              "name": "beamErc4626",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53143,
                              "src": "2260:11:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                                "typeString": "contract BeamERC4626"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                                "typeString": "contract BeamERC4626"
                              }
                            ],
                            "id": 53284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2252:7:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53283,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2252:7:201",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2252:20:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53282,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91926,
                        "src": "2246:5:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$91926_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 53287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2246:27:201",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$91926",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2234:39:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$91926",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 53289,
                  "nodeType": "ExpressionStatement",
                  "src": "2234:39:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53293,
                        "name": "marketKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53155,
                        "src": "2310:9:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$91926",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$91926",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "expression": {
                        "id": 53290,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53158,
                        "src": "2279:8:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 53292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addStrategyForRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68752,
                      "src": "2279:30:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$91926_$returns$__$",
                        "typeString": "function (contract ERC20) external"
                      }
                    },
                    "id": 53294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:41:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53295,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:41:201"
                },
                {
                  "assignments": [
                    53300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53300,
                      "mutability": "mutable",
                      "name": "rewarders",
                      "nameLocation": "2353:9:201",
                      "nodeType": "VariableDeclaration",
                      "scope": 53335,
                      "src": "2327:35:201",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IMultipleRewards_$61857_$dyn_memory_ptr",
                        "typeString": "contract IMultipleRewards[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 53298,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53297,
                            "name": "IMultipleRewards",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 61857,
                            "src": "2327:16:201"
                          },
                          "referencedDeclaration": 61857,
                          "src": "2327:16:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMultipleRewards_$61857",
                            "typeString": "contract IMultipleRewards"
                          }
                        },
                        "id": 53299,
                        "nodeType": "ArrayTypeName",
                        "src": "2327:18:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IMultipleRewards_$61857_$dyn_storage_ptr",
                          "typeString": "contract IMultipleRewards[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53307,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 53305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2388:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2365:22:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IMultipleRewards_$61857_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract IMultipleRewards[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 53302,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53301,
                            "name": "IMultipleRewards",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 61857,
                            "src": "2369:16:201"
                          },
                          "referencedDeclaration": 61857,
                          "src": "2369:16:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMultipleRewards_$61857",
                            "typeString": "contract IMultipleRewards"
                          }
                        },
                        "id": 53303,
                        "nodeType": "ArrayTypeName",
                        "src": "2369:18:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IMultipleRewards_$61857_$dyn_storage_ptr",
                          "typeString": "contract IMultipleRewards[]"
                        }
                      }
                    },
                    "id": 53306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:25:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IMultipleRewards_$61857_$dyn_memory_ptr",
                      "typeString": "contract IMultipleRewards[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2327:63:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 53311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2413:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53315,
                                "name": "testToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53149,
                                "src": "2437:9:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                                  "typeString": "contract MockBoringERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                                  "typeString": "contract MockBoringERC20"
                                }
                              ],
                              "id": 53314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2429:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53313,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2429:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2429:18:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 53312,
                          "name": "IBoringERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61825,
                          "src": "2416:12:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBoringERC20_$61825_$",
                            "typeString": "type(contract IBoringERC20)"
                          }
                        },
                        "id": 53317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2416:32:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$61825",
                          "typeString": "contract IBoringERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 53319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2453:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 53320,
                        "name": "rewarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53300,
                        "src": "2456:9:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IMultipleRewards_$61857_$dyn_memory_ptr",
                          "typeString": "contract IMultipleRewards[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_contract$_IBoringERC20_$61825",
                          "typeString": "contract IBoringERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IMultipleRewards_$61857_$dyn_memory_ptr",
                          "typeString": "contract IMultipleRewards[] memory"
                        }
                      ],
                      "expression": {
                        "id": 53308,
                        "name": "mockBeamChef",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53146,
                        "src": "2396:12:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockVault_$62789",
                          "typeString": "contract MockVault"
                        }
                      },
                      "id": 53310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62428,
                      "src": "2396:16:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_contract$_IBoringERC20_$61825_$_t_uint16_$_t_uint256_$_t_array$_t_contract$_IMultipleRewards_$61857_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,contract IBoringERC20,uint16,uint256,contract IMultipleRewards[] memory) external"
                      }
                    },
                    "id": 53321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2396:70:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53322,
                  "nodeType": "ExpressionStatement",
                  "src": "2396:70:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 53326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2480:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 53323,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60051,
                        "src": "2472:2:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$72013",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71820,
                      "src": "2472:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 53327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2472:10:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53328,
                  "nodeType": "ExpressionStatement",
                  "src": "2472:10:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 53332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2496:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "id": 53329,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60051,
                        "src": "2488:2:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$72013",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71825,
                      "src": "2488:7:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 53333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:10:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53334,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:10:201"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 53168,
                        "name": "MOONBEAM_MAINNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60057,
                        "src": "1523:16:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53167,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        60231,
                        60251
                      ],
                      "referencedDeclaration": 60231,
                      "src": "1513:9:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 53169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:27:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 53170,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53166,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60218,
                  "src": "1503:9:201"
                },
                "nodeType": "ModifierInvocation",
                "src": "1503:38:201"
              }
            ],
            "name": "setUp",
            "nameLocation": "1488:5:201",
            "parameters": {
              "id": 53165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:2:201"
            },
            "returnParameters": {
              "id": 53171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1542:0:201"
            },
            "scope": 53649,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53438,
            "nodeType": "FunctionDefinition",
            "src": "2507:581:201",
            "body": {
              "id": 53437,
              "nodeType": "Block",
              "src": "2586:502:201",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53345,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "2601:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          },
                          "id": 53346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91559,
                          "src": "2601:16:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 53347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2601:18:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53348,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53149,
                            "src": "2621:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          },
                          "id": 53349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91559,
                          "src": "2621:14:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 53350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2621:16:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 53344,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 68356,
                      "src": "2592:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 53351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2592:46:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53352,
                  "nodeType": "ExpressionStatement",
                  "src": "2592:46:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53354,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "2653:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          },
                          "id": 53355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91561,
                          "src": "2653:18:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 53356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2653:20:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53357,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53149,
                            "src": "2675:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          },
                          "id": 53358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91561,
                          "src": "2675:16:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 53359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2675:18:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 53353,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 68356,
                      "src": "2644:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 53360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:50:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53361,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:50:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53365,
                                "name": "beamErc4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53143,
                                "src": "2717:11:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                                  "typeString": "contract BeamERC4626"
                                }
                              },
                              "id": 53366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "asset",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65398,
                              "src": "2717:17:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$91926_$",
                                "typeString": "function () view external returns (contract ERC20)"
                              }
                            },
                            "id": 53367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2717:19:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$91926",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$91926",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 53364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2709:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53363,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2709:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2709:28:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53371,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53149,
                            "src": "2747:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          ],
                          "id": 53370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2739:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53369,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2739:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2739:18:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 53362,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67037,
                      "src": "2700:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 53373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:58:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53374,
                  "nodeType": "ExpressionStatement",
                  "src": "2700:58:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 53378,
                                "name": "beamErc4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53143,
                                "src": "2781:11:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                                  "typeString": "contract BeamERC4626"
                                }
                              },
                              "id": 53379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "VAULT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30859,
                              "src": "2781:17:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IVault_$30847_$",
                                "typeString": "function () view external returns (contract IVault)"
                              }
                            },
                            "id": 53380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2781:19:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$30847",
                              "typeString": "contract IVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVault_$30847",
                              "typeString": "contract IVault"
                            }
                          ],
                          "id": 53377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2773:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2773:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2773:28:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53384,
                            "name": "mockBeamChef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53146,
                            "src": "2811:12:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVault_$62789",
                              "typeString": "contract MockVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVault_$62789",
                              "typeString": "contract MockVault"
                            }
                          ],
                          "id": 53383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2803:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53382,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2803:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2803:21:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 53375,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67037,
                      "src": "2764:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 53386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:61:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53387,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:61:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53391,
                            "name": "marketKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53155,
                            "src": "2848:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$91926",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$91926",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 53390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2840:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53389,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2840:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2840:18:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53395,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "2868:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          ],
                          "id": 53394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2860:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53393,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2860:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2860:20:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 53388,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67037,
                      "src": "2831:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 53397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2831:50:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53398,
                  "nodeType": "ExpressionStatement",
                  "src": "2831:50:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53404,
                                "name": "beamErc4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53143,
                                "src": "2924:11:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                                  "typeString": "contract BeamERC4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                                  "typeString": "contract BeamERC4626"
                                }
                              ],
                              "id": 53403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2916:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53402,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2916:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2916:20:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53408,
                                "name": "mockBeamChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53146,
                                "src": "2946:12:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$62789",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$62789",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 53407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2938:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53406,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2938:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2938:21:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53400,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53149,
                            "src": "2896:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          },
                          "id": 53401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91575,
                          "src": "2896:19:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 53410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2896:64:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2967:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 53412,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2967:7:201",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 53411,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2962:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 53414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2962:13:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 53415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2962:17:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53399,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "2887:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2887:93:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53417,
                  "nodeType": "ExpressionStatement",
                  "src": "2887:93:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53423,
                                "name": "beamErc4626",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53143,
                                "src": "3024:11:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                                  "typeString": "contract BeamERC4626"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                                  "typeString": "contract BeamERC4626"
                                }
                              ],
                              "id": 53422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3016:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53421,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3016:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3016:20:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 53427,
                                "name": "flywheelRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53161,
                                "src": "3046:15:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                                  "typeString": "contract FuseFlywheelDynamicRewards"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FuseFlywheelDynamicRewards_$88874",
                                  "typeString": "contract FuseFlywheelDynamicRewards"
                                }
                              ],
                              "id": 53426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3038:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53425,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3038:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3038:24:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53419,
                            "name": "glintToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53152,
                            "src": "2995:10:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$91538",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 53420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91575,
                          "src": "2995:20:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 53429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2995:68:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3070:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 53431,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3070:7:201",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 53430,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3065:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 53433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3065:13:201",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 53434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3065:17:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53418,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "2986:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:97:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53436,
                  "nodeType": "ExpressionStatement",
                  "src": "2986:97:201"
                }
              ]
            },
            "functionSelector": "70bdc855",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 53340,
                        "name": "MOONBEAM_MAINNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60057,
                        "src": "2567:16:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53339,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        60231,
                        60251
                      ],
                      "referencedDeclaration": 60231,
                      "src": "2557:9:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 53341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2557:27:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 53342,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53338,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60218,
                  "src": "2547:9:201"
                },
                "nodeType": "ModifierInvocation",
                "src": "2547:38:201"
              }
            ],
            "name": "testInitializedValues",
            "nameLocation": "2516:21:201",
            "parameters": {
              "id": 53337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2537:2:201"
            },
            "returnParameters": {
              "id": 53343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2586:0:201"
            },
            "scope": 53649,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53526,
            "nodeType": "FunctionDefinition",
            "src": "3092:619:201",
            "body": {
              "id": 53525,
              "nodeType": "Block",
              "src": "3121:590:201",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307834353743354238413632323446353234643966313566413642366437306643616438454261363233",
                        "id": 53444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3136:42:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x457C5B8A6224F524d9f15fA6B6d70fCad8EBa623"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53441,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60051,
                        "src": "3127:2:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$72013",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71900,
                      "src": "3127:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3127:52:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53446,
                  "nodeType": "ExpressionStatement",
                  "src": "3127:52:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307834353743354238413632323446353234643966313566413642366437306643616438454261363233",
                        "id": 53450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3203:42:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x457C5B8A6224F524d9f15fA6B6d70fCad8EBa623"
                      },
                      {
                        "id": 53451,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "3247:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53447,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53149,
                        "src": "3185:9:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                          "typeString": "contract MockBoringERC20"
                        }
                      },
                      "id": 53449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91643,
                      "src": "3185:17:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 53452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3185:76:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53453,
                  "nodeType": "ExpressionStatement",
                  "src": "3185:76:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307834353743354238413632323446353234643966313566413642366437306643616438454261363233",
                        "id": 53457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3276:42:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x457C5B8A6224F524d9f15fA6B6d70fCad8EBa623"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53454,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60051,
                        "src": "3267:2:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$72013",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 53456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71900,
                      "src": "3267:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 53458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:52:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53459,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:52:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307834353743354238413632323446353234643966313566413642366437306643616438454261363233",
                        "id": 53463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3348:42:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x457C5B8A6224F524d9f15fA6B6d70fCad8EBa623"
                      },
                      {
                        "arguments": [
                          {
                            "id": 53466,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3400:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          ],
                          "id": 53465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3392:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3392:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3392:13:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53468,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "3407:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53460,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53149,
                        "src": "3325:9:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                          "typeString": "contract MockBoringERC20"
                        }
                      },
                      "id": 53462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91737,
                      "src": "3325:22:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 53469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3325:96:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53470,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:96:201"
                },
                {
                  "assignments": [
                    53472
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53472,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3435:7:201",
                      "nodeType": "VariableDeclaration",
                      "scope": 53525,
                      "src": "3427:15:201",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53471,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3427:7:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53480,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53477,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3473:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          ],
                          "id": 53476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3465:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53475,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3465:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3465:13:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53473,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53149,
                        "src": "3445:9:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                          "typeString": "contract MockBoringERC20"
                        }
                      },
                      "id": 53474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91569,
                      "src": "3445:19:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 53479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:34:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3427:52:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53486,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "3511:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          ],
                          "id": 53485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3503:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53484,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3503:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3503:20:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53488,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "3525:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53481,
                        "name": "testToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53149,
                        "src": "3485:9:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                          "typeString": "contract MockBoringERC20"
                        }
                      },
                      "id": 53483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91643,
                      "src": "3485:17:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 53489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3485:54:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53490,
                  "nodeType": "ExpressionStatement",
                  "src": "3485:54:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53495,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "3567:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          ],
                          "id": 53494,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91926,
                          "src": "3561:5:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$91926_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 53496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3561:18:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$91926",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53499,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3589:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          ],
                          "id": 53498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3581:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53497,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3581:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3581:13:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$91926",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53491,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53158,
                        "src": "3545:8:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 53493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accrue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68642,
                      "src": "3545:15:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$91926_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,address) external returns (uint256)"
                      }
                    },
                    "id": 53501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3545:50:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53502,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:50:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53506,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "3621:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53509,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3644:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          ],
                          "id": 53508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3636:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53507,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3636:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3636:13:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53503,
                        "name": "beamErc4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53143,
                        "src": "3601:11:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                          "typeString": "contract BeamERC4626"
                        }
                      },
                      "id": 53505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65472,
                      "src": "3601:19:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 53511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:49:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53512,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:49:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 53517,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "3678:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          ],
                          "id": 53516,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91926,
                          "src": "3672:5:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$91926_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 53518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3672:18:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$91926",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53521,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3700:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          ],
                          "id": 53520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3692:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53519,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3692:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3692:13:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$91926",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53513,
                        "name": "flywheel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53158,
                        "src": "3656:8:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlywheelCore_$69107",
                          "typeString": "contract FlywheelCore"
                        }
                      },
                      "id": 53515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "accrue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68642,
                      "src": "3656:15:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$91926_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,address) external returns (uint256)"
                      }
                    },
                    "id": 53523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3656:50:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53524,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:50:201"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "3101:8:201",
            "parameters": {
              "id": 53439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3109:2:201"
            },
            "returnParameters": {
              "id": 53440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3121:0:201"
            },
            "scope": 53649,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53589,
            "nodeType": "FunctionDefinition",
            "src": "3715:521:201",
            "body": {
              "id": 53588,
              "nodeType": "Block",
              "src": "3784:452:201",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 53534,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53526,
                      "src": "3790:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:10:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53536,
                  "nodeType": "ExpressionStatement",
                  "src": "3790:10:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53542,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3844:4:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              ],
                              "id": 53541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3836:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3836:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3836:13:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53538,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53149,
                            "src": "3816:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          },
                          "id": 53539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "3816:19:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3816:34:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3852:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53537,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "3807:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3807:47:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53547,
                  "nodeType": "ExpressionStatement",
                  "src": "3807:47:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53553,
                                "name": "mockBeamChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53146,
                                "src": "3897:12:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$62789",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$62789",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 53552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3889:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53551,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3889:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3889:21:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53549,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53149,
                            "src": "3869:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          },
                          "id": 53550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "3869:19:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3869:42:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53556,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "3913:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53548,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "3860:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3860:67:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53558,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:67:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53560,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "3990:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          },
                          "id": 53561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalAssets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30955,
                          "src": "3990:23:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 53562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3990:25:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53563,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "4017:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53559,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "3981:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:50:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53565,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:50:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53571,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4086:4:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              ],
                              "id": 53570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4078:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53569,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4078:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4078:13:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53567,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "4046:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          },
                          "id": 53568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOfUnderlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30970,
                          "src": "4046:31:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4046:46:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53574,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "4094:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53566,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "4037:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4037:71:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53576,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:71:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53582,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4209:4:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              ],
                              "id": 53581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4201:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53580,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4201:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4201:13:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53578,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "4179:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          },
                          "id": 53579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "4179:21:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4179:36:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53585,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "4217:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53577,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "4170:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4170:61:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53587,
                  "nodeType": "ExpressionStatement",
                  "src": "4170:61:201"
                }
              ]
            },
            "functionSelector": "7f924c4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 53530,
                        "name": "MOONBEAM_MAINNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60057,
                        "src": "3765:16:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53529,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        60231,
                        60251
                      ],
                      "referencedDeclaration": 60231,
                      "src": "3755:9:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 53531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3755:27:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 53532,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53528,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60218,
                  "src": "3745:9:201"
                },
                "nodeType": "ModifierInvocation",
                "src": "3745:38:201"
              }
            ],
            "name": "testDeposit",
            "nameLocation": "3724:11:201",
            "parameters": {
              "id": 53527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3735:2:201"
            },
            "returnParameters": {
              "id": 53533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3784:0:201"
            },
            "scope": 53649,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53648,
            "nodeType": "FunctionDefinition",
            "src": "4240:446:201",
            "body": {
              "id": 53647,
              "nodeType": "Block",
              "src": "4310:376:201",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 53597,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53526,
                      "src": "4316:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4316:10:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53599,
                  "nodeType": "ExpressionStatement",
                  "src": "4316:10:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53603,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "4353:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53606,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4376:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          ],
                          "id": 53605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4368:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53604,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4368:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4368:13:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53610,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4391:4:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                              "typeString": "contract BeamERC4626Test"
                            }
                          ],
                          "id": 53609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4383:7:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53608,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4383:7:201",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4383:13:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 53600,
                        "name": "beamErc4626",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53143,
                        "src": "4332:11:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                          "typeString": "contract BeamERC4626"
                        }
                      },
                      "id": 53602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65596,
                      "src": "4332:20:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,address) external returns (uint256)"
                      }
                    },
                    "id": 53612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4332:65:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53613,
                  "nodeType": "ExpressionStatement",
                  "src": "4332:65:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53619,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4485:4:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              ],
                              "id": 53618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4477:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53617,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4477:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4477:13:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53615,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53149,
                            "src": "4457:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          },
                          "id": 53616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "4457:19:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4457:34:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53622,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "4493:13:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53614,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "4448:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:59:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53624,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:59:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53630,
                                "name": "mockBeamChef",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53146,
                                "src": "4550:12:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockVault_$62789",
                                  "typeString": "contract MockVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockVault_$62789",
                                  "typeString": "contract MockVault"
                                }
                              ],
                              "id": 53629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4542:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53628,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4542:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4542:21:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53626,
                            "name": "testToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53149,
                            "src": "4522:9:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBoringERC20_$53134",
                              "typeString": "contract MockBoringERC20"
                            }
                          },
                          "id": 53627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "4522:19:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4522:42:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4566:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53625,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "4513:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:55:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53635,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:55:201"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 53641,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4671:4:201",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BeamERC4626Test_$53649",
                                  "typeString": "contract BeamERC4626Test"
                                }
                              ],
                              "id": 53640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4663:7:201",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 53639,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4663:7:201",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4663:13:201",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53637,
                            "name": "beamErc4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53143,
                            "src": "4641:11:201",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeamERC4626_$31003",
                              "typeString": "contract BeamERC4626"
                            }
                          },
                          "id": 53638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 91569,
                          "src": "4641:21:201",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 53643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4641:36:201",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4679:1:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 53636,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        67037,
                        67062,
                        67092,
                        67117,
                        67176,
                        67201,
                        67231,
                        67256,
                        68356,
                        68391
                      ],
                      "referencedDeclaration": 67231,
                      "src": "4632:8:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 53645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:49:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53646,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:49:201"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 53593,
                        "name": "MOONBEAM_MAINNET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60057,
                        "src": "4291:16:201",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53592,
                      "name": "forChains",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        60231,
                        60251
                      ],
                      "referencedDeclaration": 60231,
                      "src": "4281:9:201",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 53594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4281:27:201",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 53595,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53591,
                  "name": "shouldRun",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60218,
                  "src": "4271:9:201"
                },
                "nodeType": "ModifierInvocation",
                "src": "4271:38:201"
              }
            ],
            "name": "testWithdraw",
            "nameLocation": "4249:12:201",
            "parameters": {
              "id": 53590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4261:2:201"
            },
            "returnParameters": {
              "id": 53596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4310:0:201"
            },
            "scope": 53649,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53135,
              "name": "BaseTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60252,
              "src": "1202:8:201"
            },
            "id": 53136,
            "nodeType": "InheritanceSpecifier",
            "src": "1202:8:201"
          }
        ],
        "canonicalName": "BeamERC4626Test",
        "contractDependencies": [
          31003,
          62789,
          65355,
          69107,
          88874
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53649,
          60252,
          68503
        ],
        "name": "BeamERC4626Test",
        "nameLocation": "1183:15:201",
        "scope": 53650,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}